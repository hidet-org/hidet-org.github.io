Search.setIndex({"docnames": ["developer-guides/contributing", "gallery/developer-guides/add-new-operator-compute-definition", "gallery/developer-guides/add-new-operator-rule-based", "gallery/developer-guides/add-new-operator-template-based", "gallery/developer-guides/add-operator-resolve-rule", "gallery/developer-guides/add-subgraph-rewrite-rule", "gallery/developer-guides/hidet-script-dynamic-kernel", "gallery/developer-guides/index", "gallery/developer-guides/sg_execution_times", "gallery/getting-started/index", "gallery/getting-started/quick-start", "gallery/getting-started/sg_execution_times", "gallery/hidet-script/0-hello-world", "gallery/hidet-script/1-scalar-addition", "gallery/hidet-script/2-vector-addition", "gallery/hidet-script/3-kernel-functions", "gallery/hidet-script/4-naive-matmul", "gallery/hidet-script/5-efficient-matmul", "gallery/hidet-script/index", "gallery/hidet-script/sg_execution_times", "gallery/how-to-guides/index", "gallery/how-to-guides/sg_execution_times", "gallery/how-to-guides/visualize-flow-graph", "gallery/index", "gallery/tutorials/index", "gallery/tutorials/optimize-onnx-model", "gallery/tutorials/optimize-pytorch-model", "gallery/tutorials/sg_execution_times", "genindex", "getting-started/build-from-source", "getting-started/install", "hidet-script/examples/index", "hidet-script/index", "hidet-script/reference/1-type-system", "hidet-script/reference/2-expression", "hidet-script/reference/3-statement", "hidet-script/reference/4-function", "hidet-script/reference/5-module", "hidet-script/reference/6-cuda-specific", "hidet-script/reference/7-cpu-specific", "hidet-script/reference/index", "how-to-guides/add-new-operator/index", "index", "notes/operator-cache", "python_api/cuda", "python_api/data_types", "python_api/driver", "python_api/graph/frontend/index", "python_api/graph/frontend/onnx", "python_api/graph/frontend/torch", "python_api/graph/index", "python_api/graph/transforms/index", "python_api/graph/transforms/resolve_variant", "python_api/graph/transforms/subgraph_rewrite", "python_api/index", "python_api/ir/compute", "python_api/ir/expr", "python_api/ir/func", "python_api/ir/index", "python_api/ir/stmt", "python_api/ir/task", "python_api/ir/type", "python_api/ops/index", "python_api/option", "python_api/root", "python_api/runtime/index", "python_api/tensor", "python_api/testing/index", "python_api/utils/index"], "filenames": ["developer-guides/contributing.rst", "gallery/developer-guides/add-new-operator-compute-definition.rst", "gallery/developer-guides/add-new-operator-rule-based.rst", "gallery/developer-guides/add-new-operator-template-based.rst", "gallery/developer-guides/add-operator-resolve-rule.rst", "gallery/developer-guides/add-subgraph-rewrite-rule.rst", "gallery/developer-guides/hidet-script-dynamic-kernel.rst", "gallery/developer-guides/index.rst", "gallery/developer-guides/sg_execution_times.rst", "gallery/getting-started/index.rst", "gallery/getting-started/quick-start.rst", "gallery/getting-started/sg_execution_times.rst", "gallery/hidet-script/0-hello-world.rst", "gallery/hidet-script/1-scalar-addition.rst", "gallery/hidet-script/2-vector-addition.rst", "gallery/hidet-script/3-kernel-functions.rst", "gallery/hidet-script/4-naive-matmul.rst", "gallery/hidet-script/5-efficient-matmul.rst", "gallery/hidet-script/index.rst", "gallery/hidet-script/sg_execution_times.rst", "gallery/how-to-guides/index.rst", "gallery/how-to-guides/sg_execution_times.rst", "gallery/how-to-guides/visualize-flow-graph.rst", "gallery/index.rst", "gallery/tutorials/index.rst", "gallery/tutorials/optimize-onnx-model.rst", "gallery/tutorials/optimize-pytorch-model.rst", "gallery/tutorials/sg_execution_times.rst", "genindex.rst", "getting-started/build-from-source.rst", "getting-started/install.rst", "hidet-script/examples/index.rst", "hidet-script/index.rst", "hidet-script/reference/1-type-system.rst", "hidet-script/reference/2-expression.rst", "hidet-script/reference/3-statement.rst", "hidet-script/reference/4-function.rst", "hidet-script/reference/5-module.rst", "hidet-script/reference/6-cuda-specific.rst", "hidet-script/reference/7-cpu-specific.rst", "hidet-script/reference/index.rst", "how-to-guides/add-new-operator/index.rst", "index.rst", "notes/operator-cache.rst", "python_api/cuda.rst", "python_api/data_types.rst", "python_api/driver.rst", "python_api/graph/frontend/index.rst", "python_api/graph/frontend/onnx.rst", "python_api/graph/frontend/torch.rst", "python_api/graph/index.rst", "python_api/graph/transforms/index.rst", "python_api/graph/transforms/resolve_variant.rst", "python_api/graph/transforms/subgraph_rewrite.rst", "python_api/index.rst", "python_api/ir/compute.rst", "python_api/ir/expr.rst", "python_api/ir/func.rst", "python_api/ir/index.rst", "python_api/ir/stmt.rst", "python_api/ir/task.rst", "python_api/ir/type.rst", "python_api/ops/index.rst", "python_api/option.rst", "python_api/root.rst", "python_api/runtime/index.rst", "python_api/tensor.rst", "python_api/testing/index.rst", "python_api/utils/index.rst"], "titles": ["Contributing", "Define Operator Computation", "Using Rule-based Scheduling", "Using Template-based Scheduling", "Add Operator Resolve Rule", "Add Sub-Graph Rewrite Rule", "Writing Dynamic kernel", "&lt;no title&gt;", "Computation times", "Index", "Quick Start", "Computation times", "Hello World!", "Scalar Addition", "Vector Addition", "Kernel Functions", "Naive Matrix Multiplication", "More Efficient Matrix Multiplication", "Index", "Computation times", "Index", "Computation times", "Visualize Flow Graph", "Index", "Tutorials", "Optimize ONNX Model", "Optimize PyTorch Model", "Computation times", "Index", "Build from source", "Installation", "Examples", "Introduction", "Type System", "Expressions", "Statements", "Function", "Module", "CUDA Specifics", "CPU Specifics", "Reference", "Add New Operator", "Welcome to Hidet\u2019s Documentation", "Operator Cache", "hidet.cuda", "hidet.dtypes", "hidet.drivers", "hidet.graph.frontend", "hidet.graph.frontend.onnx", "hidet.graph.frontend.torch", "hidet.graph", "hidet.graph.transforms", "Resolve Operator Pass", "Sub-graph Rewrite Pass", "Python API", "hidet.ir.compute", "hidet.ir.expr", "hidet.ir.func", "hidet.ir", "hidet.ir.stmt", "hidet.ir.task", "hidet.ir.type", "hidet.ops", "hidet.option", "hidet", "hidet.runtime", "hidet.Tensor", "hidet.testing", "hidet.utils"], "terms": {"To": [0, 3, 4, 10, 22, 25, 26, 29, 30, 32, 33, 34, 35, 38, 39, 43, 50, 63], "thi": [0, 1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 31, 34, 35, 38, 44, 49, 50, 52, 57, 60, 62, 63, 64, 66, 68], "project": [0, 10], "pleas": [0, 1, 17, 26, 32, 35, 38, 39, 50, 55], "fork": 0, "hidet": [0, 1, 2, 3, 4, 6, 8, 12, 13, 14, 15, 16, 17, 22, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 52, 53, 54], "repositori": [0, 29, 43], "creat": [0, 1, 5, 10, 14, 25, 36, 37, 44, 50, 56, 63, 64, 66, 68], "pull": 0, "request": [0, 44], "befor": [0, 4, 5, 22, 25, 44, 50, 63], "submit": [0, 25], "make": [0, 26, 29, 35, 38, 49], "sure": [0, 26, 29], "your": [0, 10, 12, 29], "code": [0, 1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 33, 43, 63], "i": [0, 1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 49, 50, 53, 56, 57, 62, 63, 64, 66, 67, 68], "properli": 0, "format": [0, 10, 17, 25, 63], "pass": [0, 4, 5, 10, 22, 50, 51], "test": [0, 6, 10, 16, 17, 25, 54], "lint": 0, "run": [0, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 22, 26, 29, 30, 31, 43, 44, 50, 63], "follow": [0, 1, 3, 4, 5, 10, 12, 13, 15, 25, 29, 30, 33, 34, 35, 36, 38, 40, 43, 44, 52, 56, 63], "script": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 15, 16, 17, 19, 22, 25, 26, 32, 33, 34, 35, 64], "onli": [0, 2, 4, 5, 15, 33, 36, 44, 50, 57, 63, 64], "onc": 0, "instal": [0, 42], "develop": [0, 3, 4, 29], "depend": [0, 1, 26, 43], "pip": [0, 29, 30], "r": 0, "requir": [0, 10, 13, 38, 50, 64], "dev": 0, "txt": [0, 43], "bash": 0, "sh": 0, "us": [0, 1, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 17, 22, 23, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 49, 50, 52, 53, 55, 56, 59, 62, 63, 64, 66], "clear": [0, 5, 49], "cach": [0, 2, 12, 13, 14, 15, 16, 26, 42, 63], "oper": [0, 5, 7, 8, 23, 25, 33, 34, 38, 39, 42, 44, 49, 50, 51, 53, 56, 60, 62, 63, 64, 66], "you": [0, 1, 3, 10, 12, 13, 14, 15, 16, 17, 22, 26, 29, 30, 43, 53], "chang": [0, 26, 33, 43, 66], "sub": [0, 7, 8, 23, 26, 42, 50, 51], "modul": [0, 1, 3, 12, 13, 14, 15, 16, 17, 22, 26, 33, 35, 36, 38, 40, 48, 49, 60], "ir": [0, 1, 2, 3, 6, 32, 49, 50, 52, 63, 64], "backend": [0, 10, 26], "pytest": 0, "go": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 50], "end": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 42, 44, 56, 62], "download": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 30, 43], "full": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 38, 50, 62, 64], "each": [1, 5, 6, 10, 13, 15, 17, 22, 26, 31, 37, 38, 40, 50, 62, 63, 64, 66, 67, 68], "take": [1, 2, 6, 10, 26, 49, 50, 55, 62, 63], "list": [1, 4, 5, 10, 12, 33, 38, 44, 50, 52, 53, 55, 57, 62, 64, 66, 67, 68], "input": [1, 2, 3, 4, 5, 10, 14, 16, 17, 22, 25, 44, 49, 50, 52, 53, 55, 60, 62, 63, 64], "tensor": [1, 2, 4, 5, 6, 14, 16, 17, 22, 25, 26, 32, 34, 38, 41, 44, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 64, 68], "produc": [1, 10, 34, 62, 66], "output": [1, 2, 3, 4, 5, 10, 12, 14, 25, 26, 43, 44, 49, 50, 52, 53, 55, 60, 62, 64, 66], "our": [1, 2, 4, 12, 15, 17, 50], "pioneer": 1, "halid": 1, "apach": 1, "tvm": 1, "also": [1, 2, 3, 4, 5, 10, 12, 13, 15, 22, 25, 30, 33, 35, 38, 39, 41, 44, 50, 62, 64, 66], "emploi": 1, "similar": [1, 6, 33], "dsl": [1, 32], "mathemat": [1, 41], "definit": [1, 2, 3, 8, 35, 68], "an": [1, 2, 3, 4, 5, 10, 12, 15, 22, 25, 26, 34, 41, 42, 43, 44, 48, 50, 52, 53, 55, 56, 62, 63, 64, 66, 68], "The": [1, 2, 3, 4, 5, 10, 12, 13, 15, 22, 25, 26, 29, 32, 33, 34, 35, 37, 38, 40, 43, 44, 48, 49, 50, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68], "precis": [1, 10, 50, 62], "through": [1, 10, 25, 26, 50, 64], "domain": [1, 3, 12, 32, 55], "specif": [1, 3, 4, 10, 12, 32, 33, 34, 40], "languag": [1, 3, 12, 32, 40], "In": [1, 2, 3, 4, 5, 10, 12, 13, 14, 16, 17, 22, 25, 26, 33, 52], "tutori": [1, 2, 3, 4, 5, 10, 22, 25], "we": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 29, 33, 34, 35, 37, 38, 43, 44, 50, 52, 53, 54, 62, 63, 64], "show": [1, 2, 5, 10, 12, 13, 14, 16, 17, 22, 33, 63], "how": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 16, 17, 22, 25, 26, 31, 33, 35, 50, 52, 55, 61, 64, 66], "new": [1, 3, 4, 5, 8, 26, 29, 33, 42, 50, 53, 63, 64, 66], "which": [1, 5, 10, 12, 14, 25, 44, 49, 50, 62, 64], "provid": [1, 2, 4, 10, 22, 26, 38, 39, 44, 49, 50], "tensor_input": [1, 55, 58], "name": [1, 2, 3, 5, 10, 12, 13, 15, 22, 25, 26, 33, 34, 36, 37, 50, 53, 55, 57, 60, 61, 63, 64, 65], "str": [1, 3, 48, 49, 50, 55, 57, 60, 61, 62, 63, 64, 66], "dtype": [1, 2, 3, 6, 10, 14, 16, 17, 22, 26, 33, 38, 50, 54, 55, 61, 62, 63, 64, 66], "shape": [1, 2, 3, 4, 5, 6, 10, 14, 16, 17, 22, 25, 26, 35, 38, 50, 52, 55, 62, 63, 64, 66, 68], "int": [1, 4, 15, 16, 17, 44, 49, 50, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68], "specifi": [1, 5, 12, 15, 26, 33, 35, 38, 39, 50, 55, 63, 64, 66], "hint": [1, 44, 55], "scalar": [1, 18, 19, 22, 23, 31, 39, 52, 55, 66], "data": [1, 2, 10, 13, 14, 25, 33, 34, 40, 49, 50, 55, 61, 62, 64, 66, 68], "type": [1, 4, 5, 10, 13, 14, 15, 16, 34, 37, 38, 40, 44, 48, 49, 50, 52, 53, 55, 56, 57, 58, 60, 62, 63, 64, 66, 67, 68], "float32": [1, 2, 4, 5, 6, 10, 12, 13, 14, 15, 17, 22, 26, 33, 34, 45, 50, 55, 62, 64], "10": [1, 10, 14, 26, 35, 38], "b": [1, 2, 3, 4, 5, 6, 10, 13, 14, 15, 16, 17, 33, 34, 38, 52, 62, 63, 68], "float16": [1, 3, 10, 26, 33, 45, 49, 50], "1": [1, 3, 4, 5, 6, 10, 13, 14, 15, 16, 17, 19, 22, 25, 26, 33, 34, 35, 44, 49, 50, 52, 53, 62, 63, 64, 67, 68], "3": [1, 4, 5, 10, 13, 14, 15, 19, 22, 25, 26, 33, 34, 35, 50, 62, 64, 68], "224": [1, 10, 25, 26], "fcomput": [1, 2, 3, 55], "callabl": [1, 25, 44, 52, 55, 60, 67, 68], "var": [1, 55, 62, 63], "expr": [1, 50, 55, 58, 62, 64], "just": [1, 5], "what": [1, 3, 4, 10, 50, 64], "repres": [1, 10, 25, 33, 34, 53, 62, 68], "function": [1, 3, 6, 10, 12, 13, 14, 18, 19, 22, 23, 25, 26, 31, 33, 34, 37, 40, 44, 50, 52, 55, 56, 57, 58, 60, 62, 63, 64, 65, 67, 68], "map": [1, 3, 5, 6, 17, 33, 34, 39, 53, 56], "index": [1, 10, 15, 30, 33, 38, 42, 55, 62, 66], "express": [1, 33, 40, 56], "valu": [1, 5, 10, 13, 15, 22, 34, 39, 44, 49, 50, 55, 57, 59, 62, 63, 64, 66], "element": [1, 10, 14, 33, 50, 62, 64, 66], "independ": 1, "other": [1, 3, 4, 5, 10, 15, 36, 37, 38, 40, 44, 50, 52, 62, 64], "can": [1, 2, 3, 4, 5, 10, 12, 13, 14, 15, 16, 22, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 50, 52, 57, 63, 64, 65], "parallel": [1, 5, 10, 35, 41, 49, 50, 62, 63], "semant": [1, 4, 33, 34, 35], "out": [1, 12, 13, 14, 15, 16, 22, 25, 26, 50], "hint_nam": 1, "n1": 1, "n2": 1, "nk": 1, "lambda": [1, 2, 3, 6, 17, 25], "i1": 1, "i2": 1, "ik": 1, "f": [1, 6, 17, 22, 25, 33], "rang": [1, 3, 6, 10, 14, 15, 16, 17, 35, 44, 62, 63], "last": [1, 5], "if_then_els": [1, 56, 58], "condit": [1, 15, 34, 56], "slice": [1, 56], "first": [1, 2, 4, 5, 12, 13, 22, 25, 26, 29, 43, 52, 68], "column": [1, 33], "0": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 25, 26, 27, 33, 34, 35, 44, 49, 50, 52, 62, 63, 64], "2": [1, 3, 4, 5, 6, 10, 14, 17, 19, 22, 25, 26, 33, 34, 35, 49, 50, 52, 62, 63, 64, 68], "revers": [1, 62], "row": [1, 33, 50, 64, 66], "matrix": [1, 3, 4, 5, 6, 10, 14, 15, 18, 19, 23, 31, 38, 49, 50, 62, 63], "c": [1, 2, 3, 4, 5, 6, 10, 14, 15, 16, 17, 22, 29, 30, 33, 34, 35, 38, 62], "j": [1, 2, 3, 6, 15, 16, 17, 35, 63], "9": [1, 10, 25, 26], "add": [1, 2, 3, 7, 8, 10, 13, 14, 22, 23, 35, 38, 39, 42, 43, 50, 62, 68], "diagon": 1, "from": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 30, 33, 35, 37, 38, 39, 44, 50, 52, 53, 56, 62, 63, 64, 66, 68], "import": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 29, 30, 33, 35, 37, 38, 43, 44, 50, 52], "d": [1, 10, 16, 17, 33, 35, 38], "diag_add": 1, "then_expr": [1, 56], "else_expr": [1, 56], "reduc": [1, 2, 3, 4, 50, 55, 58, 62, 66], "reduce_typ": [1, 2, 3, 55], "sum": [1, 2, 3, 13, 62, 66], "conduct": [1, 25, 50, 62, 67, 68], "reduct": [1, 2, 3, 10, 26, 49, 50, 55, 62], "given": [1, 2, 10, 14, 25, 26, 33, 44, 48, 50, 53, 60, 62, 64, 66, 67, 68], "It": [1, 5, 10, 25, 26, 37, 41, 44, 55, 63], "return": [1, 2, 3, 4, 5, 6, 10, 12, 13, 16, 17, 22, 25, 26, 29, 33, 44, 48, 49, 50, 52, 53, 55, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68], "max": [1, 62], "min": [1, 62], "avg": 1, "append": [1, 35, 50, 63], "all": [1, 6, 12, 17, 25, 26, 38, 42, 44, 50, 62, 63, 64], "multipl": [1, 3, 4, 5, 10, 18, 19, 23, 25, 26, 31, 33, 34, 37, 38, 49, 50, 62, 63, 64, 68], "e": [1, 2, 4, 5, 10, 12, 25, 29, 33, 34, 36, 63, 66, 68], "k": [1, 2, 3, 4, 6, 10, 15, 16, 17, 49, 50, 62], "arg_reduc": [1, 55, 58], "extent": [1, 14, 55], "differ": [1, 2, 3, 5, 10, 16, 17, 26, 63], "correspond": [1, 15, 39, 50, 55, 56, 64], "result": [1, 4, 15, 16, 26, 34, 50, 62], "instead": [1, 5, 26, 34, 44, 67, 68], "itself": [1, 26, 44, 50, 64], "find": [1, 5, 10, 15, 22, 26, 29, 63, 68], "describ": [1, 5, 40], "direct": [1, 5, 68], "acycl": [1, 5], "graph": [1, 2, 3, 4, 7, 8, 20, 21, 23, 25, 42, 52, 54, 62, 63, 64, 66, 68], "dag": [1, 5], "compos": [1, 33], "node": [1, 2, 5, 50, 55, 68], "both": [1, 3, 13, 25, 33], "edg": [1, 5, 68], "ar": [1, 2, 4, 5, 6, 10, 13, 15, 17, 25, 26, 33, 34, 35, 38, 39, 40, 41, 42, 44, 49, 50, 54, 56, 62, 63, 64], "between": [1, 5, 10, 26, 44, 63, 68], "Such": 1, "store": [1, 3, 6, 10, 17, 39, 50, 63, 64], "object": [1, 10, 25, 26, 44, 50, 64], "class": [1, 3, 4, 5, 22, 26, 44, 49, 50, 52, 53, 55, 56, 57, 59, 60, 61, 63, 65, 66, 68], "tensornod": [1, 2, 3, 55], "ha": [1, 2, 5, 6, 10, 12, 13, 17, 29, 33, 34, 35, 38, 40, 44, 50, 64, 66, 68], "correspongd": 1, "def": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 33, 37, 50, 52], "demo_task": 1, "print": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 49, 50], "paramet": [1, 3, 13, 14, 34, 44, 48, 49, 50, 52, 53, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68], "where": [1, 5, 10, 14, 26, 33, 34, 43, 44, 62, 66], "v": [1, 62], "v_1": 1, "v_2": 1, "attribut": [1, 2, 3, 10, 12, 33, 35, 39, 50, 57, 60, 64, 66], "Its": 1, "visual": [1, 20, 21, 23, 42], "5": [1, 14, 17, 19, 25, 26, 33, 35, 62, 63, 67, 68], "A": [1, 3, 4, 5, 10, 12, 25, 32, 34, 36, 37, 44, 49, 52, 53, 60, 62, 65, 66, 68], "driver": [1, 44], "build_task": 1, "doe": [1, 2, 3, 10, 26, 50, 64], "step": [1, 25, 62], "lower": [1, 10, 26, 50, 63], "schedul": [1, 4, 7, 8, 10, 23, 25, 26, 49, 50, 63], "program": [1, 2, 10, 12, 13, 14, 16, 17, 31, 32, 33, 40, 41], "irmodul": [1, 3], "dispatch": [1, 10], "accord": [1, 25], "target": [1, 5, 26, 32, 43, 50, 51, 53, 60, 66], "devic": [1, 2, 3, 4, 10, 14, 15, 16, 17, 36, 50, 57, 60, 62, 63, 64, 66], "optim": [1, 2, 4, 5, 17, 23, 24, 27, 32, 42, 50, 62], "gener": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 23, 25, 26, 33, 50, 53, 55, 60, 62, 63, 64], "translat": [1, 32], "sourc": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 30, 42, 43, 44, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68], "g": [1, 4, 10, 25, 33, 34], "cu": [1, 43], "call": [1, 2, 3, 5, 10, 12, 14, 15, 16, 25, 26, 34, 37, 44, 50, 53, 57, 63, 65, 68], "compil": [1, 10, 12, 13, 14, 16, 25, 26, 29, 32, 33, 37, 40, 43, 50, 56, 60, 63, 64, 65], "nvcc": [1, 43], "dynam": [1, 7, 8, 23, 25, 38, 57], "librari": [1, 12, 26], "lib": [1, 29, 43], "so": [1, 5, 12, 15, 29, 43, 44, 63], "load": [1, 2, 3, 6, 10, 17, 26, 38, 39, 43, 48, 50, 60], "wrap": [1, 2, 57], "compiledfunct": [1, 65], "directli": [1, 10, 12, 16, 25, 29, 31, 32, 36, 37, 44, 50, 65, 66], "run_task": 1, "runtim": [1, 12, 15, 16, 17, 29, 33, 37, 50, 54, 60], "compiledtask": [1, 60], "func": [1, 6, 34, 58, 60, 64], "cpu": [1, 2, 5, 6, 12, 14, 16, 17, 22, 25, 36, 40, 50, 57, 62, 64, 66], "run_async": [1, 44], "pai": 1, "attent": [1, 22, 26, 49, 50, 62], "former": 1, "trace": [1, 10, 49, 50, 53, 64, 66], "high": [1, 4, 42, 44], "level": [1, 3, 10, 25, 42, 49, 50, 62, 63, 66], "deep": [1, 5, 12, 25], "learn": [1, 2, 3, 4, 5, 10, 12, 22, 25], "model": [1, 4, 5, 23, 24, 27, 42, 43, 48, 50], "latter": 1, "singl": [1, 5, 10, 34, 50, 62, 63, 64, 67, 68], "add_exampl": 1, "randn": [1, 2, 3, 5, 6, 10, 14, 15, 16, 17, 22, 25, 26, 50, 64], "25": [1, 26], "46": [1, 26], "21": [1, 26], "01": [1, 2, 6, 8, 10, 14], "72": [1, 3, 26], "65": [1, 26], "67": [1, 2, 26], "47": [1, 26], "95": 1, "14": [1, 2, 26], "4": [1, 2, 3, 6, 13, 14, 15, 16, 17, 19, 25, 26, 33, 34, 35, 39, 62, 68], "96": 1, "86": 1, "op": [1, 2, 3, 4, 5, 10, 22, 43, 52, 54, 66], "submodul": [1, 12], "And": [1, 50, 64], "exist": [1, 4, 50, 64], "feel": [1, 3, 17], "free": [1, 3, 17, 44], "check": [1, 5, 10, 12, 15, 16, 25, 43, 44, 49, 62, 63, 66, 68], "about": [1, 5, 6, 10, 17], "At": 1, "reduce_sum_exampl": 1, "reduce_sum": [1, 66], "91": [1, 2], "52": [1, 26], "36": [1, 26], "11": [1, 3, 26], "34": [1, 26], "59": [1, 10, 26], "26": [1, 26], "04": [1, 2], "76": 1, "8": [1, 3, 6, 17, 22, 26, 33], "58": [1, 10, 11, 26], "68": [1, 26], "arg_max_exampl": 1, "arg_max": 1, "41": [1, 26], "05": [1, 26, 27, 62], "74": [1, 2, 14, 26], "64": [1, 2, 3, 6, 15, 17, 22, 26], "44": [1, 2, 26], "93": [1, 2], "13": [1, 6, 10, 26], "07": [1, 6, 26], "int64": [1, 4, 33, 45, 55], "matmul_exampl": 1, "85": 1, "75": [1, 3, 26, 62], "63": [1, 17, 26], "51": [1, 2, 14, 26], "39": [1, 26], "08": [1, 2, 27], "15": [1, 2, 3, 15, 16, 26], "02": [1, 27], "33": [1, 26], "19": [1, 26], "12": [1, 2, 6, 22, 26, 62, 68], "29": [1, 26], "73": 1, "18": [1, 2, 26], "softmax_exampl": 1, "exp": [1, 62], "max_val": [1, 62], "exp_a": 1, "exp_sum": 1, "16": [1, 3, 6, 15, 16, 17, 26], "57": [1, 14, 26], "38": [1, 2, 26], "introduc": [1, 3, 4, 10], "after": [1, 4, 5, 25, 26, 29, 44, 49, 50, 53, 63, 68], "next": [1, 2, 29], "total": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 25, 26, 27, 44, 63], "time": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 33, 44, 49, 50, 56, 63, 67, 68], "minut": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 49, 63], "148": [1, 8], "second": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 68], "python": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 30, 32, 34, 35, 36, 37, 42, 56, 63, 64], "py": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 25, 26, 27], "jupyt": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26], "notebook": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26], "ipynb": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26], "galleri": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 23, 25, 26], "sphinx": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 23, 25, 26], "previou": [2, 3, 44], "have": [2, 3, 4, 5, 10, 22, 25, 29, 33, 38, 50, 62, 63, 64, 68], "primit": [2, 15, 50, 55], "": [2, 4, 5, 10, 12, 25, 26, 32, 33, 41, 44, 50, 57, 64, 66], "automat": [2, 4, 5, 6, 10, 15, 17, 26, 36, 41, 43, 50, 55], "There": [2, 4, 5, 13, 25, 26, 33, 39, 41, 63], "inherit": [2, 53], "illustr": 2, "batchmatmultask": 2, "constructor": [2, 5, 38, 44, 53], "argument": [2, 13, 25, 33, 38, 44, 49, 50, 53, 60, 63, 64, 68], "__init__": [2, 3, 5, 22], "self": [2, 3, 4, 5, 22, 26, 31, 35, 50, 52, 66], "get": [2, 3, 4, 17, 22, 25, 26, 32, 34, 37, 39, 43, 44, 50, 57, 63, 66, 68], "size": [2, 3, 10, 15, 16, 17, 25, 33, 38, 49, 62, 66], "batch_siz": [2, 3, 22, 25, 62], "m_size": [2, 3, 6, 15, 16, 17, 62], "k_size": [2, 3, 6, 15, 16, 17, 62], "n_size": [2, 3, 6, 15, 16, 17, 62], "p": [2, 3, 35, 39, 62], "parent": 2, "initi": [2, 6, 10, 17, 39, 50, 64, 68], "super": [2, 3, 5, 22], "batch_matmul": [2, 4, 43, 62], "batchmatmulop": 2, "util": [2, 3, 5, 6, 15, 17, 22, 25, 54], "input_lik": [2, 3], "same": [2, 3, 4, 5, 10, 26, 33, 34, 35, 38, 44, 50, 52, 62, 63, 64, 66, 68], "get_output": 2, "wai": [2, 3, 4, 5, 10, 22, 25, 41], "For": [2, 4, 5, 10, 13, 14, 17, 33, 34, 36, 50], "when": [2, 3, 4, 5, 10, 15, 25, 26, 43, 44, 50, 52, 53, 57, 62, 63, 64, 67, 68], "flow": [2, 4, 20, 21, 23, 25, 26, 42, 50, 63, 64], "fuse": [2, 4, 5, 10, 39, 49, 50], "surround": [2, 4], "demo_usag": [2, 3], "6": [2, 5, 26, 33, 35, 68], "77": [2, 10], "82": [2, 3], "56": [2, 14, 26], "78": [2, 26], "55": [2, 26], "03": [2, 8], "53": [2, 26], "leav": 2, "method": [2, 12, 22, 25, 26, 44, 50, 52, 53, 57, 60, 62, 64, 68], "most": [2, 4, 25, 33, 50], "experi": 2, "achiev": [2, 10, 26, 41, 49, 63], "good": [2, 10], "perform": [2, 3, 5, 10, 16, 17, 25, 26, 33, 38, 41, 42, 49, 50, 62, 63], "do": [2, 3, 5, 10, 22, 26, 33, 50, 53, 62, 63], "larg": [2, 3, 10, 26, 49, 50, 63], "amount": [2, 3, 63], "howev": [2, 26, 34], "like": [2, 17, 29, 33, 34, 35, 37, 38, 50, 63, 64], "convolut": [2, 5, 10, 50], "etc": [2, 4, 26], "mai": [2, 10, 44], "abl": [2, 44], "best": [2, 10, 26, 49, 63], "share": [2, 3, 5, 10, 17, 38, 50, 57, 64, 66], "memori": [2, 3, 6, 10, 17, 33, 34, 39, 49, 50, 57, 61, 63, 64, 66], "thu": [2, 4, 5, 10, 26, 50, 52, 63, 64], "anoth": [2, 3, 5, 10, 44, 63, 66], "mechan": [2, 3, 4, 5], "templat": [2, 7, 8, 23, 41, 53], "better": [2, 10, 22, 25, 26, 29, 41, 50, 63], "317": [2, 8], "exampl": [3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 22, 25, 26, 32, 33, 42, 44, 50, 52, 62, 64, 68], "rule": [3, 7, 8, 23, 41, 42, 50, 52, 53], "conveni": 3, "effici": [3, 4, 5, 10, 18, 19, 23, 25, 31], "enough": 3, "allow": [3, 4, 22, 26, 50, 63], "u": [3, 4, 22, 26, 35], "instanti": [3, 53], "tunabl": [3, 63], "hyper": 3, "task": [3, 43, 44, 50, 55, 58, 62, 63], "two": [3, 4, 5, 13, 14, 29, 33, 34, 68], "implement_cpu": 3, "comput": [3, 4, 7, 10, 23, 25, 26, 29, 44, 50, 53, 58, 60, 66], "batchmatmulfp16task": 3, "batch_matmul_fp16": 3, "allow_epilogu": 3, "bool": [3, 33, 34, 44, 50, 57, 60, 62, 63, 64, 66, 67, 68], "fals": [3, 5, 10, 16, 17, 22, 25, 26, 34, 44, 49, 50, 53, 56, 57, 62, 63, 66, 67, 68], "working_dir": 3, "batch_matmul_mma_fp16_schedul": 3, "abov": [3, 5, 22, 63], "insid": [3, 12], "complic": 3, "should": [3, 25, 44, 50, 52, 53, 68], "know": [3, 5, 10, 26], "cuda": [3, 4, 6, 10, 16, 17, 25, 36, 40, 49, 50, 54, 57, 62, 64, 66], "skip": [3, 17], "now": [3, 4, 26], "write": [3, 7, 8, 12, 13, 14, 16, 17, 23, 31, 32, 33, 50], "syntax": [3, 32], "more": [3, 4, 5, 6, 10, 18, 19, 23, 25, 26, 31, 33, 49, 50, 54, 63], "document": [3, 12, 22, 54, 62], "futur": [3, 26, 66], "stabl": [3, 62], "lang": [3, 6, 12, 13, 14, 15, 16, 17, 33, 34, 35, 37, 38, 39], "f16": [3, 33, 34], "spatial": [3, 6, 17, 35], "repeat": [3, 4, 6, 17, 35, 39, 50, 62, 63, 67, 68], "shared_tensor": [3, 6, 17], "register_tensor": [3, 6, 17], "attr": [3, 5, 6, 12, 13, 14, 15, 16, 17, 33, 35, 37, 38, 57], "grid": [3, 15, 35, 38, 39, 55, 57], "printf": [3, 12, 16, 17, 33, 35], "cast": [3, 5, 26, 50, 62, 66], "blockidx": [3, 6, 15, 16, 17, 38], "threadidx": [3, 6, 15, 16, 17, 38], "syncthread": [3, 6, 17, 38], "mmaconfig": 3, "mma_sync": [3, 38], "workload": [3, 5, 15, 25], "mma_config": 3, "m16n8k8_f16_f16": 3, "block_m": 3, "block_n": 3, "block_k": 3, "128": [3, 22, 26], "warp_m": [3, 6, 17], "warp_n": [3, 6, 17], "warp_k": 3, "warp_count_m": 3, "warp_count_n": 3, "warp_count_k": 3, "mma_m": 3, "mma_n": 3, "mma_k": 3, "m": [3, 4, 6, 10, 17, 25, 62], "n": [3, 4, 6, 10, 12, 15, 16, 17, 33, 35, 62, 66, 68], "mma_count_m": 3, "mma_count_n": 3, "mma_count": 3, "thread": [3, 6, 15, 17, 35, 38, 44, 57, 62], "32": [3, 6, 13, 14, 17, 26], "script_modul": [3, 6, 12, 13, 14, 15, 16, 17, 33, 37], "load_regs_a": 3, "smem_a": [3, 6, 17], "regs_a": 3, "a_el": 3, "regist": [3, 4, 5, 6, 17, 38, 52, 53, 63], "warp_id": 3, "lane_id": 3, "x": [3, 4, 5, 6, 10, 15, 16, 17, 22, 26, 52, 62, 63], "wi": 3, "wj": 3, "wk": 3, "mi": 3, "a_load_map": 3, "load_regs_b": 3, "smem_b": [3, 6, 17], "regs_b": 3, "b_element": 3, "mj": 3, "b_load_map": 3, "warp_mma": 3, "regs_c": [3, 6, 17], "c_element": 3, "warp": [3, 6, 17, 38, 62], "store_c": 3, "global": [3, 6, 17, 37, 40], "offset_m": 3, "offset_n": 3, "y": [3, 5, 6, 10, 15, 16, 17, 62], "gmem_c": 3, "z": [3, 5], "k_round": 3, "c_store_map": 3, "protect": 3, "true": [3, 5, 10, 12, 15, 22, 25, 26, 34, 35, 44, 49, 50, 56, 57, 60, 62, 63, 66, 67, 68], "batch_matmul_kernel": 3, "batch": [3, 25, 62], "kernel": [3, 5, 7, 8, 10, 16, 17, 18, 19, 23, 25, 31, 33, 36, 38, 42, 43, 44, 49, 57, 62, 63], "grid_dim": [3, 6, 15, 16, 17, 38, 57], "block_dim": [3, 6, 15, 16, 17, 38, 57], "k0": 3, "offset_k": 3, "gmem_a": 3, "gmem_b": 3, "read": [3, 26], "ir_modul": 3, "remain": [3, 10], "part": [3, 5, 10], "batchmatmulfp16op": 3, "assert": [3, 5, 6, 10, 16, 17], "43": [3, 26], "99": 3, "54": [3, 10, 26], "71": [3, 26], "31": [3, 26], "62": [3, 26], "45": [3, 26], "shown": [3, 5], "basic": [3, 10, 25], "need": [3, 4, 5, 10, 22, 26, 29, 53], "builder": 3, "340": [3, 8], "usual": [4, 5, 10, 15, 26, 49], "would": [4, 10, 12, 25, 50, 63, 64], "reus": [4, 63], "highli": [4, 33], "implement": [4, 5, 10, 12, 17, 41, 50, 53, 64], "while": [4, 53], "organ": [4, 43], "modular": 4, "core": [4, 10, 38, 42, 49, 50, 62], "idea": 4, "defin": [4, 5, 7, 8, 12, 13, 14, 15, 16, 17, 23, 33, 34, 35, 36, 37, 38, 40, 50, 52, 53, 55, 60, 61, 66], "attach": 4, "origin": [4, 5, 10, 26, 50, 52], "replac": [4, 5, 52, 53], "process": [4, 5, 10, 32, 50, 63], "transpar": 4, "user": [4, 32, 41, 52, 63, 66], "done": [4, 5], "typic": 4, "scenario": 4, "special": [4, 5, 33], "variant": 4, "lot": [4, 63], "its": [4, 12, 40, 50], "suitabl": 4, "matmul": [4, 5, 6, 10, 15, 16, 17, 19, 22, 43, 50, 62], "numpi": [4, 6, 10, 25, 50, 62, 64, 66], "equival": [4, 10, 13, 33], "auto": 4, "veri": 4, "But": [4, 5, 10], "accept": [4, 25], "dure": [4, 44, 49, 50, 62, 63], "reshap": [4, 5, 10, 22, 62, 66], "broadcast": [4, 10, 39, 62], "align": 4, "final": [4, 26], "correct": [4, 10, 16, 49], "might": [4, 26, 44, 50, 66], "some": [4, 5, 10, 17, 26, 32, 33, 38, 49, 50, 63], "extra": [4, 30], "adjust": 4, "transpos": [4, 22, 62], "These": 4, "later": [4, 26, 33], "overhead": [4, 25], "neglig": 4, "effort": 4, "conv2d": [4, 5, 10, 26, 50, 62], "img2col": 4, "algorithm": 4, "until": [4, 44, 63], "subclass": [4, 49, 52], "resolverul": [4, 50, 51, 52], "decor": [4, 12, 52, 64, 68], "register_resolve_rul": [4, 50, 51, 52], "pow": [4, 52, 62], "normal": [4, 50, 62, 64], "expon": [4, 62], "constant": [4, 5, 10, 22, 26, 33, 34, 50, 56, 62, 64], "integ": [4, 33, 34, 62, 66, 68], "start": [4, 5, 9, 11, 22, 23, 32, 44, 56, 62], "let": [4, 5, 12, 26, 44], "look": 4, "behavior": [4, 10, 50], "symbol": [4, 5, 12, 15, 16, 17, 25, 49, 50, 64, 66], "asarrai": [4, 10, 50, 64], "trace_from": [4, 5, 10, 25, 50, 64], "without": [4, 5, 26, 43, 49], "graph_opt": [4, 5, 22, 25, 50], "x_1": [4, 5, 10, 22], "contain": [4, 5, 12, 22, 25, 31, 33, 35, 40, 44, 50, 63, 64], "see": [4, 5, 10, 12, 15, 17, 26, 50, 62, 66], "happen": [4, 26], "option": [4, 5, 10, 12, 13, 14, 15, 16, 25, 38, 43, 44, 50, 52, 54, 55, 56, 57, 62, 64, 66], "arithmet": [4, 10], "powop": [4, 52], "transform": [4, 5, 26, 50, 52, 53], "powresolverul": 4, "base": [4, 7, 8, 23, 41, 56, 64], "is_symbol": [4, 52, 53, 66], "len": [4, 5, 52, 62], "otherwis": [4, 5, 43, 44, 52, 53, 57, 63, 66], "none": [4, 5, 10, 25, 26, 44, 49, 50, 52, 53, 55, 57, 60, 62, 64, 66, 68], "indic": [4, 5, 10, 35, 50, 56, 62, 64, 66], "cannot": 4, "kept": 4, "again": [4, 63, 68], "one": [4, 5, 10, 15, 33, 35, 36, 44, 49, 50, 63, 64, 66], "graph_opt_new": 4, "fusedmultipli": 4, "fused_graph": [4, 5, 10, 22, 62], "flowgraph": [4, 5, 10, 22, 50, 62, 64], "multipli": [4, 6, 17, 33, 39, 50, 62], "anchor": [4, 5, 10, 22, 62], "detail": [4, 6, 17, 40, 50], "power": [4, 33, 34], "tool": [4, 12, 22, 29], "081": [4, 8], "pipelin": [5, 17], "techniqu": 5, "than": [5, 26, 34, 49, 63], "addit": [5, 10, 18, 19, 23, 31, 34], "concaten": 5, "taso": 5, "systemat": 5, "studi": 5, "becom": 5, "expos": [5, 15, 26, 36], "underli": 5, "hardwar": 5, "pattern": [5, 42, 50, 53], "match": [5, 53], "whether": [5, 10, 43, 44, 49, 50, 60, 63, 66, 67, 68], "concret": [5, 10, 41, 49, 66], "construct": [5, 10, 33, 50, 64], "further": [5, 25], "determin": [5, 33], "applic": 5, "If": [5, 10, 12, 13, 26, 29, 30, 33, 43, 44, 49, 50, 53, 55, 63, 64, 66, 68], "three": [5, 16, 25, 26, 34, 50], "x1": 5, "w1": 5, "w2": 5, "resolv": [5, 7, 8, 23, 42, 50, 51], "although": 5, "conceptu": 5, "consid": 5, "case": [5, 6, 12, 15, 17, 26, 33, 52, 57], "them": [5, 13, 15, 26, 40, 49], "execut": [5, 8, 10, 11, 19, 21, 25, 27, 32, 40, 44, 62, 63, 67, 68], "order": [5, 33, 44, 50, 64, 68], "arbitrari": [5, 16, 63], "number": [5, 13, 14, 25, 33, 34, 35, 38, 44, 50, 52, 57, 62, 63, 66, 67, 68], "expens": 5, "worri": 5, "want": [5, 26, 29, 30, 33, 50, 63], "graph_pattern": 5, "matchdict": 5, "example_model": 5, "w0": 5, "y1": [5, 10], "y2": [5, 10], "relu": [5, 17, 26, 62], "concat": [5, 62], "axi": [5, 22, 35, 62], "c_1": [5, 10, 22, 33], "c_2": [5, 22], "require_prologu": [5, 10, 22, 62], "x_2": [5, 10, 22], "x_3": [5, 22], "x_4": [5, 22], "x_5": [5, 22], "Then": [5, 22, 25, 32], "matmulop": 5, "concatop": 5, "tensorpattern": [5, 50, 51, 53], "subgraphrewriterul": [5, 50, 51, 53], "op_pattern": 5, "register_rewrite_rul": [5, 50, 51, 53], "same_list": 5, "fusetwomatmulrewriterul": 5, "c1": [5, 16, 17], "c2": [5, 16, 17], "either": 5, "is_const": [5, 53], "dictionari": 5, "dict": [5, 49, 50, 53, 63], "t": [5, 34], "weight": [5, 44, 49, 62], "matric": 5, "except": 5, "dimens": [5, 10, 15, 33, 38, 49, 50, 57, 62, 64, 66], "els": [5, 6, 17, 34, 56], "been": [5, 12, 29, 50, 68], "registered_rewrite_rul": 5, "clear_registered_rewrite_rul": 5, "isinst": [5, 6], "scale": [5, 62], "bia": [5, 26], "squeez": [5, 62, 66], "y3": 5, "binaryop": 5, "unaryop_left": 5, "unaryop_right": 5, "compositeop": 5, "unaryop": 5, "w": [5, 22, 35, 62], "w3": 5, "branch": 5, "split": [5, 49, 62], "c3": 5, "besid": [5, 10, 15, 41], "predefin": [5, 10, 50, 63], "includ": [5, 12, 15, 16, 17, 38, 39], "line": [5, 10, 12], "prevent": [5, 10, 62, 68], "default": [5, 10, 14, 15, 25, 26, 33, 34, 43, 44, 49, 50, 53, 57, 62, 63, 64], "being": 5, "subgraph_rewrite_pass": 5, "rewrite_pass": 5, "rewritten_graph": 5, "rewritten": 5, "becaus": [5, 10, 15, 26], "fold": [5, 26, 56], "explicitli": [5, 12, 35, 50, 64], "togeth": [5, 67, 68], "fusedmatmul": [5, 22], "compon": [5, 10, 22, 42], "framework": [5, 10, 25, 42, 64], "horizont": 5, "fusion": [5, 25, 26, 42, 62], "254": [5, 8], "subgraph": [5, 8, 50], "come": 6, "soon": 6, "matmul_simt_kernel": 6, "int32": [6, 14, 17, 22, 33, 45], "as_tensor_point": [6, 17], "auto_map": [6, 17], "layout": [6, 17, 50, 55, 64, 66], "row_major": [6, 17, 33], "local_layout": [6, 17], "warps_m": [6, 17], "warps_n": [6, 17], "4x2": [6, 17], "2x2": [6, 17], "warp_map_m": [6, 17], "warp_map_n": [6, 17], "2x16": [6, 17], "thread_m": [6, 17], "thread_n": [6, 17], "4x4": [6, 17], "block_siz": [6, 17], "256": [6, 15, 16, 17, 26], "block_m_siz": [6, 17], "block_n_siz": [6, 17], "block_k_siz": [6, 17], "num_warp": [6, 17], "num_thread": [6, 17], "matmul_kernel": [6, 16, 17], "a_ptr": [6, 16, 17], "mean": [6, 14, 25, 26, 35, 50, 53, 62, 64, 66], "pointer": [6, 16, 34], "b_ptr": [6, 16, 17], "c_ptr": [6, 16, 17], "func_nam": [6, 12, 17], "infer": [6, 15, 17, 25, 42, 64], "mma_map": [6, 17], "iter": [6, 14, 17], "over": [6, 14, 17], "tile": [6, 17, 62], "num_k_til": [6, 17], "k_tile": [6, 17], "worker": [6, 17, 35], "global_i": [6, 17], "global_k": [6, 17], "global_j": [6, 17], "synchron": [6, 10, 17, 38, 44, 63], "block": [6, 10, 15, 17, 38, 44, 57], "simt": [6, 17, 50, 62], "accumul": [6, 17, 26, 50, 55, 62], "mma": [6, 17, 50, 62], "back": [6, 17, 66], "build": [6, 12, 13, 14, 15, 16, 17, 30, 33, 37, 50, 58, 60, 63], "main": 6, "1024": [6, 15, 17, 33], "333": 6, "444": 6, "555": 6, "zero": [6, 10, 39, 50, 62, 64], "assert_allclos": [6, 25], "actual": [6, 10, 25, 26], "desir": [6, 25], "rtol": [6, 10, 15, 16, 17, 25], "1e": [6, 10, 15, 16, 17, 25, 26, 62], "atol": [6, 10, 15, 16, 17, 25], "hidet_lat": [6, 17], "benchmark_func": [6, 17, 25, 67, 68], "50": [6, 17, 26], "2f": 6, "1024x1024x1024": [6, 17], "333x555x444": 6, "1x13x12": 6, "801": [6, 8, 25], "rewrit": [7, 8, 23, 26, 42, 50, 51], "00": [8, 11, 19, 21, 26, 27], "940": 8, "gallery_develop": 8, "guid": [8, 10, 21], "file": [8, 11, 19, 21, 22, 25, 26, 27, 38, 50, 63], "mb": [8, 11, 19, 21, 27], "quick": [9, 11, 23, 42], "walk": [10, 25, 50, 64], "kei": [10, 22], "torch": [10, 15, 16, 17, 25, 26, 47, 50, 64, 66], "easiest": 10, "model_opt": [10, 26], "resnet18": [10, 26], "tf32": [10, 33], "enabl": [10, 26, 44, 50, 63], "cudnn": [10, 26], "slightli": 10, "low": 10, "could": [10, 29, 66], "disabl": [10, 26, 49, 50, 63], "hub": [10, 25, 26], "vision": [10, 25, 26], "v0": [10, 25, 26], "pretrain": [10, 25, 26], "verbos": [10, 25, 26, 63], "eval": [10, 25, 26], "uncom": 10, "tune": [10, 25, 42, 49, 50, 63], "dynamo_config": [10, 26], "search_spac": [10, 25, 26, 47, 49, 50, 63], "assert_clos": [10, 15, 16, 17], "expect": [10, 26], "benchmark": [10, 63, 67, 68], "eager": [10, 25], "start_ev": [10, 44], "event": 10, "enable_tim": [10, 44], "end_ev": 10, "record": [10, 26, 44], "_": [10, 22, 33], "100": 10, "3f": [10, 17, 25], "elapsed_tim": [10, 44], "250": 10, "137": 10, "One": 10, "try": [10, 63], "config": [10, 29, 50, 63], "small": [10, 26, 49, 50, 62], "search": [10, 25, 49, 50, 63], "space": [10, 25, 33, 43, 49, 50, 63], "longer": [10, 25, 26, 49, 50, 63], "nvidia": [10, 17, 25, 50, 62], "rtx": [10, 25], "4090": [10, 25], "176": 10, "286": 10, "configur": [10, 16, 17, 49, 50, 57], "control": [10, 26, 50, 63], "choos": 10, "larger": [10, 50], "report": [10, 26, 29, 49], "numer": [10, 26], "dynamo": [10, 26], "ones": [10, 17, 22, 50, 64], "empti": [10, 14, 15, 16, 17, 50, 64], "from_torch": [10, 25, 47, 49, 50, 64], "convert": [10, 26, 49, 50, 63, 64, 66], "ndarrai": [10, 50, 64, 66, 68], "arrai": [10, 50, 66], "As": [10, 40], "machin": [10, 22], "manipul": [10, 40], "randomli": [10, 50, 64], "24": [10, 14, 26], "23": [10, 26], "61": [10, 26], "tell": 10, "resid": [10, 38], "bunch": [10, 13], "28": [10, 26], "imper": 10, "style": 10, "intuit": 10, "easi": [10, 41, 42], "debug": [10, 63], "opportun": 10, "suffer": 10, "higher": [10, 25], "latenc": [10, 25, 50, 63, 67, 68], "section": [10, 31, 38, 40], "storag": [10, 50, 64, 66], "content": [10, 50, 64, 66], "symbol_lik": [10, 25, 50, 64], "ani": [10, 29, 33, 44, 49, 50, 57, 62, 63, 64, 66, 67, 68], "via": [10, 26, 29, 30, 44, 53, 63], "tupl": [10, 44, 50, 62, 63, 64, 66, 68], "idx": 10, "linear_bia": 10, "addop": 10, "0x7f9ab84cb2b0": 10, "passcontext": [10, 22, 25, 50], "potenti": 10, "unit": [10, 12, 25, 37, 40], "appli": [10, 25, 33, 34, 50], "wise": [10, 33], "opt_graph": 10, "fusedbatchmatmul": 10, "batchmatmul": 10, "gpu": [10, 16, 17, 25, 44, 49, 50, 66], "cuda_graph": [10, 25, 50], "sever": 10, "onnx": [10, 23, 24, 27, 42, 43, 47, 50], "327": [10, 11], "gallery_get": 11, "simpl": 12, "binari": [12, 32], "directori": [12, 13, 22, 25, 29, 43, 49, 50, 63], "set": [12, 13, 25, 26, 35, 44, 50, 63], "local": [12, 29], "cache_dir": [12, 13, 14, 15, 16, 43, 63], "variabl": [12, 15, 33, 35, 37, 40, 50, 55, 59, 63, 64], "launch": [12, 13, 14, 15, 16, 17, 36, 38, 44, 57], "messag": 12, "standard": [12, 50, 64], "public": [12, 13, 14, 15, 36, 37, 57], "func_kind": [12, 13, 14, 15, 16, 33, 37], "With": 12, "instanc": [12, 53, 62], "compiledmodul": [12, 37], "invok": [12, 13, 15, 36, 37], "captur": [12, 44], "yourself": 12, "consol": 12, "arg": [12, 25, 26, 55, 56, 60, 68], "access": [12, 13, 15, 33, 38], "prefix": 12, "hidet_": 12, "avoid": [12, 50, 62, 64], "conflict": 12, "color": 12, "stdint": [12, 15, 16, 17], "h": [12, 15, 16, 17, 33], "math": [12, 15, 22], "memory_plann": [12, 15, 16, 17], "context": [12, 15, 16, 17, 22, 37, 50, 63], "log": [12, 15, 16, 17, 25, 62], "dll": [12, 15, 16, 17], "void": [12, 13, 15, 16, 17], "hidet_launch": [12, 15, 16, 17], "009": [12, 19], "well": [13, 29, 33], "short": [13, 33], "f32": [13, 14, 15, 16, 33, 37, 38, 39], "thei": [13, 26, 39, 50, 62, 68], "interchang": 13, "annot": [13, 14], "treat": 13, "datatyp": [13, 50, 55, 58, 61, 62, 64, 66], "bit": [13, 14], "float": [13, 14, 15, 16, 17, 33, 34, 44, 50, 62, 63, 64, 66, 67, 68], "point": [13, 14, 33, 34], "7": [13, 17, 26, 33], "002": [13, 19], "3x4": 14, "3x4x5": 14, "loop": [14, 34, 35, 68], "003": [14, 19], "kind": [15, 26, 35, 37, 38, 57], "current": [15, 25, 26, 44, 50, 63, 66], "support": [15, 16, 26, 33, 34, 35, 38, 39, 42, 50], "outsid": 15, "cpu_kernel": [15, 33, 36, 57], "cpu_intern": [15, 36, 57], "intern": [15, 44], "cuda_kernel": [15, 16, 36, 38, 57], "cuda_intern": [15, 36, 57], "__global__": [15, 16, 17], "__device__": [15, 17], "static": [15, 16, 17, 25, 50, 68], "hidet_matmul": 15, "__restrict__": [15, 16, 17], "int32_t": [15, 16, 17], "0f": [15, 16, 17, 22], "blockdim": [15, 38], "coordin": [15, 33], "respons": 15, "compar": [15, 55], "boundari": 15, "alwai": [15, 50], "simplifi": [15, 33], "statement": [15, 34, 40, 59, 63], "complex": [15, 16, 17, 33, 41, 50, 64], "__launch_bounds__": [15, 16, 17], "dim3": [15, 16, 17], "cudastream_t": [15, 16, 17, 44], "get_cuda_stream": [15, 16, 17], "cudaerror_t": [15, 16, 17], "err": [15, 16, 17], "cudagetlasterror": [15, 16, 17], "cudasuccess": [15, 16, 17], "error": [15, 16, 17, 25, 26, 29, 49, 68], "cudageterrorstr": [15, 16, 17], "037": [15, 19], "i32": [16, 33, 34], "tensor_point": 16, "hold": 16, "inform": [16, 25, 50, 63], "init": 16, "pytorch": [16, 23, 24, 25, 27, 42, 49, 50, 64], "234": [16, 26], "345": 16, "567": 16, "123": [16, 21, 22], "456": 16, "789": 16, "hidet_matmul_kernel": [16, 17], "65535": [16, 17], "invalid": [16, 17], "005": [16, 19, 22], "simplic": 17, "omit": 17, "softwar": 17, "paper": [17, 35], "familiar": 17, "hyperparamet": 17, "matmul_relu_kernel": 17, "hidet_matmul_relu": 17, "torch_matmul_relu": 17, "archiv": 17, "30": [17, 26], "cubla": [17, 26], "refer": [17, 32, 34, 35, 38, 50, 55, 62, 64], "packag": [17, 30, 43], "057": 17, "130": 17, "256x256x256": 17, "012": 17, "036": 17, "32x32x32": 17, "007": [17, 22], "__forceinline__": 17, "hidet_relu": 17, "__shared__": 17, "512": [17, 26], "2048": 17, "i_1": 17, "i_2": 17, "i_3": 17, "i_4": 17, "i_5": 17, "i_6": 17, "i_7": 17, "48": [17, 26], "global_k_1": 17, "i_8": 17, "global_k_2": 17, "__syncthread": 17, "i_9": 17, "i_10": 17, "i_11": 17, "i_12": 17, "k_1": 17, "i_13": 17, "i_14": 17, "k_2": 17, "i_15": 17, "i_16": 17, "k_3": 17, "i_17": 17, "i_18": 17, "global_i_1": 17, "global_j_1": 17, "i_19": 17, "i_20": 17, "global_i_2": 17, "i_21": 17, "i_22": 17, "global_j_2": 17, "i_23": 17, "i_24": 17, "255": 17, "060": [17, 19], "vector": [18, 19, 23, 31, 33, 39], "hello": [18, 19, 23, 31], "world": [18, 19, 23, 31], "naiv": [18, 19, 23, 31], "115": 19, "gallery_hidet": 19, "gallery_how": 21, "understand": 22, "custom": [22, 50, 63], "popular": 22, "viewer": 22, "found": [22, 57], "here": [22, 35, 55], "link": 22, "bottom": 22, "side": [22, 25], "bar": 22, "layer": [22, 49, 62], "nn": [22, 26, 48, 49], "selfattent": 22, "hidden_s": 22, "768": 22, "num_attention_head": 22, "attention_head_s": 22, "query_lay": 22, "linear": [22, 26, 33], "key_lay": 22, "value_lay": 22, "transpose_for_scor": 22, "seq_length": 22, "rearrang": [22, 62, 66], "forward": [22, 26, 50], "hidden_st": 22, "attention_mask": 22, "queri": [22, 44], "attention_scor": 22, "sqrt": [22, 62], "attention_prob": 22, "softmax": [22, 62], "in_featur": [22, 26], "out_featur": [22, 26], "flow_graph_for": 22, "c_3": 22, "c_4": 22, "c_5": 22, "plan": [22, 62, 66], "x_6": 22, "x_7": 22, "x_8": 22, "x_9": 22, "x_10": 22, "permutedim": 22, "ax": [22, 62], "x_11": 22, "x_12": 22, "dividescalar": 22, "x_13": 22, "x_14": 22, "x_15": 22, "x_16": 22, "x_17": 22, "x_18": 22, "x_19": 22, "x_20": 22, "x_21": 22, "structur": 22, "json": 22, "open": [22, 42, 64], "instrument": [22, 50], "save_graph_instru": [22, 25, 50], "ctx": [22, 25, 50, 63], "cost": [22, 50], "profile_pass_instru": [22, 50], "print_stdout": [22, 50], "save": [22, 25, 49, 50, 63], "out_dir": [22, 50], "convchannellastpass": 22, "subgraphrewritepass": 22, "015": 22, "automixprecisionpass": 22, "selectivequantizepass": 22, "022": 22, "resolvevariantpass": 22, "008": 22, "fuseoperatorpass": 22, "023": 22, "eliminatebarrierpass": 22, "resnet50": [25, 43], "export": 25, "zoo": 25, "torchvis": [25, 26], "under": [25, 26, 29, 43], "work": [25, 32, 54, 62], "o": [25, 63], "path": [25, 43, 48, 50], "onnx_path": 25, "random": [25, 50, 64], "torch_model": 25, "torch_data": 25, "input_nam": 25, "output_nam": 25, "dynamic_ax": 25, "1f": [25, 33], "mib": 25, "getsiz": 25, "20": [25, 26, 35], "diagnost": 25, "version": [25, 30], "cu117": 25, "note": [25, 26, 34, 38, 52], "warn": 25, "97": 25, "measur": [25, 50, 67, 68], "reset50": 25, "median": [25, 50, 63, 67, 68], "frontend": [25, 50], "from_onnx": [25, 47, 48, 50], "give": [25, 41], "np": [25, 50, 64, 66, 68], "hidet_onnx_modul": 25, "torch_output": 25, "detach": [25, 66], "deriv": [25, 66], "symbol_data": 25, "symbol_output": 25, "elimin": [25, 62], "cudagraph": [25, 44, 50], "bench_hidet_graph": 25, "220": 25, "By": [25, 26, 44, 63], "choic": 25, "169": 25, "806": 25, "mode": [25, 29, 62], "477": 25, "841": 25, "dnn": [25, 42, 64], "321": [25, 27], "model_hidet": 26, "hood": 26, "represent": [26, 50, 68], "system": [26, 40], "intens": 26, "critic": 26, "set_search_spac": 26, "correctness_report": [26, 47, 49, 50], "everi": 26, "receiv": 26, "dummi": [26, 50, 60], "no_grad": 26, "placehold": 26, "0e": 26, "call_modul": 26, "kernel_s": 26, "stride": [26, 33, 62], "pad": [26, 62], "batchnorm2d": 26, "ep": [26, 62], "momentum": 26, "affin": 26, "track_running_stat": 26, "6e": 26, "inplac": 26, "2e": 26, "maxpool2d": 26, "dilat": [26, 62], "ceil_mod": [26, 62], "3e": 26, "8e": 26, "06": 26, "call_funct": 26, "iadd": 26, "9e": 26, "4e": 26, "17": 26, "5e": 26, "22": 26, "27": 26, "7e": 26, "35": 26, "37": 26, "40": 26, "42": 26, "49": 26, "60": 26, "66": 26, "adaptiveavgpool2d": 26, "output_s": [26, 62], "flatten": [26, 62], "69": 26, "1000": 26, "70": 26, "e_h": 26, "leq": 26, "harmon": 26, "absolut": 26, "rel": [26, 44], "frac": 26, "quad": 26, "e_a": 26, "e_r": 26, "respect": [26, 62], "featur": [26, 42], "replai": [26, 44], "use_cuda_graph": [26, 47, 49, 50], "use_fp16": [26, 47, 49, 50], "use_fp16_reduct": [26, 47, 49, 50], "feed": 26, "interest": 26, "print_input_graph": [26, 47, 49, 50], "neat": 26, "graphmodul": [26, 49], "home": [26, 43, 63], "yaoyao": 26, "pytorch_vision_v0": 26, "resnet": 26, "232": 26, "conv1": 26, "self_conv1": 26, "233": 26, "bn1": 26, "self_bn1": 26, "self_relu": 26, "235": 26, "maxpool": 26, "self_maxpool": 26, "self_layer1_0_conv1": 26, "self_layer1_0_bn1": 26, "self_layer1_0_relu": 26, "conv2": 26, "self_layer1_0_conv2": 26, "bn2": 26, "self_layer1_0_bn2": 26, "80": 26, "ident": [26, 62], "81": 26, "self_layer1_0_relu_1": 26, "self_layer1_1_conv1": 26, "self_layer1_1_bn1": 26, "self_layer1_1_relu": 26, "self_layer1_1_conv2": 26, "self_layer1_1_bn2": 26, "iadd_1": 26, "self_layer1_1_relu_1": 26, "self_layer2_0_conv1": 26, "self_layer2_0_bn1": 26, "self_layer2_0_relu": 26, "self_layer2_0_conv2": 26, "self_layer2_0_bn2": 26, "downsampl": 26, "self_layer2_0_downsample_0": 26, "self_layer2_0_downsample_1": 26, "iadd_2": 26, "self_layer2_0_relu_1": 26, "self_layer2_1_conv1": 26, "self_layer2_1_bn1": 26, "self_layer2_1_relu": 26, "self_layer2_1_conv2": 26, "self_layer2_1_bn2": 26, "iadd_3": 26, "self_layer2_1_relu_1": 26, "self_layer3_0_conv1": 26, "self_layer3_0_bn1": 26, "self_layer3_0_relu": 26, "self_layer3_0_conv2": 26, "self_layer3_0_bn2": 26, "self_layer3_0_downsample_0": 26, "self_layer3_0_downsample_1": 26, "iadd_4": 26, "self_layer3_0_relu_1": 26, "self_layer3_1_conv1": 26, "self_layer3_1_bn1": 26, "self_layer3_1_relu": 26, "self_layer3_1_conv2": 26, "self_layer3_1_bn2": 26, "iadd_5": 26, "self_layer3_1_relu_1": 26, "self_layer4_0_conv1": 26, "self_layer4_0_bn1": 26, "self_layer4_0_relu": 26, "self_layer4_0_conv2": 26, "self_layer4_0_bn2": 26, "self_layer4_0_downsample_0": 26, "self_layer4_0_downsample_1": 26, "iadd_6": 26, "self_layer4_0_relu_1": 26, "self_layer4_1_conv1": 26, "self_layer4_1_bn1": 26, "self_layer4_1_relu": 26, "self_layer4_1_conv2": 26, "self_layer4_1_bn2": 26, "iadd_7": 26, "self_layer4_1_relu_1": 26, "242": 26, "avgpool": 26, "self_avgpool": 26, "243": 26, "244": 26, "fc": 26, "self_fc": 26, "opcod": 26, "kwarg": [26, 44, 56, 68], "built": 26, "0x7f9b0c75b500": 26, "906": [26, 27], "227": 27, "gallery_tutori": 27, "contribut": [29, 42], "encount": 29, "problem": 29, "git": [29, 43, 63], "http": [29, 30, 62], "github": 29, "com": [29, 62], "org": [29, 30, 62], "written": [29, 42], "cmake": 29, "command": [29, 30, 43], "cd": 29, "mkdir": 29, "cp": 29, "copi": [29, 44, 50, 64, 66], "j4": 29, "libhidet": 29, "libhidet_runtim": 29, "root": [29, 43, 63], "successfulli": 29, "shell": 29, "verifi": 30, "nightli": 30, "pre": 30, "url": 30, "whl": 30, "collect": [31, 37, 40, 50], "demonstr": 31, "constrain": 32, "extens": [32, 41, 42], "transpil": 32, "abstract": 32, "tree": 32, "ast": 32, "writer": 32, "environ": 32, "whole": [32, 62], "i8": 33, "i16": 33, "i64": 33, "int8": [33, 45, 50, 62], "int16": [33, 45], "f64": 33, "bf16": 33, "float64": [33, 45], "bfloat16": [33, 45, 50], "tfloat32": [33, 45], "boolean": [33, 34], "c64": 33, "c128": 33, "complex64": 33, "complex128": 33, "long": 33, "i8x4": 33, "int8x4": 33, "f16x2": 33, "f32x4": 33, "float16x2": 33, "float32x4": 33, "design": [33, 41], "therefor": 33, "snippet": 33, "major": [33, 44, 50, 64, 66], "must": [33, 44, 50, 62, 63, 64, 66], "discuss": 33, "posit": [33, 62, 68], "speak": 33, "dimension": 33, "c_0": 33, "dot": 33, "c_": 33, "commonli": [33, 38], "calcul": 33, "s_1": 33, "s_2": 33, "s_": 33, "s_i": 33, "th": [33, 66], "s_0": 33, "column_major": 33, "ignor": 33, "strided_layout": 33, "rank": [33, 62, 66], "slowest": 33, "fastest": 33, "composit": 33, "outer": 33, "inner": 33, "textbf": 33, "n_g": 33, "mod": [33, 62], "divis": [33, 34, 62], "modulo": 33, "elementwis": 33, "product": 33, "associ": 33, "commut": 33, "neq": 33, "form": 34, "locat": [34, 43, 44], "declar": [34, 59], "operand": [34, 62, 68], "plu": 34, "minu": 34, "address": [34, 44], "bitwise_not": 34, "bitwis": 34, "cond": [34, 56, 62], "logic": [34, 62], "e1": 34, "e2": 34, "subtract": [34, 62], "remaind": [34, 62], "left": 34, "shift": [34, 62], "right": 34, "xor": 34, "equal": [34, 62, 66], "less": [34, 49, 62, 63], "greater": [34, 50, 62], "even": 34, "floor": [34, 62], "true_expr": 34, "false_expr": 34, "p1": 34, "p2": 34, "pn": 34, "q2": 34, "p3": 34, "p4": 34, "p5": 34, "en": 34, "bind_tupl": 35, "unrol": 35, "mani": 35, "factor": [35, 49, 50, 68], "p2u3": 35, "pu": 35, "brif": 35, "introduct": [35, 42], "num": [35, 62], "serv": 37, "manag": 37, "define_global_var": 37, "global_var": 37, "var_typ": 37, "foo": 37, "mandatori": [37, 50, 64], "dynamic_smem_byt": [38, 57], "min_block": [38, 57], "minimum": [38, 62, 63], "declarescop": [38, 58, 59], "string": [38, 43], "enum": 38, "similarli": 38, "tabl": 38, "griddim": 38, "ldmatrix": 38, "atomic_add": 38, "atom": 38, "atomic_max": 38, "shfl_sync": 38, "shuffl": 38, "dynamic_shared_memori": 38, "alloc": [38, 50], "complet": [38, 44], "avx": 39, "instruct": [39, 50, 62], "modern": 39, "avx_f32x4_load": 39, "avx_f32x4_stor": 39, "avx_f32x4_fmadd": 39, "avx_f32x4_setzero": 39, "avx_f32x4_broadcast": 39, "f32x8": 39, "reli": 39, "openmp": 39, "seri": [40, 44], "eas": 42, "orient": 42, "api": 42, "maintain": 43, "repo": [43, 63], "hidet_cach": [43, 63], "get_cache_dir": [43, 63], "usernam": 43, "cache_root": 43, "bert": 43, "cpu_space_0": 43, "cuda_space_0": 43, "_space_": 43, "41920731adb3acf4": 43, "hash": 43, "nvcc_log": 43, "92dfdc1734b3854d": 43, "cuda_space_2": 43, "2e4ce0f773c8d25c": 43, "summari": 43, "3b8442fa440916f7": 43, "alreadi": [43, 50, 66], "recompil": 43, "avail": [44, 50, 63], "ctype": 44, "libcuda": 44, "cudart": 44, "ret": [44, 48, 49, 50, 52, 55, 56, 62, 63, 64, 66, 67, 68], "device_count": 44, "count": [44, 50], "current_devic": 44, "device_id": 44, "id": [44, 63], "set_devic": 44, "properti": [44, 50], "prop": 44, "cudadeviceprop": 44, "compute_cap": 44, "capabl": 44, "minor": 44, "host": 44, "preced": 44, "profiler_start": 44, "mark": 44, "profil": [44, 50, 63], "profiler_stop": 44, "malloc": 44, "num_byt": 44, "byte": [44, 66], "addr": 44, "malloc_async": 44, "asynchron": [44, 66], "union": [44, 48, 50, 55, 56, 57, 60, 64, 66, 67, 68], "fail": [44, 53], "due": 44, "insuffici": 44, "malloc_host": 44, "pin": 44, "free_async": 44, "free_host": 44, "memset": 44, "region": 44, "memset_async": 44, "memcpi": 44, "dst": [44, 68], "src": [44, 68], "destin": [44, 68], "memcpy_async": 44, "memory_info": 44, "prioriti": 44, "implicit": 44, "enqueu": 44, "wait": 44, "begin": 44, "reorder": 44, "handl": 44, "wait_ev": 44, "subsequ": [44, 63], "externalstream": 44, "extern": 44, "cudaevent_t": 44, "elaps": [44, 50], "millisecond": [44, 50], "current_stream": 44, "default_stream": 44, "streamcontext": 44, "f_create_input": 44, "f_run": 44, "ref_obj": 44, "rerun": 44, "keep": [44, 62, 66], "aliv": 44, "lifetim": 44, "sequenc": [44, 50, 55, 56, 60, 62, 64, 66], "uint8": 45, "uint16": 45, "uint32": 45, "uint64": 45, "dynamoconfig": [47, 49, 50], "reset": [47, 49, 50], "use_tensor_cor": [47, 49, 50], "parallel_k": [47, 49, 50], "use_attent": [47, 49, 50], "dump_graph_ir": [47, 49, 50], "steal_weight": [47, 49, 50], "modelproto": 48, "proto": 48, "onnxmodul": 48, "concrete_arg": 49, "fx": 49, "interpret": [49, 61], "candid": [49, 50, 63], "flag": [49, 50], "strategi": [49, 50], "heurist": [49, 50], "decid": [49, 50], "output_dir": 49, "dump": [49, 63], "certain": 49, "usag": [49, 50, 63], "operatorpattern": [50, 51, 53], "build_target": 50, "__call__": 50, "usage_count": 50, "consist": 50, "model_fil": 50, "compiledmodel": 50, "tri": [50, 62, 63], "compiledgraph": 50, "warmup": [50, 63, 67, 68], "dummy_input": 50, "vcuda_": 50, "vcuda": 50, "place": 50, "cuda_": 50, "text": [50, 63], "set_precis": 50, "set_reduce_precis": 50, "set_mma": 50, "tensorcor": 50, "acceler": 50, "member": 50, "graphpassinstru": 50, "classmethod": 50, "retain": 50, "accuraci": 50, "still": [50, 62], "mix": 50, "select": 50, "quantiz": 50, "quantize_pattern": 50, "flexibl": 50, "add_quantize_pattern": 50, "add_quantize_rul": 50, "top": 50, "reduce_mean": [50, 66], "reduce_avg": 50, "along": [50, 62, 66], "valid": [50, 57], "set_use_attent": 50, "set_verbos": 50, "relat": 50, "set_parallel_k": 50, "npart": 50, "figur": 50, "fix": 50, "log_fil": 50, "reduce_cuda_compile_mem": 50, "incur": 50, "interfac": 50, "modifi": 50, "myinstrument": 50, "before_all_pass": 50, "before_pass": 50, "pass_nam": 50, "after_pass": 50, "after_all_pass": 50, "foldconstantpass": 50, "patterntransformpass": 50, "obj": [50, 64], "stddev": [50, 64], "uniformli": [50, 64], "distribut": [50, 64], "uniform": [50, 64], "deviat": [50, 64], "10720467": [50, 64], "6906018": [50, 64], "06347568": [50, 64], "37061226": [50, 64], "562728": [50, 64], "857547": [50, 64], "uniniti": [50, 64], "datalayout": [50, 55, 64, 66], "randn_lik": [50, 64], "sampl": [50, 64], "empty_lik": [50, 64], "zeros_lik": [50, 64], "ones_lik": [50, 64], "fill_valu": [50, 64], "full_lik": [50, 64], "fill": [50, 64], "from_numpi": 50, "nparrai": 50, "possibl": [50, 63], "from_dlpack": [50, 64], "dltensor": [50, 64], "__dlpack__": [50, 64], "protocol": [50, 64], "dlpack": [50, 64], "pycapsul": [50, 64], "torch_tensor": [50, 64], "modif": [50, 64], "reflect": [50, 64], "ambigu": [50, 64], "resolve_vari": 52, "overrid": 52, "op_cl": [52, 53], "squar": [52, 62], "addresolverul": 52, "subgraph_rewrit": 53, "num_output": 53, "registri": 53, "activ": 54, "ad": [54, 62, 68], "reducetyp": [55, 58], "enumer": 55, "scalar_input": [55, 58], "scalarinput": 55, "tensorinput": 55, "accumulate_dtyp": [55, 62], "reducecomput": 55, "index_dtyp": 55, "scalarnod": 55, "ifthenels": [56, 58], "evalu": [56, 62, 63], "alia": 56, "pyscalar": 56, "tensor_slic": [56, 58], "tensorslic": 56, "param": [57, 68], "bodi": 57, "ret_typ": 57, "pack": 57, "minim": [57, 68], "bound": 57, "get_attr": [57, 58], "attr_nam": 57, "allow_miss": 57, "rais": [57, 66, 68], "keyerror": 57, "attr_valu": 57, "data_typ": [58, 61], "stmt": 58, "generate_argu": [58, 60], "dummy_argu": [58, 60], "scope": 59, "inverse_map": 60, "short_nam": 61, "nbyte": [61, 66], "ab": [62, 68], "aco": 62, "acosh": 62, "adaptive_avg_pool1d": 62, "adaptive_avg_pool2d": 62, "adaptive_avg_pool3d": 62, "adaptive_max_pool1d": 62, "adaptive_max_pool2d": 62, "adaptive_max_pool3d": 62, "keepdim": 62, "AND": 62, "whehter": 62, "all_gath": 62, "nrank": 62, "comm_id": 62, "all_reduc": 62, "OR": 62, "arang": 62, "stop": 62, "argmax": 62, "dim": [62, 66], "keep_dim": [62, 66], "argmin": 62, "asin": 62, "asinh": 62, "atan": 62, "atan2": 62, "atanh": 62, "q": 62, "mask": 62, "is_caus": 62, "avg_pool2d": 62, "avg_pool3d": 62, "barrier": 62, "consum": 62, "lh": [62, 68], "rh": [62, 68], "stand": 62, "doc": 62, "html": 62, "batch_norm_inf": 62, "running_mean": 62, "running_var": 62, "epsilon": 62, "bitwise_and": 62, "bitwise_invert": 62, "bitwise_left_shift": 62, "bitwise_or": 62, "bitwise_right_shift": 62, "bitwise_xor": 62, "ceil": 62, "celu": 62, "alpha": 62, "clamp": 62, "clip": 62, "min_val": 62, "conj": 62, "conv1d": 62, "group": [62, 67, 68], "conv1d_gemm": 62, "conv1d_transpos": 62, "output_pad": 62, "conv2d_channel_last": 62, "conv2d_gemm": 62, "conv2d_gemm_fp16": 62, "img": 62, "parallel_k_part": 62, "disable_cp_async": 62, "conv2d_gemm_fp16_channel_last": 62, "conv2d_gemm_image_transform": 62, "conv2d_transpos": 62, "conv2d_transpose_gemm": 62, "conv2d_winograd": 62, "conv3d": 62, "conv3d_gemm": 62, "conv3d_transpos": 62, "conv_pad": 62, "co": 62, "cosh": 62, "cumsum": 62, "exclus": 62, "divid": 62, "einsum": 62, "equat": 62, "erf": 62, "expand_dim": 62, "expm1": 62, "start_dim": 62, "end_dim": 62, "fused_oper": 62, "gather": 62, "gelu": 62, "approxim": 62, "greater_equ": 62, "group_norm": 62, "num_group": 62, "norm": 62, "varianc": 62, "hardshrink": 62, "lambda_v": 62, "hardsigmoid": 62, "hardswish": 62, "hardtanh": 62, "imag": 62, "instance_norm": 62, "channel": 62, "isfinit": 62, "isinf": 62, "isnan": 62, "layer_norm": 62, "num_last_dim": 62, "leaky_relu": 62, "less_equ": 62, "linspac": 62, "endpoint": 62, "log10": 62, "log1p": 62, "log2": 62, "logaddexp": 62, "logical_and": 62, "logical_not": 62, "logical_or": 62, "logical_xor": 62, "logsigmoid": 62, "lp_norm": 62, "lp": 62, "formul": 62, "make_complex": 62, "real": 62, "matmul_x86": 62, "max_pool2d": 62, "max_pool3d": 62, "maximum": [62, 63], "neg": [62, 68], "not_equ": 62, "permute_dim": 62, "prelu": 62, "slope": 62, "prod": 62, "unsqueez": [62, 66], "perm": 62, "reciproc": 62, "reduce_scatt": 62, "relu6": 62, "resize2d": 62, "scale_factor": 62, "nearest": 62, "coordinate_transformation_mod": 62, "half_pixel": 62, "rounding_method": 62, "round_prefer_floor": 62, "roi": 62, "cubic_alpha": 62, "cubic_exclud": 62, "extrapolation_valu": 62, "recompute_scale_factor": 62, "roll": 62, "round": 62, "rsqrt": 62, "set_strided_slic": 62, "setvalu": 62, "sigmoid": 62, "sign": 62, "silu": 62, "sin": 62, "sinh": 62, "softmin": 62, "softplu": 62, "beta": 62, "threshold_v": 62, "softshrink": 62, "softsign": 62, "parts_or_sect": 62, "std": 62, "strided_slic": 62, "symmetric_dequant": 62, "wq": 62, "symmetric_quant": 62, "quant_typ": 62, "tan": 62, "tanh": 62, "tanhshrink": 62, "zip": 62, "transfer": 62, "dst_devic": 62, "trunc": 62, "optioncontext": 63, "dump_opt": 63, "stack": 63, "restore_opt": 63, "dumped_opt": 63, "restor": 63, "current_context": 63, "get_opt": 63, "cache_oper": 63, "new_cache_dir": 63, "set_opt": 63, "other_opt": 63, "other_valu": 63, "register_opt": 63, "bench_config": 63, "t1": 63, "t2": 63, "get_bench_config": 63, "trade": 63, "off": 63, "convent": 63, "ten": 63, "get_search_spac": 63, "disk": 63, "whenev": 63, "get_cache_oper": 63, "new_dir": 63, "parallel_build": 63, "get_parallel_build": 63, "parallel_tun": 63, "max_parallel_job": 63, "mem_gb_per_job": 63, "job": 63, "gib": 63, "preserv": 63, "vcpu": 63, "cpu_count": 63, "reserv": 63, "5gib": 63, "get_parallel_tun": 63, "minumum": 63, "save_lower_ir": 63, "get_save_lower_ir": 63, "debug_cache_tun": 63, "purpos": 63, "debug_show_var_id": 63, "d_1": 63, "1732": 63, "runtime_check": 63, "get_runtime_check": 63, "debug_show_verbose_flow_graph": 63, "human": 63, "readabl": 63, "functiontyp": 64, "func_typ": 65, "ctypes_func": 65, "functyp": 65, "track": 66, "leaf": 66, "experiment": 66, "compact": 66, "tolist": 66, "nest": 66, "to_devic": 66, "stream": 66, "move": 66, "astyp": 66, "cpu_async": 66, "cuda_async": 66, "copy_async": 66, "runtimeerror": 66, "unchang": 66, "item": 66, "signatur": 66, "contigu": 66, "continu": 66, "up": [66, 67, 68], "averag": 66, "run_func": [67, 68], "warm": [67, 68], "keyword": 68, "gcd": 68, "greatest": 68, "common": 68, "divisor": 68, "non": 68, "lcm": 68, "least": 68, "error_toler": 68, "toler": 68, "directedgraph": 68, "from_edg": 68, "graphnod": 68, "has_nod": 68, "has_edg": 68, "add_nod": 68, "add_edg": 68, "topological_ord": 68, "topolog": 68, "valueerror": 68, "cyclic": 68}, "objects": {"": [[64, 0, 0, "-", "hidet"]], "hidet": [[66, 1, 1, "", "Tensor"], [64, 4, 1, "", "asarray"], [45, 5, 1, "", "bfloat16"], [46, 0, 0, "-", "drivers"], [64, 4, 1, "", "empty"], [64, 4, 1, "", "empty_like"], [45, 5, 1, "", "float16"], [45, 5, 1, "", "float32"], [45, 5, 1, "", "float64"], [64, 4, 1, "", "from_dlpack"], [64, 4, 1, "", "from_torch"], [64, 4, 1, "", "full"], [64, 4, 1, "", "full_like"], [50, 0, 0, "-", "graph"], [45, 5, 1, "", "int16"], [45, 5, 1, "", "int32"], [45, 5, 1, "", "int64"], [45, 5, 1, "", "int8"], [64, 4, 1, "", "ones"], [64, 4, 1, "", "ones_like"], [62, 0, 0, "-", "ops"], [63, 0, 0, "-", "option"], [64, 4, 1, "", "randn"], [64, 4, 1, "", "randn_like"], [65, 0, 0, "-", "runtime"], [64, 4, 1, "", "script"], [64, 4, 1, "", "symbol"], [64, 4, 1, "", "symbol_like"], [67, 0, 0, "-", "testing"], [45, 5, 1, "", "tfloat32"], [64, 4, 1, "", "trace_from"], [45, 5, 1, "", "uint16"], [45, 5, 1, "", "uint32"], [45, 5, 1, "", "uint64"], [45, 5, 1, "", "uint8"], [68, 0, 0, "-", "utils"], [64, 4, 1, "", "zeros"], [64, 4, 1, "", "zeros_like"]], "hidet.Tensor": [[66, 2, 1, "", "astype"], [66, 2, 1, "", "contiguous"], [66, 2, 1, "", "copy"], [66, 2, 1, "", "copy_async"], [66, 2, 1, "", "cpu"], [66, 2, 1, "", "cpu_async"], [66, 2, 1, "", "cuda"], [66, 2, 1, "", "cuda_async"], [66, 2, 1, "", "detach"], [66, 3, 1, "", "device"], [66, 3, 1, "", "dtype"], [66, 2, 1, "", "is_symbolic"], [66, 2, 1, "", "item"], [66, 3, 1, "", "layout"], [66, 2, 1, "", "mean"], [66, 3, 1, "", "nbytes"], [66, 2, 1, "", "numpy"], [66, 3, 1, "", "op"], [66, 2, 1, "", "rearrange"], [66, 2, 1, "", "reshape"], [66, 3, 1, "", "shape"], [66, 2, 1, "", "signature"], [66, 3, 1, "", "size"], [66, 2, 1, "", "squeeze"], [66, 3, 1, "", "storage"], [66, 2, 1, "", "sum"], [66, 2, 1, "", "to"], [66, 2, 1, "", "to_device"], [66, 2, 1, "", "tolist"], [66, 2, 1, "", "torch"], [66, 3, 1, "", "trace"], [66, 2, 1, "", "unsqueeze"]], "hidet.cuda": [[44, 1, 1, "", "Event"], [44, 1, 1, "", "ExternalStream"], [44, 1, 1, "", "Stream"], [44, 4, 1, "", "available"], [44, 4, 1, "", "compute_capability"], [44, 4, 1, "", "current_device"], [44, 4, 1, "", "current_stream"], [44, 4, 1, "", "default_stream"], [44, 4, 1, "", "device_count"], [44, 4, 1, "", "free"], [44, 4, 1, "", "free_async"], [44, 4, 1, "", "free_host"], [44, 4, 1, "", "malloc"], [44, 4, 1, "", "malloc_async"], [44, 4, 1, "", "malloc_host"], [44, 4, 1, "", "memcpy"], [44, 4, 1, "", "memcpy_async"], [44, 4, 1, "", "memory_info"], [44, 4, 1, "", "memset"], [44, 4, 1, "", "memset_async"], [44, 4, 1, "", "profiler_start"], [44, 4, 1, "", "profiler_stop"], [44, 4, 1, "", "properties"], [44, 4, 1, "", "set_device"], [44, 4, 1, "", "stream"], [44, 4, 1, "", "synchronize"]], "hidet.cuda.Event": [[44, 2, 1, "", "elapsed_time"], [44, 2, 1, "", "handle"], [44, 2, 1, "", "record"], [44, 2, 1, "", "synchronize"]], "hidet.cuda.Stream": [[44, 2, 1, "", "device_id"], [44, 2, 1, "", "handle"], [44, 2, 1, "", "synchronize"], [44, 2, 1, "", "wait_event"]], "hidet.cuda.graph": [[44, 1, 1, "", "CudaGraph"]], "hidet.cuda.graph.CudaGraph": [[44, 6, 1, "", "inputs"], [44, 6, 1, "", "outputs"], [44, 2, 1, "", "run"], [44, 2, 1, "", "run_async"]], "hidet.graph": [[50, 1, 1, "", "FlowGraph"], [50, 1, 1, "", "GraphPassInstrument"], [50, 1, 1, "", "Operator"], [50, 1, 1, "", "PassContext"], [50, 4, 1, "", "asarray"], [50, 4, 1, "", "empty"], [50, 4, 1, "", "empty_like"], [50, 4, 1, "", "from_dlpack"], [50, 4, 1, "", "from_numpy"], [50, 4, 1, "", "from_torch"], [50, 4, 1, "", "full"], [50, 4, 1, "", "full_like"], [50, 4, 1, "", "ones"], [50, 4, 1, "", "ones_like"], [50, 4, 1, "", "optimize"], [50, 4, 1, "", "randn"], [50, 4, 1, "", "randn_like"], [50, 4, 1, "", "symbol"], [50, 4, 1, "", "symbol_like"], [50, 4, 1, "", "trace_from"], [50, 4, 1, "", "zeros"], [50, 4, 1, "", "zeros_like"]], "hidet.graph.FlowGraph": [[50, 2, 1, "", "__call__"], [50, 2, 1, "", "build"], [50, 2, 1, "", "cuda_"], [50, 2, 1, "", "cuda_graph"], [50, 2, 1, "", "forward"], [50, 2, 1, "", "latency"], [50, 2, 1, "", "load"], [50, 6, 1, "", "nodes"], [50, 2, 1, "", "save"], [50, 6, 1, "", "usage_count"], [50, 2, 1, "", "vcuda_"]], "hidet.graph.GraphPassInstrument": [[50, 2, 1, "", "after_all_passes"], [50, 2, 1, "", "after_pass"], [50, 2, 1, "", "before_all_passes"], [50, 2, 1, "", "before_pass"]], "hidet.graph.Operator": [[50, 6, 1, "", "build_target"], [50, 6, 1, "", "device"]], "hidet.graph.PassContext": [[50, 2, 1, "", "add_quantize_rules"], [50, 3, 1, "", "configs"], [50, 2, 1, "", "current"], [50, 3, 1, "", "instruments"], [50, 2, 1, "", "profile_pass_instrument"], [50, 2, 1, "", "reduce_cuda_compile_mem"], [50, 2, 1, "", "save_graph_instrument"], [50, 2, 1, "", "set_mma"], [50, 2, 1, "", "set_parallel_k"], [50, 2, 1, "", "set_precision"], [50, 2, 1, "", "set_reduce_precision"], [50, 2, 1, "", "set_use_attention"], [50, 2, 1, "", "set_verbose"]], "hidet.graph.frontend": [[48, 4, 1, "", "from_onnx"], [49, 4, 1, "", "from_torch"]], "hidet.graph.frontend.torch": [[49, 1, 1, "", "DynamoConfig"]], "hidet.graph.frontend.torch.DynamoConfig": [[49, 2, 1, "", "correctness_report"], [49, 2, 1, "", "dump_graph_ir"], [49, 2, 1, "", "parallel_k"], [49, 2, 1, "", "print_input_graph"], [49, 2, 1, "", "reset"], [49, 2, 1, "", "search_space"], [49, 2, 1, "", "steal_weights"], [49, 2, 1, "", "use_attention"], [49, 2, 1, "", "use_cuda_graph"], [49, 2, 1, "", "use_fp16"], [49, 2, 1, "", "use_fp16_reduction"], [49, 2, 1, "", "use_tensor_core"]], "hidet.graph.transforms.resolve_variant": [[52, 1, 1, "", "ResolveRule"], [52, 4, 1, "", "register_resolve_rule"]], "hidet.graph.transforms.resolve_variant.ResolveRule": [[52, 2, 1, "", "resolve"]], "hidet.graph.transforms.subgraph_rewrite": [[53, 1, 1, "", "OperatorPattern"], [53, 1, 1, "", "SubgraphRewriteRule"], [53, 1, 1, "", "TensorPattern"], [53, 4, 1, "", "register_rewrite_rule"]], "hidet.graph.transforms.subgraph_rewrite.SubgraphRewriteRule": [[53, 2, 1, "", "source"], [53, 2, 1, "", "target"]], "hidet.ir": [[55, 0, 0, "-", "compute"], [56, 0, 0, "-", "expr"], [57, 0, 0, "-", "func"], [59, 0, 0, "-", "stmt"], [60, 0, 0, "-", "task"]], "hidet.ir.compute": [[55, 1, 1, "", "ReduceType"], [55, 4, 1, "", "arg_reduce"], [55, 4, 1, "", "compute"], [55, 4, 1, "", "reduce"], [55, 4, 1, "", "scalar_input"], [55, 4, 1, "", "tensor_input"]], "hidet.ir.expr": [[56, 1, 1, "", "IfThenElse"], [56, 5, 1, "", "Int"], [56, 4, 1, "", "if_then_else"], [56, 4, 1, "", "tensor_slice"]], "hidet.ir.func": [[57, 1, 1, "", "Function"]], "hidet.ir.func.Function": [[57, 2, 1, "", "get_attr"]], "hidet.ir.stmt": [[59, 1, 1, "", "DeclareScope"]], "hidet.ir.task": [[60, 1, 1, "", "Task"]], "hidet.ir.task.Task": [[60, 2, 1, "", "build"], [60, 2, 1, "", "dummy_arguments"], [60, 2, 1, "", "generate_arguments"]], "hidet.ir.type": [[61, 1, 1, "", "DataType"], [61, 4, 1, "", "data_type"]], "hidet.ops": [[62, 4, 1, "", "abs"], [62, 4, 1, "", "acos"], [62, 4, 1, "", "acosh"], [62, 4, 1, "", "adaptive_avg_pool1d"], [62, 4, 1, "", "adaptive_avg_pool2d"], [62, 4, 1, "", "adaptive_avg_pool3d"], [62, 4, 1, "", "adaptive_max_pool1d"], [62, 4, 1, "", "adaptive_max_pool2d"], [62, 4, 1, "", "adaptive_max_pool3d"], [62, 4, 1, "", "add"], [62, 4, 1, "", "all"], [62, 4, 1, "", "all_gather"], [62, 4, 1, "", "all_reduce"], [62, 4, 1, "", "any"], [62, 4, 1, "", "arange"], [62, 4, 1, "", "argmax"], [62, 4, 1, "", "argmin"], [62, 4, 1, "", "asin"], [62, 4, 1, "", "asinh"], [62, 4, 1, "", "atan"], [62, 4, 1, "", "atan2"], [62, 4, 1, "", "atanh"], [62, 4, 1, "", "attention"], [62, 4, 1, "", "avg_pool2d"], [62, 4, 1, "", "avg_pool3d"], [62, 4, 1, "", "barrier"], [62, 4, 1, "", "batch_matmul"], [62, 4, 1, "", "batch_norm_infer"], [62, 4, 1, "", "bitwise_and"], [62, 4, 1, "", "bitwise_invert"], [62, 4, 1, "", "bitwise_left_shift"], [62, 4, 1, "", "bitwise_or"], [62, 4, 1, "", "bitwise_right_shift"], [62, 4, 1, "", "bitwise_xor"], [62, 4, 1, "", "broadcast"], [62, 4, 1, "", "cast"], [62, 4, 1, "", "ceil"], [62, 4, 1, "", "celu"], [62, 4, 1, "", "clamp"], [62, 4, 1, "", "clip"], [62, 4, 1, "", "concat"], [62, 4, 1, "", "conj"], [62, 4, 1, "", "conv1d"], [62, 4, 1, "", "conv1d_gemm"], [62, 4, 1, "", "conv1d_transpose"], [62, 4, 1, "", "conv2d"], [62, 4, 1, "", "conv2d_channel_last"], [62, 4, 1, "", "conv2d_gemm"], [62, 4, 1, "", "conv2d_gemm_fp16"], [62, 4, 1, "", "conv2d_gemm_fp16_channel_last"], [62, 4, 1, "", "conv2d_gemm_image_transform"], [62, 4, 1, "", "conv2d_transpose"], [62, 4, 1, "", "conv2d_transpose_gemm"], [62, 4, 1, "", "conv2d_winograd"], [62, 4, 1, "", "conv3d"], [62, 4, 1, "", "conv3d_gemm"], [62, 4, 1, "", "conv3d_transpose"], [62, 4, 1, "", "conv_pad"], [62, 4, 1, "", "cos"], [62, 4, 1, "", "cosh"], [62, 4, 1, "", "cumsum"], [62, 4, 1, "", "divide"], [62, 4, 1, "", "einsum"], [62, 4, 1, "", "equal"], [62, 4, 1, "", "erf"], [62, 4, 1, "", "exp"], [62, 4, 1, "", "expand_dims"], [62, 4, 1, "", "expm1"], [62, 4, 1, "", "flatten"], [62, 4, 1, "", "floor"], [62, 4, 1, "", "full"], [62, 4, 1, "", "fused_operator"], [62, 4, 1, "", "gather"], [62, 4, 1, "", "gelu"], [62, 4, 1, "", "greater"], [62, 4, 1, "", "greater_equal"], [62, 4, 1, "", "group_norm"], [62, 4, 1, "", "hardshrink"], [62, 4, 1, "", "hardsigmoid"], [62, 4, 1, "", "hardswish"], [62, 4, 1, "", "hardtanh"], [62, 4, 1, "", "imag"], [62, 4, 1, "", "instance_norm"], [62, 4, 1, "", "isfinite"], [62, 4, 1, "", "isinf"], [62, 4, 1, "", "isnan"], [62, 4, 1, "", "layer_norm"], [62, 4, 1, "", "leaky_relu"], [62, 4, 1, "", "less"], [62, 4, 1, "", "less_equal"], [62, 4, 1, "", "linspace"], [62, 4, 1, "", "log"], [62, 4, 1, "", "log10"], [62, 4, 1, "", "log1p"], [62, 4, 1, "", "log2"], [62, 4, 1, "", "logaddexp"], [62, 4, 1, "", "logical_and"], [62, 4, 1, "", "logical_not"], [62, 4, 1, "", "logical_or"], [62, 4, 1, "", "logical_xor"], [62, 4, 1, "", "logsigmoid"], [62, 4, 1, "", "lp_norm"], [62, 4, 1, "", "make_complex"], [62, 4, 1, "", "matmul"], [62, 4, 1, "", "matmul_x86"], [62, 4, 1, "", "max"], [62, 4, 1, "", "max_pool2d"], [62, 4, 1, "", "max_pool3d"], [62, 4, 1, "", "maximum"], [62, 4, 1, "", "mean"], [62, 4, 1, "", "min"], [62, 4, 1, "", "minimum"], [62, 4, 1, "", "mod"], [62, 4, 1, "", "multiply"], [62, 4, 1, "", "negative"], [62, 4, 1, "", "not_equal"], [62, 4, 1, "", "pad"], [62, 4, 1, "", "permute_dims"], [62, 4, 1, "", "positive"], [62, 4, 1, "", "pow"], [62, 4, 1, "", "prelu"], [62, 4, 1, "", "prod"], [62, 4, 1, "", "real"], [62, 4, 1, "", "rearrange"], [62, 4, 1, "", "reciprocal"], [62, 4, 1, "", "reduce_scatter"], [62, 4, 1, "", "relu"], [62, 4, 1, "", "relu6"], [62, 4, 1, "", "remainder"], [62, 4, 1, "", "reshape"], [62, 4, 1, "", "resize2d"], [62, 4, 1, "", "roll"], [62, 4, 1, "", "round"], [62, 4, 1, "", "rsqrt"], [62, 4, 1, "", "set_strided_slice"], [62, 4, 1, "", "sigmoid"], [62, 4, 1, "", "sign"], [62, 4, 1, "", "silu"], [62, 4, 1, "", "sin"], [62, 4, 1, "", "sinh"], [62, 4, 1, "", "softmax"], [62, 4, 1, "", "softmin"], [62, 4, 1, "", "softplus"], [62, 4, 1, "", "softshrink"], [62, 4, 1, "", "softsign"], [62, 4, 1, "", "split"], [62, 4, 1, "", "sqrt"], [62, 4, 1, "", "square"], [62, 4, 1, "", "squeeze"], [62, 4, 1, "", "std"], [62, 4, 1, "", "strided_slice"], [62, 4, 1, "", "subtract"], [62, 4, 1, "", "sum"], [62, 4, 1, "", "symmetric_dequantize"], [62, 4, 1, "", "symmetric_quantize"], [62, 4, 1, "", "take"], [62, 4, 1, "", "tan"], [62, 4, 1, "", "tanh"], [62, 4, 1, "", "tanhshrink"], [62, 4, 1, "", "tile"], [62, 4, 1, "", "transfer"], [62, 4, 1, "", "transpose"], [62, 4, 1, "", "tri"], [62, 4, 1, "", "trunc"], [62, 4, 1, "", "unsqueeze"], [62, 4, 1, "", "var"], [62, 4, 1, "", "where"]], "hidet.option": [[63, 1, 1, "", "OptionContext"], [63, 4, 1, "", "bench_config"], [63, 4, 1, "", "cache_dir"], [63, 4, 1, "", "cache_operator"], [63, 4, 1, "", "context"], [63, 4, 1, "", "current_context"], [63, 4, 1, "", "debug_cache_tuning"], [63, 4, 1, "", "debug_show_var_id"], [63, 4, 1, "", "debug_show_verbose_flow_graph"], [63, 4, 1, "", "dump_options"], [63, 4, 1, "", "get_bench_config"], [63, 4, 1, "", "get_cache_dir"], [63, 4, 1, "", "get_cache_operator"], [63, 4, 1, "", "get_option"], [63, 4, 1, "", "get_parallel_build"], [63, 4, 1, "", "get_parallel_tune"], [63, 4, 1, "", "get_runtime_check"], [63, 4, 1, "", "get_save_lower_ir"], [63, 4, 1, "", "get_search_space"], [63, 4, 1, "", "parallel_build"], [63, 4, 1, "", "parallel_tune"], [63, 4, 1, "", "restore_options"], [63, 4, 1, "", "runtime_check"], [63, 4, 1, "", "save_lower_ir"], [63, 4, 1, "", "search_space"], [63, 4, 1, "", "set_option"]], "hidet.runtime": [[65, 1, 1, "", "CompiledFunction"]], "hidet.testing": [[67, 4, 1, "", "benchmark_func"]], "hidet.utils": [[68, 1, 1, "", "DirectedGraph"], [68, 4, 1, "", "benchmark_func"], [68, 4, 1, "", "error_tolerance"], [68, 4, 1, "", "factorize"], [68, 4, 1, "", "gcd"], [68, 4, 1, "", "initialize"], [68, 4, 1, "", "lcm"]], "hidet.utils.DirectedGraph": [[68, 2, 1, "", "add_edge"], [68, 2, 1, "", "add_node"], [68, 2, 1, "", "from_edges"], [68, 2, 1, "", "has_edge"], [68, 2, 1, "", "has_node"], [68, 2, 1, "", "topological_order"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:data", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "titleterms": {"contribut": 0, "defin": [1, 2, 3, 10, 22, 41], "oper": [1, 2, 3, 4, 10, 26, 41, 43, 52], "comput": [1, 2, 8, 11, 19, 21, 27, 41, 55], "primit": [1, 38, 39], "task": [1, 2, 35, 60], "build": [1, 29], "run": [1, 10, 25], "more": [1, 17], "exampl": [1, 2, 31, 40], "reducesum": 1, "argmax": 1, "matmul": 1, "softmax": 1, "summari": [1, 2, 3, 4, 5, 10, 22, 25], "us": [2, 3, 26], "rule": [2, 4, 5], "base": [2, 3], "schedul": [2, 3, 41], "three": 2, "step": [2, 10], "new": [2, 41], "batch": 2, "matrix": [2, 16, 17], "multipl": [2, 16, 17], "1": 2, "class": 2, "2": 2, "3": 2, "function": [2, 15, 36, 38, 39], "creat": 2, "instanc": 2, "two": [2, 41], "machan": 2, "templat": 3, "overrid": 3, "implement_cuda": 3, "method": [3, 41], "implement": 3, "tensor": [3, 10, 33, 66], "program": 3, "add": [4, 5, 41], "resolv": [4, 52], "sub": [5, 53], "graph": [5, 10, 22, 26, 44, 47, 48, 49, 50, 51, 53], "rewrit": [5, 53], "hidet": [5, 10, 25, 29, 31, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "appli": 5, "write": 6, "dynam": 6, "kernel": [6, 15, 26], "todo": [6, 35, 38, 62], "time": [8, 11, 19, 21, 27], "index": [9, 18, 20, 23, 28], "quick": 10, "start": [10, 42], "optim": [10, 22, 25, 26], "pytorch": [10, 26], "model": [10, 22, 25, 26], "symbol": 10, "flow": [10, 22, 35], "next": 10, "hello": 12, "world": 12, "scalar": [13, 33], "addit": [13, 14], "vector": 14, "cpu": [15, 39], "cuda": [15, 26, 38, 44], "naiv": 16, "effici": 17, "visual": 22, "gener": 22, "dump": 22, "netron": 22, "intermedi": 22, "tutori": [23, 24, 42], "onnx": [25, 48], "prepar": 25, "load": 25, "imper": 25, "trace": 25, "flowgraph": 25, "search": 26, "larger": 26, "space": 26, "check": 26, "correct": 26, "configur": 26, "dispatch": 26, "low": 26, "precis": 26, "data": 26, "type": [26, 33, 61], "print": 26, "input": 26, "from": 29, "sourc": 29, "clone": 29, "code": 29, "share": 29, "librari": 29, "instal": [29, 30], "python": [29, 54], "packag": 29, "valid": 29, "script": [31, 37, 40, 42], "introduct": 32, "system": 33, "shape": 33, "layout": 33, "pointer": 33, "void": 33, "express": 34, "liter": 34, "variabl": 34, "unari": 34, "binari": 34, "ternari": 34, "subscript": 34, "slice": 34, "statement": 35, "control": 35, "If": 35, "For": 35, "map": 35, "iter": 35, "while": 35, "kind": 36, "modul": 37, "specif": [38, 39], "attribut": 38, "memori": [38, 44], "scope": 38, "multi": 39, "thread": 39, "refer": [40, 42], "welcom": 42, "": 42, "document": 42, "get": 42, "develop": 42, "guid": 42, "note": 42, "cach": 43, "content": 44, "devic": 44, "manag": 44, "alloc": 44, "stream": 44, "event": 44, "dtype": 45, "driver": 46, "frontend": [47, 48, 49], "submodul": [47, 50, 58], "torch": 49, "transform": 51, "pass": [52, 53], "api": 54, "ir": [55, 56, 57, 58, 59, 60, 61], "expr": 56, "func": 57, "stmt": 59, "op": 62, "option": 63, "runtim": 65, "test": 67, "util": 68}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Contributing": [[0, "contributing"]], "Define Operator Computation": [[1, "define-operator-computation"]], "Compute Primitives": [[1, "compute-primitives"]], "Define a Computation Task": [[1, "define-a-computation-task"]], "Build and Run a Task": [[1, "build-and-run-a-task"]], "More Examples": [[1, "more-examples"]], "ReduceSum": [[1, "reducesum"]], "ArgMax": [[1, "argmax"]], "MatMul": [[1, "matmul"]], "Softmax": [[1, "softmax"]], "Summary": [[1, "summary"], [2, "summary"], [3, "summary"], [4, "summary"], [5, "summary"], [10, "summary"], [22, "summary"], [25, "summary"]], "Using Rule-based Scheduling": [[2, "using-rule-based-scheduling"]], "Three steps to define a new operator": [[2, "three-steps-to-define-a-new-operator"]], "Batch Matrix Multiplication Example": [[2, "batch-matrix-multiplication-example"]], "1. Define the computation task class": [[2, "define-the-computation-task-class"]], "2. Define the operator class": [[2, "define-the-operator-class"]], "3. Define a function to create the operator instance": [[2, "define-a-function-to-create-the-operator-instance"]], "Use the defined operator": [[2, "use-the-defined-operator"]], "Two Scheduling Machanisms": [[2, "two-scheduling-machanisms"]], "Using Template-based Scheduling": [[3, "using-template-based-scheduling"]], "Override implement_cuda() method": [[3, "override-implement-cuda-method"]], "Implement the tensor-program": [[3, "implement-the-tensor-program"]], "Define the operator": [[3, "define-the-operator"]], "Add Operator Resolve Rule": [[4, "add-operator-resolve-rule"], [4, "id2"]], "Operator Resolving": [[4, "operator-resolving"]], "Add Sub-Graph Rewrite Rule": [[5, "add-sub-graph-rewrite-rule"]], "Sub-graph rewrite in Hidet": [[5, "sub-graph-rewrite-in-hidet"]], "Add a sub-graph rewrite rule": [[5, "add-a-sub-graph-rewrite-rule"]], "Apply the rewrite rule": [[5, "apply-the-rewrite-rule"]], "Writing Dynamic kernel": [[6, "writing-dynamic-kernel"]], "Todo": [[6, "id1"], [35, "id1"], [38, "id1"], [62, "id1"]], "Computation times": [[8, "computation-times"], [11, "computation-times"], [19, "computation-times"], [21, "computation-times"], [27, "computation-times"]], "Index": [[9, "index"], [18, "index"], [20, "index"], [23, "index"], [23, "id1"], [23, "id2"], [23, "id3"], [28, "index"]], "Quick Start": [[10, "quick-start"]], "Optimize PyTorch model with Hidet": [[10, "optimize-pytorch-model-with-hidet"]], "Define tensors": [[10, "define-tensors"]], "Run operators": [[10, "run-operators"]], "Symbolic tensor and flow graph": [[10, "symbolic-tensor-and-flow-graph"]], "Optimize flow graph": [[10, "optimize-flow-graph"]], "Run flow graph": [[10, "run-flow-graph"]], "Next Step": [[10, "next-step"]], "Hello World!": [[12, "hello-world"]], "Scalar Addition": [[13, "scalar-addition"]], "Vector Addition": [[14, "vector-addition"]], "Kernel Functions": [[15, "kernel-functions"]], "CPU kernel function": [[15, "cpu-kernel-function"]], "CUDA kernel function": [[15, "cuda-kernel-function"]], "Naive Matrix Multiplication": [[16, "naive-matrix-multiplication"]], "More Efficient Matrix Multiplication": [[17, "more-efficient-matrix-multiplication"]], "Visualize Flow Graph": [[22, "visualize-flow-graph"]], "Define model": [[22, "define-model"]], "Generate flow graph": [[22, "generate-flow-graph"]], "Dump netron graph": [[22, "dump-netron-graph"]], "Visualize optimization intermediate graphs": [[22, "visualize-optimization-intermediate-graphs"]], "Tutorials": [[23, "tutorials"], [24, "tutorials"], [42, null]], "Optimize ONNX Model": [[25, "optimize-onnx-model"]], "Preparation of ONNX model": [[25, "preparation-of-onnx-model"]], "Load the onnx model with Hidet": [[25, "load-the-onnx-model-with-hidet"]], "Imperatively run the model": [[25, "imperatively-run-the-model"]], "Trace the model and run": [[25, "trace-the-model-and-run"]], "Optimize FlowGraph": [[25, "optimize-flowgraph"]], "Optimize PyTorch Model": [[26, "optimize-pytorch-model"]], "Search in a larger search space": [[26, "search-in-a-larger-search-space"]], "Check the correctness": [[26, "check-the-correctness"]], "Operator configurations": [[26, "operator-configurations"]], "Use CUDA Graph to dispatch kernels": [[26, "use-cuda-graph-to-dispatch-kernels"]], "Use low-precision data type": [[26, "use-low-precision-data-type"]], "Print the input graph": [[26, "print-the-input-graph"]], "Build from source": [[29, "build-from-source"]], "Clone the code": [[29, "clone-the-code"]], "Build shared libraries": [[29, "build-shared-libraries"]], "Install the Hidet Python package": [[29, "install-the-hidet-python-package"]], "Validation": [[29, "validation"]], "Installation": [[30, "installation"]], "Examples": [[31, "examples"]], "Hidet Script Examples": [[31, null], [40, null]], "Introduction": [[32, "introduction"]], "Type System": [[33, "type-system"]], "Scalar types": [[33, "scalar-types"]], "Tensor type": [[33, "tensor-type"]], "Tensor shape": [[33, "tensor-shape"]], "Tensor layout": [[33, "tensor-layout"]], "Pointer types": [[33, "pointer-types"]], "Void type": [[33, "void-type"]], "Expressions": [[34, "expressions"]], "Literals": [[34, "literals"]], "Variables": [[34, "variables"]], "Unary expressions": [[34, "unary-expressions"]], "Binary expressions": [[34, "binary-expressions"]], "Ternary expressions": [[34, "ternary-expressions"]], "Subscript and slice expressions": [[34, "subscript-and-slice-expressions"]], "Statements": [[35, "statements"]], "Control flow statements": [[35, "control-flow-statements"]], "If statement": [[35, "if-statement"]], "For statement": [[35, "for-statement"]], "For mapping statement": [[35, "for-mapping-statement"]], "Task mapping": [[35, "task-mapping"]], "Iterate the task mapping": [[35, "iterate-the-task-mapping"]], "While statement": [[35, "while-statement"]], "Function": [[36, "function"]], "Function kinds": [[36, "function-kinds"]], "Module": [[37, "module"]], "Script module": [[37, "script-module"]], "CUDA Specifics": [[38, "cuda-specifics"]], "Function attributes": [[38, "function-attributes"]], "Memory scope": [[38, "memory-scope"]], "Primitive functions": [[38, "primitive-functions"], [39, "primitive-functions"]], "CPU Specifics": [[39, "cpu-specifics"]], "Multi-threading": [[39, "multi-threading"]], "Reference": [[40, "reference"], [42, null]], "Add New Operator": [[41, "add-new-operator"]], "Define Computation": [[41, null]], "Two Scheduling Methods": [[41, null]], "Welcome to Hidet\u2019s Documentation": [[42, "welcome-to-hidet-s-documentation"]], "Getting Started": [[42, null]], "Hidet Script": [[42, null]], "Developer Guide": [[42, null]], "Notes": [[42, null]], "Operator Cache": [[43, "operator-cache"]], "hidet.cuda": [[44, "hidet-cuda"]], "Contents": [[44, "contents"]], "Device Management": [[44, "device-management"]], "Memory Allocation": [[44, "memory-allocation"]], "CUDA Stream and Event": [[44, "cuda-stream-and-event"]], "CUDA Graph": [[44, "cuda-graph"]], "hidet.dtypes": [[45, "hidet-dtypes"]], "hidet.drivers": [[46, "module-hidet.drivers"]], "hidet.graph.frontend": [[47, "hidet-graph-frontend"]], "Submodules": [[47, null], [50, null], [58, null]], "hidet.graph.frontend.onnx": [[48, "hidet-graph-frontend-onnx"]], "hidet.graph.frontend.torch": [[49, "hidet-graph-frontend-torch"]], "hidet.graph": [[50, "hidet-graph"]], "hidet.graph.transforms": [[51, "hidet-graph-transforms"]], "Transforms": [[51, null]], "Resolve Operator Pass": [[52, "resolve-operator-pass"]], "Sub-graph Rewrite Pass": [[53, "sub-graph-rewrite-pass"]], "Python API": [[54, "python-api"], [54, null]], "hidet.ir.compute": [[55, "hidet-ir-compute"]], "hidet.ir.expr": [[56, "module-hidet.ir.expr"]], "hidet.ir.func": [[57, "module-hidet.ir.func"]], "hidet.ir": [[58, "hidet-ir"]], "hidet.ir.stmt": [[59, "module-hidet.ir.stmt"]], "hidet.ir.task": [[60, "module-hidet.ir.task"]], "hidet.ir.type": [[61, "hidet-ir-type"]], "hidet.ops": [[62, "hidet-ops"]], "hidet.option": [[63, "module-hidet.option"]], "hidet": [[64, "module-hidet"]], "hidet.runtime": [[65, "module-hidet.runtime"]], "hidet.Tensor": [[66, "hidet-tensor"]], "hidet.testing": [[67, "module-hidet.testing"]], "hidet.utils": [[68, "module-hidet.utils"]]}, "indexentries": {"cudagraph (class in hidet.cuda.graph)": [[44, "hidet.cuda.graph.CudaGraph"]], "event (class in hidet.cuda)": [[44, "hidet.cuda.Event"]], "externalstream (class in hidet.cuda)": [[44, "hidet.cuda.ExternalStream"]], "stream (class in hidet.cuda)": [[44, "hidet.cuda.Stream"]], "available() (in module hidet.cuda)": [[44, "hidet.cuda.available"]], "compute_capability() (in module hidet.cuda)": [[44, "hidet.cuda.compute_capability"]], "current_device() (in module hidet.cuda)": [[44, "hidet.cuda.current_device"]], "current_stream() (in module hidet.cuda)": [[44, "hidet.cuda.current_stream"]], "default_stream() (in module hidet.cuda)": [[44, "hidet.cuda.default_stream"]], "device_count() (in module hidet.cuda)": [[44, "hidet.cuda.device_count"]], "device_id() (hidet.cuda.stream method)": [[44, "hidet.cuda.Stream.device_id"]], "elapsed_time() (hidet.cuda.event method)": [[44, "hidet.cuda.Event.elapsed_time"]], "free() (in module hidet.cuda)": [[44, "hidet.cuda.free"]], "free_async() (in module hidet.cuda)": [[44, "hidet.cuda.free_async"]], "free_host() (in module hidet.cuda)": [[44, "hidet.cuda.free_host"]], "handle() (hidet.cuda.event method)": [[44, "hidet.cuda.Event.handle"]], "handle() (hidet.cuda.stream method)": [[44, "hidet.cuda.Stream.handle"]], "inputs (hidet.cuda.graph.cudagraph property)": [[44, "hidet.cuda.graph.CudaGraph.inputs"]], "malloc() (in module hidet.cuda)": [[44, "hidet.cuda.malloc"]], "malloc_async() (in module hidet.cuda)": [[44, "hidet.cuda.malloc_async"]], "malloc_host() (in module hidet.cuda)": [[44, "hidet.cuda.malloc_host"]], "memcpy() (in module hidet.cuda)": [[44, "hidet.cuda.memcpy"]], "memcpy_async() (in module hidet.cuda)": [[44, "hidet.cuda.memcpy_async"]], "memory_info() (in module hidet.cuda)": [[44, "hidet.cuda.memory_info"]], "memset() (in module hidet.cuda)": [[44, "hidet.cuda.memset"]], "memset_async() (in module hidet.cuda)": [[44, "hidet.cuda.memset_async"]], "outputs (hidet.cuda.graph.cudagraph property)": [[44, "hidet.cuda.graph.CudaGraph.outputs"]], "profiler_start() (in module hidet.cuda)": [[44, "hidet.cuda.profiler_start"]], "profiler_stop() (in module hidet.cuda)": [[44, "hidet.cuda.profiler_stop"]], "properties() (in module hidet.cuda)": [[44, "hidet.cuda.properties"]], "record() (hidet.cuda.event method)": [[44, "hidet.cuda.Event.record"]], "run() (hidet.cuda.graph.cudagraph method)": [[44, "hidet.cuda.graph.CudaGraph.run"]], "run_async() (hidet.cuda.graph.cudagraph method)": [[44, "hidet.cuda.graph.CudaGraph.run_async"]], "set_device() (in module hidet.cuda)": [[44, "hidet.cuda.set_device"]], "stream() (in module hidet.cuda)": [[44, "hidet.cuda.stream"]], "synchronize() (hidet.cuda.event method)": [[44, "hidet.cuda.Event.synchronize"]], "synchronize() (hidet.cuda.stream method)": [[44, "hidet.cuda.Stream.synchronize"]], "synchronize() (in module hidet.cuda)": [[44, "hidet.cuda.synchronize"]], "wait_event() (hidet.cuda.stream method)": [[44, "hidet.cuda.Stream.wait_event"]], "hidet.bfloat16 (built-in variable)": [[45, "hidet.bfloat16"]], "hidet.float16 (built-in variable)": [[45, "hidet.float16"]], "hidet.float32 (built-in variable)": [[45, "hidet.float32"]], "hidet.float64 (built-in variable)": [[45, "hidet.float64"]], "hidet.int16 (built-in variable)": [[45, "hidet.int16"]], "hidet.int32 (built-in variable)": [[45, "hidet.int32"]], "hidet.int64 (built-in variable)": [[45, "hidet.int64"]], "hidet.int8 (built-in variable)": [[45, "hidet.int8"]], "hidet.tfloat32 (built-in variable)": [[45, "hidet.tfloat32"]], "hidet.uint16 (built-in variable)": [[45, "hidet.uint16"]], "hidet.uint32 (built-in variable)": [[45, "hidet.uint32"]], "hidet.uint64 (built-in variable)": [[45, "hidet.uint64"]], "hidet.uint8 (built-in variable)": [[45, "hidet.uint8"]], "hidet.drivers": [[46, "module-hidet.drivers"]], "module": [[46, "module-hidet.drivers"], [50, "module-hidet.graph"], [55, "module-hidet.ir.compute"], [56, "module-hidet.ir.expr"], [57, "module-hidet.ir.func"], [59, "module-hidet.ir.stmt"], [60, "module-hidet.ir.task"], [62, "module-hidet.ops"], [63, "module-hidet.option"], [64, "module-hidet"], [65, "module-hidet.runtime"], [67, "module-hidet.testing"], [68, "module-hidet.utils"]], "from_onnx() (in module hidet.graph.frontend)": [[48, "hidet.graph.frontend.from_onnx"]], "dynamoconfig (class in hidet.graph.frontend.torch)": [[49, "hidet.graph.frontend.torch.DynamoConfig"]], "correctness_report() (hidet.graph.frontend.torch.dynamoconfig method)": [[49, "hidet.graph.frontend.torch.DynamoConfig.correctness_report"]], "dump_graph_ir() (hidet.graph.frontend.torch.dynamoconfig method)": [[49, "hidet.graph.frontend.torch.DynamoConfig.dump_graph_ir"]], "from_torch() (in module hidet.graph.frontend)": [[49, "hidet.graph.frontend.from_torch"]], "parallel_k() (hidet.graph.frontend.torch.dynamoconfig method)": [[49, "hidet.graph.frontend.torch.DynamoConfig.parallel_k"]], "print_input_graph() (hidet.graph.frontend.torch.dynamoconfig method)": [[49, "hidet.graph.frontend.torch.DynamoConfig.print_input_graph"]], "reset() (hidet.graph.frontend.torch.dynamoconfig method)": [[49, "hidet.graph.frontend.torch.DynamoConfig.reset"]], "search_space() (hidet.graph.frontend.torch.dynamoconfig method)": [[49, "hidet.graph.frontend.torch.DynamoConfig.search_space"]], "steal_weights() (hidet.graph.frontend.torch.dynamoconfig method)": [[49, "hidet.graph.frontend.torch.DynamoConfig.steal_weights"]], "use_attention() (hidet.graph.frontend.torch.dynamoconfig method)": [[49, "hidet.graph.frontend.torch.DynamoConfig.use_attention"]], "use_cuda_graph() (hidet.graph.frontend.torch.dynamoconfig method)": [[49, "hidet.graph.frontend.torch.DynamoConfig.use_cuda_graph"]], "use_fp16() (hidet.graph.frontend.torch.dynamoconfig method)": [[49, "hidet.graph.frontend.torch.DynamoConfig.use_fp16"]], "use_fp16_reduction() (hidet.graph.frontend.torch.dynamoconfig method)": [[49, "hidet.graph.frontend.torch.DynamoConfig.use_fp16_reduction"]], "use_tensor_core() (hidet.graph.frontend.torch.dynamoconfig method)": [[49, "hidet.graph.frontend.torch.DynamoConfig.use_tensor_core"]], "flowgraph (class in hidet.graph)": [[50, "hidet.graph.FlowGraph"]], "graphpassinstrument (class in hidet.graph)": [[50, "hidet.graph.GraphPassInstrument"]], "operator (class in hidet.graph)": [[50, "hidet.graph.Operator"]], "passcontext (class in hidet.graph)": [[50, "hidet.graph.PassContext"]], "__call__() (hidet.graph.flowgraph method)": [[50, "hidet.graph.FlowGraph.__call__"]], "add_quantize_rules() (hidet.graph.passcontext method)": [[50, "hidet.graph.PassContext.add_quantize_rules"]], "after_all_passes() (hidet.graph.graphpassinstrument method)": [[50, "hidet.graph.GraphPassInstrument.after_all_passes"]], "after_pass() (hidet.graph.graphpassinstrument method)": [[50, "hidet.graph.GraphPassInstrument.after_pass"]], "asarray() (in module hidet.graph)": [[50, "hidet.graph.asarray"]], "before_all_passes() (hidet.graph.graphpassinstrument method)": [[50, "hidet.graph.GraphPassInstrument.before_all_passes"]], "before_pass() (hidet.graph.graphpassinstrument method)": [[50, "hidet.graph.GraphPassInstrument.before_pass"]], "build() (hidet.graph.flowgraph method)": [[50, "hidet.graph.FlowGraph.build"]], "build_target (hidet.graph.operator property)": [[50, "hidet.graph.Operator.build_target"]], "configs (hidet.graph.passcontext attribute)": [[50, "hidet.graph.PassContext.configs"]], "cuda_() (hidet.graph.flowgraph method)": [[50, "hidet.graph.FlowGraph.cuda_"]], "cuda_graph() (hidet.graph.flowgraph method)": [[50, "hidet.graph.FlowGraph.cuda_graph"]], "current() (hidet.graph.passcontext class method)": [[50, "hidet.graph.PassContext.current"]], "device (hidet.graph.operator property)": [[50, "hidet.graph.Operator.device"]], "empty() (in module hidet.graph)": [[50, "hidet.graph.empty"]], "empty_like() (in module hidet.graph)": [[50, "hidet.graph.empty_like"]], "forward() (hidet.graph.flowgraph method)": [[50, "hidet.graph.FlowGraph.forward"]], "from_dlpack() (in module hidet.graph)": [[50, "hidet.graph.from_dlpack"]], "from_numpy() (in module hidet.graph)": [[50, "hidet.graph.from_numpy"]], "from_torch() (in module hidet.graph)": [[50, "hidet.graph.from_torch"]], "full() (in module hidet.graph)": [[50, "hidet.graph.full"]], "full_like() (in module hidet.graph)": [[50, "hidet.graph.full_like"]], "hidet.graph": [[50, "module-hidet.graph"]], "instruments (hidet.graph.passcontext attribute)": [[50, "hidet.graph.PassContext.instruments"]], "latency() (hidet.graph.flowgraph method)": [[50, "hidet.graph.FlowGraph.latency"]], "load() (hidet.graph.flowgraph static method)": [[50, "hidet.graph.FlowGraph.load"]], "nodes (hidet.graph.flowgraph property)": [[50, "hidet.graph.FlowGraph.nodes"]], "ones() (in module hidet.graph)": [[50, "hidet.graph.ones"]], "ones_like() (in module hidet.graph)": [[50, "hidet.graph.ones_like"]], "optimize() (in module hidet.graph)": [[50, "hidet.graph.optimize"]], "profile_pass_instrument() (hidet.graph.passcontext method)": [[50, "hidet.graph.PassContext.profile_pass_instrument"]], "randn() (in module hidet.graph)": [[50, "hidet.graph.randn"]], "randn_like() (in module hidet.graph)": [[50, "hidet.graph.randn_like"]], "reduce_cuda_compile_mem() (hidet.graph.passcontext method)": [[50, "hidet.graph.PassContext.reduce_cuda_compile_mem"]], "save() (hidet.graph.flowgraph method)": [[50, "hidet.graph.FlowGraph.save"]], "save_graph_instrument() (hidet.graph.passcontext method)": [[50, "hidet.graph.PassContext.save_graph_instrument"]], "set_mma() (hidet.graph.passcontext method)": [[50, "hidet.graph.PassContext.set_mma"]], "set_parallel_k() (hidet.graph.passcontext method)": [[50, "hidet.graph.PassContext.set_parallel_k"]], "set_precision() (hidet.graph.passcontext method)": [[50, "hidet.graph.PassContext.set_precision"]], "set_reduce_precision() (hidet.graph.passcontext method)": [[50, "hidet.graph.PassContext.set_reduce_precision"]], "set_use_attention() (hidet.graph.passcontext method)": [[50, "hidet.graph.PassContext.set_use_attention"]], "set_verbose() (hidet.graph.passcontext method)": [[50, "hidet.graph.PassContext.set_verbose"]], "symbol() (in module hidet.graph)": [[50, "hidet.graph.symbol"]], "symbol_like() (in module hidet.graph)": [[50, "hidet.graph.symbol_like"]], "trace_from() (in module hidet.graph)": [[50, "hidet.graph.trace_from"]], "usage_count (hidet.graph.flowgraph property)": [[50, "hidet.graph.FlowGraph.usage_count"]], "vcuda_() (hidet.graph.flowgraph method)": [[50, "hidet.graph.FlowGraph.vcuda_"]], "zeros() (in module hidet.graph)": [[50, "hidet.graph.zeros"]], "zeros_like() (in module hidet.graph)": [[50, "hidet.graph.zeros_like"]], "resolverule (class in hidet.graph.transforms.resolve_variant)": [[52, "hidet.graph.transforms.resolve_variant.ResolveRule"]], "register_resolve_rule() (in module hidet.graph.transforms.resolve_variant)": [[52, "hidet.graph.transforms.resolve_variant.register_resolve_rule"]], "resolve() (hidet.graph.transforms.resolve_variant.resolverule method)": [[52, "hidet.graph.transforms.resolve_variant.ResolveRule.resolve"]], "operatorpattern (class in hidet.graph.transforms.subgraph_rewrite)": [[53, "hidet.graph.transforms.subgraph_rewrite.OperatorPattern"]], "subgraphrewriterule (class in hidet.graph.transforms.subgraph_rewrite)": [[53, "hidet.graph.transforms.subgraph_rewrite.SubgraphRewriteRule"]], "tensorpattern (class in hidet.graph.transforms.subgraph_rewrite)": [[53, "hidet.graph.transforms.subgraph_rewrite.TensorPattern"]], "register_rewrite_rule() (in module hidet.graph.transforms.subgraph_rewrite)": [[53, "hidet.graph.transforms.subgraph_rewrite.register_rewrite_rule"]], "source() (hidet.graph.transforms.subgraph_rewrite.subgraphrewriterule method)": [[53, "hidet.graph.transforms.subgraph_rewrite.SubgraphRewriteRule.source"]], "target() (hidet.graph.transforms.subgraph_rewrite.subgraphrewriterule method)": [[53, "hidet.graph.transforms.subgraph_rewrite.SubgraphRewriteRule.target"]], "reducetype (class in hidet.ir.compute)": [[55, "hidet.ir.compute.ReduceType"]], "arg_reduce() (in module hidet.ir.compute)": [[55, "hidet.ir.compute.arg_reduce"]], "compute() (in module hidet.ir.compute)": [[55, "hidet.ir.compute.compute"]], "hidet.ir.compute": [[55, "module-hidet.ir.compute"]], "reduce() (in module hidet.ir.compute)": [[55, "hidet.ir.compute.reduce"]], "scalar_input() (in module hidet.ir.compute)": [[55, "hidet.ir.compute.scalar_input"]], "tensor_input() (in module hidet.ir.compute)": [[55, "hidet.ir.compute.tensor_input"]], "ifthenelse (class in hidet.ir.expr)": [[56, "hidet.ir.expr.IfThenElse"]], "int (in module hidet.ir.expr)": [[56, "hidet.ir.expr.Int"]], "hidet.ir.expr": [[56, "module-hidet.ir.expr"]], "if_then_else() (in module hidet.ir.expr)": [[56, "hidet.ir.expr.if_then_else"]], "tensor_slice() (in module hidet.ir.expr)": [[56, "hidet.ir.expr.tensor_slice"]], "function (class in hidet.ir.func)": [[57, "hidet.ir.func.Function"]], "get_attr() (hidet.ir.func.function method)": [[57, "hidet.ir.func.Function.get_attr"]], "hidet.ir.func": [[57, "module-hidet.ir.func"]], "declarescope (class in hidet.ir.stmt)": [[59, "hidet.ir.stmt.DeclareScope"]], "hidet.ir.stmt": [[59, "module-hidet.ir.stmt"]], "task (class in hidet.ir.task)": [[60, "hidet.ir.task.Task"]], "build() (hidet.ir.task.task method)": [[60, "hidet.ir.task.Task.build"]], "dummy_arguments() (hidet.ir.task.task method)": [[60, "hidet.ir.task.Task.dummy_arguments"]], "generate_arguments() (hidet.ir.task.task method)": [[60, "hidet.ir.task.Task.generate_arguments"]], "hidet.ir.task": [[60, "module-hidet.ir.task"]], "datatype (class in hidet.ir.type)": [[61, "hidet.ir.type.DataType"]], "data_type() (in module hidet.ir.type)": [[61, "hidet.ir.type.data_type"]], "abs() (in module hidet.ops)": [[62, "hidet.ops.abs"]], "acos() (in module hidet.ops)": [[62, "hidet.ops.acos"]], "acosh() (in module hidet.ops)": [[62, "hidet.ops.acosh"]], "adaptive_avg_pool1d() (in module hidet.ops)": [[62, "hidet.ops.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module hidet.ops)": [[62, "hidet.ops.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module hidet.ops)": [[62, "hidet.ops.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module hidet.ops)": [[62, "hidet.ops.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module hidet.ops)": [[62, "hidet.ops.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module hidet.ops)": [[62, "hidet.ops.adaptive_max_pool3d"]], "add() (in module hidet.ops)": [[62, "hidet.ops.add"]], "all() (in module hidet.ops)": [[62, "hidet.ops.all"]], "all_gather() (in module hidet.ops)": [[62, "hidet.ops.all_gather"]], "all_reduce() (in module hidet.ops)": [[62, "hidet.ops.all_reduce"]], "any() (in module hidet.ops)": [[62, "hidet.ops.any"]], "arange() (in module hidet.ops)": [[62, "hidet.ops.arange"]], "argmax() (in module hidet.ops)": [[62, "hidet.ops.argmax"]], "argmin() (in module hidet.ops)": [[62, "hidet.ops.argmin"]], "asin() (in module hidet.ops)": [[62, "hidet.ops.asin"]], "asinh() (in module hidet.ops)": [[62, "hidet.ops.asinh"]], "atan() (in module hidet.ops)": [[62, "hidet.ops.atan"]], "atan2() (in module hidet.ops)": [[62, "hidet.ops.atan2"]], "atanh() (in module hidet.ops)": [[62, "hidet.ops.atanh"]], "attention() (in module hidet.ops)": [[62, "hidet.ops.attention"]], "avg_pool2d() (in module hidet.ops)": [[62, "hidet.ops.avg_pool2d"]], "avg_pool3d() (in module hidet.ops)": [[62, "hidet.ops.avg_pool3d"]], "barrier() (in module hidet.ops)": [[62, "hidet.ops.barrier"]], "batch_matmul() (in module hidet.ops)": [[62, "hidet.ops.batch_matmul"]], "batch_norm_infer() (in module hidet.ops)": [[62, "hidet.ops.batch_norm_infer"]], "bitwise_and() (in module hidet.ops)": [[62, "hidet.ops.bitwise_and"]], "bitwise_invert() (in module hidet.ops)": [[62, "hidet.ops.bitwise_invert"]], "bitwise_left_shift() (in module hidet.ops)": [[62, "hidet.ops.bitwise_left_shift"]], "bitwise_or() (in module hidet.ops)": [[62, "hidet.ops.bitwise_or"]], "bitwise_right_shift() (in module hidet.ops)": [[62, "hidet.ops.bitwise_right_shift"]], "bitwise_xor() (in module hidet.ops)": [[62, "hidet.ops.bitwise_xor"]], "broadcast() (in module hidet.ops)": [[62, "hidet.ops.broadcast"]], "cast() (in module hidet.ops)": [[62, "hidet.ops.cast"]], "ceil() (in module hidet.ops)": [[62, "hidet.ops.ceil"]], "celu() (in module hidet.ops)": [[62, "hidet.ops.celu"]], "clamp() (in module hidet.ops)": [[62, "hidet.ops.clamp"]], "clip() (in module hidet.ops)": [[62, "hidet.ops.clip"]], "concat() (in module hidet.ops)": [[62, "hidet.ops.concat"]], "conj() (in module hidet.ops)": [[62, "hidet.ops.conj"]], "conv1d() (in module hidet.ops)": [[62, "hidet.ops.conv1d"]], "conv1d_gemm() (in module hidet.ops)": [[62, "hidet.ops.conv1d_gemm"]], "conv1d_transpose() (in module hidet.ops)": [[62, "hidet.ops.conv1d_transpose"]], "conv2d() (in module hidet.ops)": [[62, "hidet.ops.conv2d"]], "conv2d_channel_last() (in module hidet.ops)": [[62, "hidet.ops.conv2d_channel_last"]], "conv2d_gemm() (in module hidet.ops)": [[62, "hidet.ops.conv2d_gemm"]], "conv2d_gemm_fp16() (in module hidet.ops)": [[62, "hidet.ops.conv2d_gemm_fp16"]], "conv2d_gemm_fp16_channel_last() (in module hidet.ops)": [[62, "hidet.ops.conv2d_gemm_fp16_channel_last"]], "conv2d_gemm_image_transform() (in module hidet.ops)": [[62, "hidet.ops.conv2d_gemm_image_transform"]], "conv2d_transpose() (in module hidet.ops)": [[62, "hidet.ops.conv2d_transpose"]], "conv2d_transpose_gemm() (in module hidet.ops)": [[62, "hidet.ops.conv2d_transpose_gemm"]], "conv2d_winograd() (in module hidet.ops)": [[62, "hidet.ops.conv2d_winograd"]], "conv3d() (in module hidet.ops)": [[62, "hidet.ops.conv3d"]], "conv3d_gemm() (in module hidet.ops)": [[62, "hidet.ops.conv3d_gemm"]], "conv3d_transpose() (in module hidet.ops)": [[62, "hidet.ops.conv3d_transpose"]], "conv_pad() (in module hidet.ops)": [[62, "hidet.ops.conv_pad"]], "cos() (in module hidet.ops)": [[62, "hidet.ops.cos"]], "cosh() (in module hidet.ops)": [[62, "hidet.ops.cosh"]], "cumsum() (in module hidet.ops)": [[62, "hidet.ops.cumsum"]], "divide() (in module hidet.ops)": [[62, "hidet.ops.divide"]], "einsum() (in module hidet.ops)": [[62, "hidet.ops.einsum"]], "equal() (in module hidet.ops)": [[62, "hidet.ops.equal"]], "erf() (in module hidet.ops)": [[62, "hidet.ops.erf"]], "exp() (in module hidet.ops)": [[62, "hidet.ops.exp"]], "expand_dims() (in module hidet.ops)": [[62, "hidet.ops.expand_dims"]], "expm1() (in module hidet.ops)": [[62, "hidet.ops.expm1"]], "flatten() (in module hidet.ops)": [[62, "hidet.ops.flatten"]], "floor() (in module hidet.ops)": [[62, "hidet.ops.floor"]], "full() (in module hidet.ops)": [[62, "hidet.ops.full"]], "fused_operator() (in module hidet.ops)": [[62, "hidet.ops.fused_operator"]], "gather() (in module hidet.ops)": [[62, "hidet.ops.gather"]], "gelu() (in module hidet.ops)": [[62, "hidet.ops.gelu"]], "greater() (in module hidet.ops)": [[62, "hidet.ops.greater"]], "greater_equal() (in module hidet.ops)": [[62, "hidet.ops.greater_equal"]], "group_norm() (in module hidet.ops)": [[62, "hidet.ops.group_norm"]], "hardshrink() (in module hidet.ops)": [[62, "hidet.ops.hardshrink"]], "hardsigmoid() (in module hidet.ops)": [[62, "hidet.ops.hardsigmoid"]], "hardswish() (in module hidet.ops)": [[62, "hidet.ops.hardswish"]], "hardtanh() (in module hidet.ops)": [[62, "hidet.ops.hardtanh"]], "hidet.ops": [[62, "module-hidet.ops"]], "imag() (in module hidet.ops)": [[62, "hidet.ops.imag"]], "instance_norm() (in module hidet.ops)": [[62, "hidet.ops.instance_norm"]], "isfinite() (in module hidet.ops)": [[62, "hidet.ops.isfinite"]], "isinf() (in module hidet.ops)": [[62, "hidet.ops.isinf"]], "isnan() (in module hidet.ops)": [[62, "hidet.ops.isnan"]], "layer_norm() (in module hidet.ops)": [[62, "hidet.ops.layer_norm"]], "leaky_relu() (in module hidet.ops)": [[62, "hidet.ops.leaky_relu"]], "less() (in module hidet.ops)": [[62, "hidet.ops.less"]], "less_equal() (in module hidet.ops)": [[62, "hidet.ops.less_equal"]], "linspace() (in module hidet.ops)": [[62, "hidet.ops.linspace"]], "log() (in module hidet.ops)": [[62, "hidet.ops.log"]], "log10() (in module hidet.ops)": [[62, "hidet.ops.log10"]], "log1p() (in module hidet.ops)": [[62, "hidet.ops.log1p"]], "log2() (in module hidet.ops)": [[62, "hidet.ops.log2"]], "logaddexp() (in module hidet.ops)": [[62, "hidet.ops.logaddexp"]], "logical_and() (in module hidet.ops)": [[62, "hidet.ops.logical_and"]], "logical_not() (in module hidet.ops)": [[62, "hidet.ops.logical_not"]], "logical_or() (in module hidet.ops)": [[62, "hidet.ops.logical_or"]], "logical_xor() (in module hidet.ops)": [[62, "hidet.ops.logical_xor"]], "logsigmoid() (in module hidet.ops)": [[62, "hidet.ops.logsigmoid"]], "lp_norm() (in module hidet.ops)": [[62, "hidet.ops.lp_norm"]], "make_complex() (in module hidet.ops)": [[62, "hidet.ops.make_complex"]], "matmul() (in module hidet.ops)": [[62, "hidet.ops.matmul"]], "matmul_x86() (in module hidet.ops)": [[62, "hidet.ops.matmul_x86"]], "max() (in module hidet.ops)": [[62, "hidet.ops.max"]], "max_pool2d() (in module hidet.ops)": [[62, "hidet.ops.max_pool2d"]], "max_pool3d() (in module hidet.ops)": [[62, "hidet.ops.max_pool3d"]], "maximum() (in module hidet.ops)": [[62, "hidet.ops.maximum"]], "mean() (in module hidet.ops)": [[62, "hidet.ops.mean"]], "min() (in module hidet.ops)": [[62, "hidet.ops.min"]], "minimum() (in module hidet.ops)": [[62, "hidet.ops.minimum"]], "mod() (in module hidet.ops)": [[62, "hidet.ops.mod"]], "multiply() (in module hidet.ops)": [[62, "hidet.ops.multiply"]], "negative() (in module hidet.ops)": [[62, "hidet.ops.negative"]], "not_equal() (in module hidet.ops)": [[62, "hidet.ops.not_equal"]], "pad() (in module hidet.ops)": [[62, "hidet.ops.pad"]], "permute_dims() (in module hidet.ops)": [[62, "hidet.ops.permute_dims"]], "positive() (in module hidet.ops)": [[62, "hidet.ops.positive"]], "pow() (in module hidet.ops)": [[62, "hidet.ops.pow"]], "prelu() (in module hidet.ops)": [[62, "hidet.ops.prelu"]], "prod() (in module hidet.ops)": [[62, "hidet.ops.prod"]], "real() (in module hidet.ops)": [[62, "hidet.ops.real"]], "rearrange() (in module hidet.ops)": [[62, "hidet.ops.rearrange"]], "reciprocal() (in module hidet.ops)": [[62, "hidet.ops.reciprocal"]], "reduce_scatter() (in module hidet.ops)": [[62, "hidet.ops.reduce_scatter"]], "relu() (in module hidet.ops)": [[62, "hidet.ops.relu"]], "relu6() (in module hidet.ops)": [[62, "hidet.ops.relu6"]], "remainder() (in module hidet.ops)": [[62, "hidet.ops.remainder"]], "reshape() (in module hidet.ops)": [[62, "hidet.ops.reshape"]], "resize2d() (in module hidet.ops)": [[62, "hidet.ops.resize2d"]], "roll() (in module hidet.ops)": [[62, "hidet.ops.roll"]], "round() (in module hidet.ops)": [[62, "hidet.ops.round"]], "rsqrt() (in module hidet.ops)": [[62, "hidet.ops.rsqrt"]], "set_strided_slice() (in module hidet.ops)": [[62, "hidet.ops.set_strided_slice"]], "sigmoid() (in module hidet.ops)": [[62, "hidet.ops.sigmoid"]], "sign() (in module hidet.ops)": [[62, "hidet.ops.sign"]], "silu() (in module hidet.ops)": [[62, "hidet.ops.silu"]], "sin() (in module hidet.ops)": [[62, "hidet.ops.sin"]], "sinh() (in module hidet.ops)": [[62, "hidet.ops.sinh"]], "softmax() (in module hidet.ops)": [[62, "hidet.ops.softmax"]], "softmin() (in module hidet.ops)": [[62, "hidet.ops.softmin"]], "softplus() (in module hidet.ops)": [[62, "hidet.ops.softplus"]], "softshrink() (in module hidet.ops)": [[62, "hidet.ops.softshrink"]], "softsign() (in module hidet.ops)": [[62, "hidet.ops.softsign"]], "split() (in module hidet.ops)": [[62, "hidet.ops.split"]], "sqrt() (in module hidet.ops)": [[62, "hidet.ops.sqrt"]], "square() (in module hidet.ops)": [[62, "hidet.ops.square"]], "squeeze() (in module hidet.ops)": [[62, "hidet.ops.squeeze"]], "std() (in module hidet.ops)": [[62, "hidet.ops.std"]], "strided_slice() (in module hidet.ops)": [[62, "hidet.ops.strided_slice"]], "subtract() (in module hidet.ops)": [[62, "hidet.ops.subtract"]], "sum() (in module hidet.ops)": [[62, "hidet.ops.sum"]], "symmetric_dequantize() (in module hidet.ops)": [[62, "hidet.ops.symmetric_dequantize"]], "symmetric_quantize() (in module hidet.ops)": [[62, "hidet.ops.symmetric_quantize"]], "take() (in module hidet.ops)": [[62, "hidet.ops.take"]], "tan() (in module hidet.ops)": [[62, "hidet.ops.tan"]], "tanh() (in module hidet.ops)": [[62, "hidet.ops.tanh"]], "tanhshrink() (in module hidet.ops)": [[62, "hidet.ops.tanhshrink"]], "tile() (in module hidet.ops)": [[62, "hidet.ops.tile"]], "transfer() (in module hidet.ops)": [[62, "hidet.ops.transfer"]], "transpose() (in module hidet.ops)": [[62, "hidet.ops.transpose"]], "tri() (in module hidet.ops)": [[62, "hidet.ops.tri"]], "trunc() (in module hidet.ops)": [[62, "hidet.ops.trunc"]], "unsqueeze() (in module hidet.ops)": [[62, "hidet.ops.unsqueeze"]], "var() (in module hidet.ops)": [[62, "hidet.ops.var"]], "where() (in module hidet.ops)": [[62, "hidet.ops.where"]], "optioncontext (class in hidet.option)": [[63, "hidet.option.OptionContext"]], "bench_config() (in module hidet.option)": [[63, "hidet.option.bench_config"]], "cache_dir() (in module hidet.option)": [[63, "hidet.option.cache_dir"]], "cache_operator() (in module hidet.option)": [[63, "hidet.option.cache_operator"]], "context() (in module hidet.option)": [[63, "hidet.option.context"]], "current_context() (in module hidet.option)": [[63, "hidet.option.current_context"]], "debug_cache_tuning() (in module hidet.option)": [[63, "hidet.option.debug_cache_tuning"]], "debug_show_var_id() (in module hidet.option)": [[63, "hidet.option.debug_show_var_id"]], "debug_show_verbose_flow_graph() (in module hidet.option)": [[63, "hidet.option.debug_show_verbose_flow_graph"]], "dump_options() (in module hidet.option)": [[63, "hidet.option.dump_options"]], "get_bench_config() (in module hidet.option)": [[63, "hidet.option.get_bench_config"]], "get_cache_dir() (in module hidet.option)": [[63, "hidet.option.get_cache_dir"]], "get_cache_operator() (in module hidet.option)": [[63, "hidet.option.get_cache_operator"]], "get_option() (in module hidet.option)": [[63, "hidet.option.get_option"]], "get_parallel_build() (in module hidet.option)": [[63, "hidet.option.get_parallel_build"]], "get_parallel_tune() (in module hidet.option)": [[63, "hidet.option.get_parallel_tune"]], "get_runtime_check() (in module hidet.option)": [[63, "hidet.option.get_runtime_check"]], "get_save_lower_ir() (in module hidet.option)": [[63, "hidet.option.get_save_lower_ir"]], "get_search_space() (in module hidet.option)": [[63, "hidet.option.get_search_space"]], "hidet.option": [[63, "module-hidet.option"]], "parallel_build() (in module hidet.option)": [[63, "hidet.option.parallel_build"]], "parallel_tune() (in module hidet.option)": [[63, "hidet.option.parallel_tune"]], "restore_options() (in module hidet.option)": [[63, "hidet.option.restore_options"]], "runtime_check() (in module hidet.option)": [[63, "hidet.option.runtime_check"]], "save_lower_ir() (in module hidet.option)": [[63, "hidet.option.save_lower_ir"]], "search_space() (in module hidet.option)": [[63, "hidet.option.search_space"]], "set_option() (in module hidet.option)": [[63, "hidet.option.set_option"]], "asarray() (in module hidet)": [[64, "hidet.asarray"]], "empty() (in module hidet)": [[64, "hidet.empty"]], "empty_like() (in module hidet)": [[64, "hidet.empty_like"]], "from_dlpack() (in module hidet)": [[64, "hidet.from_dlpack"]], "from_torch() (in module hidet)": [[64, "hidet.from_torch"]], "full() (in module hidet)": [[64, "hidet.full"]], "full_like() (in module hidet)": [[64, "hidet.full_like"]], "hidet": [[64, "module-hidet"]], "ones() (in module hidet)": [[64, "hidet.ones"]], "ones_like() (in module hidet)": [[64, "hidet.ones_like"]], "randn() (in module hidet)": [[64, "hidet.randn"]], "randn_like() (in module hidet)": [[64, "hidet.randn_like"]], "script() (in module hidet)": [[64, "hidet.script"]], "symbol() (in module hidet)": [[64, "hidet.symbol"]], "symbol_like() (in module hidet)": [[64, "hidet.symbol_like"]], "trace_from() (in module hidet)": [[64, "hidet.trace_from"]], "zeros() (in module hidet)": [[64, "hidet.zeros"]], "zeros_like() (in module hidet)": [[64, "hidet.zeros_like"]], "compiledfunction (class in hidet.runtime)": [[65, "hidet.runtime.CompiledFunction"]], "hidet.runtime": [[65, "module-hidet.runtime"]], "tensor (class in hidet)": [[66, "hidet.Tensor"]], "astype() (hidet.tensor method)": [[66, "hidet.Tensor.astype"]], "contiguous() (hidet.tensor method)": [[66, "hidet.Tensor.contiguous"]], "copy() (hidet.tensor method)": [[66, "hidet.Tensor.copy"]], "copy_async() (hidet.tensor method)": [[66, "hidet.Tensor.copy_async"]], "cpu() (hidet.tensor method)": [[66, "hidet.Tensor.cpu"]], "cpu_async() (hidet.tensor method)": [[66, "hidet.Tensor.cpu_async"]], "cuda() (hidet.tensor method)": [[66, "hidet.Tensor.cuda"]], "cuda_async() (hidet.tensor method)": [[66, "hidet.Tensor.cuda_async"]], "detach() (hidet.tensor method)": [[66, "hidet.Tensor.detach"]], "device (hidet.tensor attribute)": [[66, "hidet.Tensor.device"]], "dtype (hidet.tensor attribute)": [[66, "hidet.Tensor.dtype"]], "is_symbolic() (hidet.tensor method)": [[66, "hidet.Tensor.is_symbolic"]], "item() (hidet.tensor method)": [[66, "hidet.Tensor.item"]], "layout (hidet.tensor attribute)": [[66, "hidet.Tensor.layout"]], "mean() (hidet.tensor method)": [[66, "hidet.Tensor.mean"]], "nbytes (hidet.tensor attribute)": [[66, "hidet.Tensor.nbytes"]], "numpy() (hidet.tensor method)": [[66, "hidet.Tensor.numpy"]], "op (hidet.tensor attribute)": [[66, "hidet.Tensor.op"]], "rearrange() (hidet.tensor method)": [[66, "hidet.Tensor.rearrange"]], "reshape() (hidet.tensor method)": [[66, "hidet.Tensor.reshape"]], "shape (hidet.tensor attribute)": [[66, "hidet.Tensor.shape"]], "signature() (hidet.tensor method)": [[66, "hidet.Tensor.signature"]], "size (hidet.tensor attribute)": [[66, "hidet.Tensor.size"]], "squeeze() (hidet.tensor method)": [[66, "hidet.Tensor.squeeze"]], "storage (hidet.tensor attribute)": [[66, "hidet.Tensor.storage"]], "sum() (hidet.tensor method)": [[66, "hidet.Tensor.sum"]], "to() (hidet.tensor method)": [[66, "hidet.Tensor.to"]], "to_device() (hidet.tensor method)": [[66, "hidet.Tensor.to_device"]], "tolist() (hidet.tensor method)": [[66, "hidet.Tensor.tolist"]], "torch() (hidet.tensor method)": [[66, "hidet.Tensor.torch"]], "trace (hidet.tensor attribute)": [[66, "hidet.Tensor.trace"]], "unsqueeze() (hidet.tensor method)": [[66, "hidet.Tensor.unsqueeze"]], "benchmark_func() (in module hidet.testing)": [[67, "hidet.testing.benchmark_func"]], "hidet.testing": [[67, "module-hidet.testing"]], "directedgraph (class in hidet.utils)": [[68, "hidet.utils.DirectedGraph"]], "add_edge() (hidet.utils.directedgraph method)": [[68, "hidet.utils.DirectedGraph.add_edge"]], "add_node() (hidet.utils.directedgraph method)": [[68, "hidet.utils.DirectedGraph.add_node"]], "benchmark_func() (in module hidet.utils)": [[68, "hidet.utils.benchmark_func"]], "error_tolerance() (in module hidet.utils)": [[68, "hidet.utils.error_tolerance"]], "factorize() (in module hidet.utils)": [[68, "hidet.utils.factorize"]], "from_edges() (hidet.utils.directedgraph static method)": [[68, "hidet.utils.DirectedGraph.from_edges"]], "gcd() (in module hidet.utils)": [[68, "hidet.utils.gcd"]], "has_edge() (hidet.utils.directedgraph method)": [[68, "hidet.utils.DirectedGraph.has_edge"]], "has_node() (hidet.utils.directedgraph method)": [[68, "hidet.utils.DirectedGraph.has_node"]], "hidet.utils": [[68, "module-hidet.utils"]], "initialize() (in module hidet.utils)": [[68, "hidet.utils.initialize"]], "lcm() (in module hidet.utils)": [[68, "hidet.utils.lcm"]], "topological_order() (hidet.utils.directedgraph method)": [[68, "hidet.utils.DirectedGraph.topological_order"]]}})