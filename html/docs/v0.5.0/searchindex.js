Search.setIndex({"docnames": ["developer-guides/contributing", "gallery/developer-guides/add-new-operator-compute-definition", "gallery/developer-guides/add-new-operator-rule-based", "gallery/developer-guides/add-new-operator-template-based", "gallery/developer-guides/add-operator-resolve-rule", "gallery/developer-guides/add-subgraph-rewrite-rule", "gallery/developer-guides/add-torch-operator-mapping", "gallery/developer-guides/hidet-script-dynamic-kernel", "gallery/developer-guides/index", "gallery/developer-guides/sg_execution_times", "gallery/getting-started/index", "gallery/getting-started/quick-start", "gallery/getting-started/sg_execution_times", "gallery/hidet-script/0-hello-world", "gallery/hidet-script/1-scalar-addition", "gallery/hidet-script/2-vector-addition", "gallery/hidet-script/3-kernel-functions", "gallery/hidet-script/4-naive-matmul", "gallery/hidet-script/5-efficient-matmul", "gallery/hidet-script/index", "gallery/hidet-script/sg_execution_times", "gallery/how-to-guides/index", "gallery/how-to-guides/sg_execution_times", "gallery/how-to-guides/visualize-flow-graph", "gallery/index", "gallery/sg_execution_times", "gallery/tutorials/index", "gallery/tutorials/optimize-onnx-model", "gallery/tutorials/optimize-pytorch-model", "gallery/tutorials/sg_execution_times", "genindex", "getting-started/build-from-source", "getting-started/install", "hidet-script/examples/index", "hidet-script/index", "hidet-script/reference/1-type-system", "hidet-script/reference/2-expression", "hidet-script/reference/3-statement", "hidet-script/reference/4-function", "hidet-script/reference/5-module", "hidet-script/reference/6-cuda-specific", "hidet-script/reference/7-cpu-specific", "hidet-script/reference/index", "how-to-guides/add-new-operator/index", "index", "notes/operator-cache", "python_api/cuda", "python_api/data_types", "python_api/drivers", "python_api/ffi/index", "python_api/graph/frontend/index", "python_api/graph/frontend/onnx", "python_api/graph/frontend/torch", "python_api/graph/index", "python_api/graph/transforms/index", "python_api/graph/transforms/resolve_variant", "python_api/graph/transforms/subgraph_rewrite", "python_api/index", "python_api/ir/compute", "python_api/ir/expr", "python_api/ir/func", "python_api/ir/index", "python_api/ir/stmt", "python_api/ir/task", "python_api/ir/type", "python_api/ops/index", "python_api/option", "python_api/root", "python_api/runtime/index", "python_api/tensor", "python_api/testing/index", "python_api/utils/index", "sg_execution_times"], "filenames": ["developer-guides/contributing.rst", "gallery/developer-guides/add-new-operator-compute-definition.rst", "gallery/developer-guides/add-new-operator-rule-based.rst", "gallery/developer-guides/add-new-operator-template-based.rst", "gallery/developer-guides/add-operator-resolve-rule.rst", "gallery/developer-guides/add-subgraph-rewrite-rule.rst", "gallery/developer-guides/add-torch-operator-mapping.rst", "gallery/developer-guides/hidet-script-dynamic-kernel.rst", "gallery/developer-guides/index.rst", "gallery/developer-guides/sg_execution_times.rst", "gallery/getting-started/index.rst", "gallery/getting-started/quick-start.rst", "gallery/getting-started/sg_execution_times.rst", "gallery/hidet-script/0-hello-world.rst", "gallery/hidet-script/1-scalar-addition.rst", "gallery/hidet-script/2-vector-addition.rst", "gallery/hidet-script/3-kernel-functions.rst", "gallery/hidet-script/4-naive-matmul.rst", "gallery/hidet-script/5-efficient-matmul.rst", "gallery/hidet-script/index.rst", "gallery/hidet-script/sg_execution_times.rst", "gallery/how-to-guides/index.rst", "gallery/how-to-guides/sg_execution_times.rst", "gallery/how-to-guides/visualize-flow-graph.rst", "gallery/index.rst", "gallery/sg_execution_times.rst", "gallery/tutorials/index.rst", "gallery/tutorials/optimize-onnx-model.rst", "gallery/tutorials/optimize-pytorch-model.rst", "gallery/tutorials/sg_execution_times.rst", "genindex.rst", "getting-started/build-from-source.rst", "getting-started/install.rst", "hidet-script/examples/index.rst", "hidet-script/index.rst", "hidet-script/reference/1-type-system.rst", "hidet-script/reference/2-expression.rst", "hidet-script/reference/3-statement.rst", "hidet-script/reference/4-function.rst", "hidet-script/reference/5-module.rst", "hidet-script/reference/6-cuda-specific.rst", "hidet-script/reference/7-cpu-specific.rst", "hidet-script/reference/index.rst", "how-to-guides/add-new-operator/index.rst", "index.rst", "notes/operator-cache.rst", "python_api/cuda.rst", "python_api/data_types.rst", "python_api/drivers.rst", "python_api/ffi/index.rst", "python_api/graph/frontend/index.rst", "python_api/graph/frontend/onnx.rst", "python_api/graph/frontend/torch.rst", "python_api/graph/index.rst", "python_api/graph/transforms/index.rst", "python_api/graph/transforms/resolve_variant.rst", "python_api/graph/transforms/subgraph_rewrite.rst", "python_api/index.rst", "python_api/ir/compute.rst", "python_api/ir/expr.rst", "python_api/ir/func.rst", "python_api/ir/index.rst", "python_api/ir/stmt.rst", "python_api/ir/task.rst", "python_api/ir/type.rst", "python_api/ops/index.rst", "python_api/option.rst", "python_api/root.rst", "python_api/runtime/index.rst", "python_api/tensor.rst", "python_api/testing/index.rst", "python_api/utils/index.rst", "sg_execution_times.rst"], "titles": ["Contributing", "Define Operator Computation", "Using Rule-based Scheduling", "Using Template-based Scheduling", "Add Operator Resolve Rule", "Add Sub-Graph Rewrite Rule", "Add PyTorch Operator Mapping", "Writing Dynamic kernel", "&lt;no title&gt;", "Computation times", "Index", "Quick Start", "Computation times", "Hello World!", "Scalar Addition", "Vector Addition", "Kernel Functions", "Naive Matrix Multiplication", "More Efficient Matrix Multiplication", "Index", "Computation times", "Index", "Computation times", "Visualize Flow Graph", "Index", "Computation times", "Tutorials", "Optimize ONNX Model", "Optimize PyTorch Model", "Computation times", "Index", "Build from source", "Installation", "Examples", "Introduction", "Type System", "Expressions", "Statements", "Function", "Module", "CUDA Specifics", "CPU Specifics", "Reference", "Add New Operator", "Welcome to Hidet\u2019s Documentation", "Operator Cache", "hidet.cuda", "hidet.dtypes", "hidet.drivers", "hidet.ffi", "hidet.graph.frontend", "hidet.graph.frontend.onnx", "hidet.graph.frontend.torch", "hidet.graph", "hidet.graph.transforms", "Resolve Operator Pass", "Sub-graph Rewrite Pass", "Python API", "hidet.ir.compute", "hidet.ir.expr", "hidet.ir.func", "hidet.ir", "hidet.ir.stmt", "hidet.ir.task", "hidet.ir.type", "hidet.ops", "hidet.option", "hidet", "hidet.runtime", "hidet.Tensor", "hidet.testing", "hidet.utils", "Computation times"], "terms": {"To": [0, 3, 4, 11, 23, 27, 28, 31, 32, 34, 35, 36, 37, 40, 41, 45, 48, 49, 53, 66, 67], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 33, 36, 37, 40, 46, 48, 49, 52, 53, 55, 60, 63, 65, 66, 67, 68, 69, 71], "project": [0, 11, 49], "pleas": [0, 1, 6, 18, 28, 34, 37, 40, 41, 53, 58], "fork": 0, "hidet": [0, 1, 2, 3, 4, 6, 7, 9, 13, 14, 15, 16, 17, 18, 20, 23, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 55, 56, 57, 72], "repositori": [0, 31, 45, 66], "creat": [0, 1, 5, 11, 15, 27, 38, 39, 46, 48, 53, 59, 66, 67, 68, 69, 71], "pull": 0, "request": [0, 46], "befor": [0, 4, 5, 6, 23, 27, 46, 53, 66, 68], "submit": [0, 6, 27], "make": [0, 6, 28, 31, 37, 40, 52, 66], "sure": [0, 6, 28, 31, 66], "your": [0, 6, 11, 13, 31], "code": [0, 1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 35, 45, 48, 66, 68], "i": [0, 1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 52, 53, 56, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71], "properli": 0, "format": [0, 11, 18, 27, 66, 67, 68], "pass": [0, 4, 5, 11, 23, 48, 53, 54, 68], "test": [0, 6, 7, 11, 17, 18, 27, 57], "lint": 0, "run": [0, 2, 3, 4, 5, 7, 13, 14, 15, 16, 17, 18, 23, 28, 31, 32, 33, 45, 46, 53, 66, 67, 68], "follow": [0, 1, 3, 4, 6, 11, 13, 14, 16, 27, 31, 32, 35, 36, 37, 38, 40, 42, 45, 46, 47, 48, 55, 59, 66, 68], "script": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 13, 14, 15, 16, 17, 18, 20, 23, 27, 28, 34, 35, 36, 37, 67, 72], "onli": [0, 2, 4, 5, 6, 16, 35, 38, 46, 48, 49, 53, 60, 63, 66, 67], "onc": 0, "instal": [0, 44], "develop": [0, 3, 4, 6, 9, 31, 72], "depend": [0, 1, 28, 45], "pip": [0, 31, 32], "r": [0, 18, 53], "requir": [0, 11, 14, 40, 53, 67], "dev": 0, "txt": [0, 45], "bash": 0, "sh": 0, "us": [0, 1, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 23, 24, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 58, 59, 62, 63, 65, 66, 67, 68, 69, 72], "clear": [0, 5, 52], "cach": [0, 2, 13, 14, 15, 16, 17, 28, 44, 66], "oper": [0, 5, 8, 9, 24, 27, 35, 36, 40, 41, 44, 46, 49, 52, 53, 54, 56, 59, 63, 65, 66, 67, 68, 69, 72], "you": [0, 1, 3, 6, 11, 13, 14, 15, 16, 17, 18, 23, 28, 31, 32, 45, 56], "chang": [0, 35, 45, 69], "sub": [0, 8, 9, 24, 28, 44, 53, 54, 72], "modul": [0, 1, 3, 6, 13, 14, 15, 16, 17, 18, 23, 28, 35, 37, 38, 40, 42, 48, 49, 51, 52, 53, 63, 67, 68], "ir": [0, 1, 2, 3, 6, 7, 11, 34, 48, 52, 53, 55, 66, 67], "backend": [0, 6, 11, 28], "pytest": 0, "go": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 53], "end": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 44, 46, 59, 65, 67, 68], "download": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 32, 45], "full": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 40, 53, 65, 67], "each": [1, 5, 6, 7, 11, 14, 16, 18, 23, 28, 33, 39, 40, 42, 49, 53, 63, 65, 66, 67, 68, 69, 70, 71], "take": [1, 2, 6, 7, 11, 28, 52, 53, 58, 65, 66], "list": [1, 4, 5, 11, 13, 35, 40, 46, 53, 55, 56, 58, 60, 63, 65, 67, 68, 69, 70, 71], "input": [1, 2, 3, 4, 5, 11, 15, 17, 18, 23, 27, 46, 52, 53, 55, 56, 58, 61, 63, 65, 66, 67, 68], "tensor": [1, 2, 4, 5, 6, 7, 15, 17, 18, 23, 27, 34, 36, 40, 43, 46, 52, 53, 55, 56, 57, 58, 59, 62, 63, 65, 66, 67, 68, 71], "produc": [1, 11, 36, 65, 69], "output": [1, 2, 3, 4, 5, 11, 13, 15, 27, 28, 45, 46, 48, 52, 53, 55, 56, 58, 61, 63, 65, 67, 68, 69], "our": [1, 2, 4, 13, 16, 18], "pioneer": 1, "halid": 1, "apach": 1, "tvm": 1, "also": [1, 2, 3, 4, 5, 6, 11, 13, 14, 16, 23, 27, 32, 35, 37, 40, 41, 43, 46, 48, 49, 53, 65, 67, 69], "emploi": [1, 6], "similar": [1, 7, 35], "dsl": [1, 34], "mathemat": [1, 43], "definit": [1, 2, 3, 9, 37, 68, 71, 72], "an": [1, 2, 3, 4, 5, 6, 11, 13, 16, 23, 27, 28, 36, 43, 44, 45, 46, 48, 49, 51, 53, 55, 56, 58, 59, 63, 65, 66, 67, 69, 71], "The": [1, 2, 3, 4, 5, 6, 11, 13, 14, 16, 23, 27, 28, 31, 34, 35, 36, 37, 39, 40, 42, 45, 46, 48, 49, 51, 52, 53, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "precis": [1, 11, 53, 65], "through": [1, 11, 27, 28, 53, 67], "domain": [1, 3, 13, 34, 58, 66], "specif": [1, 3, 4, 11, 13, 34, 35, 36, 42, 48], "languag": [1, 3, 13, 34, 42], "In": [1, 2, 3, 4, 5, 6, 11, 13, 14, 15, 17, 18, 23, 27, 28, 35, 55, 68], "tutori": [1, 2, 3, 4, 5, 11, 23, 27, 29, 72], "we": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 31, 35, 36, 37, 39, 40, 45, 46, 49, 53, 55, 56, 57, 65, 66, 67, 68], "show": [1, 2, 5, 6, 11, 13, 14, 15, 17, 18, 23, 35, 66], "how": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 17, 18, 22, 23, 27, 28, 33, 35, 37, 53, 55, 58, 63, 64, 67, 69, 72], "new": [1, 3, 4, 5, 6, 9, 28, 31, 35, 44, 53, 56, 66, 67, 69, 72], "which": [1, 5, 11, 13, 15, 27, 46, 47, 49, 52, 53, 65, 66, 67, 68], "provid": [1, 2, 4, 11, 23, 28, 40, 41, 46, 49, 52, 53], "tensor_input": [1, 58, 61], "name": [1, 2, 3, 5, 6, 11, 13, 14, 16, 23, 27, 28, 35, 36, 38, 39, 53, 56, 58, 60, 61, 63, 64, 66, 67, 68], "str": [1, 3, 6, 48, 49, 51, 52, 53, 58, 60, 63, 64, 65, 66, 67, 68, 69], "dtype": [1, 2, 3, 7, 11, 15, 17, 18, 23, 28, 35, 40, 53, 57, 58, 64, 65, 66, 67, 69], "shape": [1, 2, 3, 4, 5, 7, 11, 15, 17, 18, 23, 27, 28, 37, 40, 53, 55, 58, 65, 66, 67, 68, 69, 71], "int": [1, 4, 16, 17, 18, 46, 52, 53, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "specifi": [1, 5, 13, 16, 28, 35, 37, 40, 41, 48, 53, 58, 63, 66, 67, 69], "hint": [1, 46, 58], "scalar": [1, 19, 20, 23, 24, 33, 41, 55, 58, 68, 69, 72], "data": [1, 2, 11, 14, 15, 27, 35, 36, 42, 47, 52, 53, 58, 64, 65, 67, 68, 69, 71], "type": [1, 4, 5, 6, 11, 14, 15, 16, 17, 28, 36, 39, 40, 42, 46, 47, 48, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71], "float32": [1, 2, 4, 5, 7, 11, 13, 14, 15, 16, 18, 23, 28, 35, 36, 47, 53, 58, 65, 67], "10": [1, 6, 11, 15, 27, 28, 37, 40, 68], "b": [1, 2, 3, 4, 5, 7, 11, 14, 15, 16, 17, 18, 35, 36, 40, 55, 65, 66, 71], "float16": [1, 3, 11, 28, 35, 47, 52, 53], "1": [1, 3, 4, 5, 7, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 27, 28, 35, 36, 37, 46, 48, 52, 53, 55, 56, 63, 65, 66, 67, 68, 70, 71, 72], "3": [1, 4, 5, 11, 14, 15, 16, 20, 23, 27, 28, 35, 36, 37, 48, 53, 65, 66, 67, 71, 72], "224": [1, 11, 27, 28], "fcomput": [1, 2, 3, 58], "callabl": [1, 27, 46, 55, 58, 63, 70], "var": [1, 58, 65, 66], "expr": [1, 53, 58, 61, 63, 65, 67], "just": [1, 5], "what": [1, 3, 4, 11, 53, 67], "repres": [1, 11, 27, 35, 36, 56, 65, 71], "function": [1, 3, 6, 7, 11, 13, 14, 15, 19, 20, 23, 24, 27, 28, 33, 35, 36, 39, 42, 46, 47, 48, 49, 53, 55, 58, 59, 60, 61, 63, 65, 66, 67, 68, 70, 71, 72], "map": [1, 3, 5, 7, 8, 9, 18, 24, 35, 36, 41, 44, 56, 59, 63, 72], "index": [1, 11, 16, 32, 35, 40, 44, 58, 65, 69], "express": [1, 35, 42, 59, 63], "valu": [1, 5, 11, 14, 16, 23, 36, 41, 46, 52, 53, 58, 60, 62, 65, 66, 67, 69], "element": [1, 11, 15, 35, 53, 65, 67, 69], "independ": 1, "other": [1, 3, 4, 5, 11, 16, 38, 39, 40, 42, 46, 49, 53, 55, 65, 67], "can": [1, 2, 3, 4, 5, 6, 11, 13, 14, 15, 16, 17, 23, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 53, 55, 60, 66, 67, 68], "parallel": [1, 5, 11, 27, 37, 43, 48, 65, 66], "semant": [1, 4, 35, 36, 37], "out": [1, 13, 14, 15, 16, 17, 23, 27, 28, 53], "hint_nam": 1, "n1": 1, "n2": 1, "nk": 1, "lambda": [1, 2, 3, 7, 18, 27], "i1": 1, "i2": 1, "ik": 1, "f": [1, 7, 18, 23, 27, 35], "rang": [1, 3, 7, 11, 15, 16, 17, 18, 37, 46, 65, 66], "last": [1, 5, 6, 49], "if_then_els": [1, 59, 61], "condit": [1, 16, 36, 59], "slice": [1, 59], "first": [1, 2, 4, 5, 6, 13, 14, 23, 27, 28, 31, 45, 55, 66, 71], "column": [1, 35], "0": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 27, 28, 29, 35, 36, 37, 46, 52, 53, 55, 63, 65, 66, 67, 72], "2": [1, 3, 4, 5, 7, 11, 15, 18, 20, 23, 27, 28, 29, 35, 36, 37, 48, 52, 53, 55, 63, 65, 66, 67, 68, 71, 72], "revers": [1, 65], "row": [1, 35, 53, 67, 69], "matrix": [1, 3, 4, 5, 7, 11, 15, 16, 19, 20, 24, 33, 40, 53, 65, 66, 72], "c": [1, 2, 3, 4, 5, 7, 11, 15, 16, 17, 18, 23, 31, 32, 35, 36, 37, 40, 65], "j": [1, 2, 3, 7, 16, 17, 18, 37, 66], "9": [1, 6, 11, 27, 28], "add": [1, 2, 3, 8, 9, 11, 14, 15, 23, 24, 37, 40, 41, 44, 45, 49, 53, 65, 71, 72], "diagon": [1, 65], "from": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 27, 29, 32, 35, 37, 39, 40, 41, 46, 48, 53, 55, 56, 59, 63, 65, 66, 67, 68, 69, 71, 72], "import": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 31, 32, 35, 37, 39, 40, 45, 46, 53, 55, 66], "d": [1, 11, 17, 18, 35, 37, 40, 71], "diag_add": 1, "then_expr": [1, 59], "else_expr": [1, 59], "reduc": [1, 2, 3, 4, 53, 58, 61, 65, 69], "reduce_typ": [1, 2, 3, 58], "sum": [1, 2, 3, 14, 65, 69], "conduct": [1, 27, 53, 65, 70], "reduct": [1, 2, 3, 11, 52, 53, 58, 65], "given": [1, 2, 11, 15, 27, 28, 35, 46, 48, 51, 53, 56, 63, 65, 66, 67, 68, 69, 70, 71], "It": [1, 5, 6, 11, 27, 28, 39, 43, 46, 58, 63, 66], "return": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 17, 18, 23, 27, 28, 31, 35, 46, 48, 51, 52, 53, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71], "max": [1, 6, 11, 28, 65], "min": [1, 65], "avg": 1, "append": [1, 37, 53, 66], "all": [1, 6, 7, 13, 18, 27, 28, 40, 44, 46, 53, 65, 66, 67, 68, 72], "multipl": [1, 3, 4, 5, 6, 11, 19, 20, 24, 27, 28, 33, 35, 36, 39, 40, 53, 65, 66, 67, 71, 72], "e": [1, 2, 4, 5, 6, 11, 13, 27, 31, 35, 36, 38, 48, 49, 66, 69, 71], "k": [1, 2, 3, 4, 5, 7, 11, 16, 17, 18, 65, 66], "arg_reduc": [1, 58, 61], "extent": [1, 15, 58], "differ": [1, 2, 3, 5, 11, 17, 18, 28, 66], "correspond": [1, 6, 16, 41, 53, 58, 59, 67, 68], "result": [1, 4, 16, 17, 28, 36, 53, 65, 68], "instead": [1, 5, 6, 28, 36, 46, 49, 68, 70], "itself": [1, 28, 46, 53, 67], "find": [1, 5, 11, 16, 23, 28, 31, 66, 71], "describ": [1, 5, 6, 42], "direct": [1, 5, 71], "acycl": [1, 5], "graph": [1, 2, 3, 4, 6, 8, 9, 21, 22, 24, 27, 44, 55, 57, 65, 66, 67, 68, 69, 71, 72], "dag": [1, 5], "compos": [1, 35], "node": [1, 2, 5, 53, 58, 71], "both": [1, 3, 14, 27, 35], "edg": [1, 5, 71], "ar": [1, 2, 4, 5, 6, 7, 11, 14, 16, 18, 27, 28, 35, 36, 37, 40, 41, 42, 43, 44, 46, 48, 49, 52, 53, 57, 59, 63, 65, 66, 67, 68], "between": [1, 5, 11, 28, 46, 53, 66, 71], "Such": 1, "store": [1, 3, 7, 11, 18, 41, 53, 66, 67], "object": [1, 11, 27, 28, 46, 48, 53, 67], "class": [1, 3, 4, 5, 6, 23, 28, 46, 49, 52, 53, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 71], "tensornod": [1, 2, 3, 58, 63], "ha": [1, 2, 5, 7, 11, 13, 14, 18, 31, 35, 36, 37, 40, 42, 46, 53, 67, 69, 71], "correspongd": 1, "def": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 35, 39, 53, 55], "demo_task": 1, "print": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 52, 53, 63, 68], "paramet": [1, 3, 6, 14, 15, 36, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71], "where": [1, 5, 11, 15, 28, 35, 36, 45, 46, 65, 68, 69], "v": [1, 5, 65], "v_1": 1, "v_2": 1, "attribut": [1, 2, 3, 11, 13, 35, 37, 41, 48, 53, 60, 63, 67, 68, 69], "Its": 1, "visual": [1, 21, 22, 24, 44, 72], "5": [1, 11, 15, 18, 20, 27, 28, 35, 37, 53, 65, 66, 67, 70, 72], "A": [1, 3, 4, 5, 11, 13, 25, 27, 34, 36, 38, 39, 46, 48, 55, 56, 63, 65, 66, 68, 69, 71], "driver": [1, 46, 57, 68], "build_task": [1, 48, 68], "doe": [1, 2, 3, 6, 11, 28, 49, 53, 67, 68], "step": [1, 6, 27, 48, 65], "lower": [1, 11, 28, 48, 53, 66], "schedul": [1, 4, 8, 9, 11, 24, 27, 28, 52, 53, 66, 72], "program": [1, 2, 11, 13, 14, 15, 17, 18, 33, 34, 35, 42, 43, 49, 63, 66], "irmodul": [1, 3, 48], "dispatch": [1, 11, 67, 68], "accord": [1, 27], "target": [1, 5, 28, 34, 45, 48, 53, 54, 56, 63, 69], "devic": [1, 2, 3, 4, 6, 11, 15, 16, 17, 18, 38, 53, 60, 63, 65, 66, 67, 69], "optim": [1, 2, 4, 5, 18, 24, 26, 29, 34, 44, 48, 53, 65, 72], "gener": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 24, 27, 28, 35, 48, 49, 53, 56, 58, 63, 65, 66, 67], "translat": [1, 34], "sourc": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 32, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71], "g": [1, 4, 6, 11, 27, 35, 36, 48, 49, 66], "cu": [1, 45], "call": [1, 2, 3, 5, 6, 11, 13, 15, 16, 17, 27, 28, 36, 39, 46, 48, 53, 56, 60, 66, 68, 71], "compil": [1, 11, 13, 14, 15, 17, 27, 28, 31, 34, 35, 39, 42, 45, 48, 49, 53, 59, 63, 66, 67, 68], "nvcc": [1, 45, 48], "dynam": [1, 8, 9, 24, 27, 40, 49, 60, 72], "librari": [1, 13, 28, 48, 49, 68], "lib": [1, 31, 45, 49], "so": [1, 5, 13, 16, 31, 45, 46, 48, 49, 66], "load": [1, 2, 3, 7, 11, 18, 28, 40, 41, 45, 48, 49, 51, 53, 63, 67, 68], "wrap": [1, 2, 60], "compiledfunct": [1, 68], "directli": [1, 11, 13, 17, 27, 31, 33, 34, 38, 39, 46, 53, 68, 69], "run_task": 1, "runtim": [1, 13, 16, 17, 18, 31, 35, 39, 53, 57, 63], "compiledtask": [1, 48, 63, 68], "func": [1, 7, 36, 49, 61, 63, 67], "cpu": [1, 2, 5, 7, 13, 15, 17, 18, 23, 27, 38, 42, 48, 53, 60, 65, 66, 67, 69], "run_async": [1, 46, 68], "pai": 1, "attent": [1, 23, 28, 52, 65], "former": 1, "trace": [1, 11, 52, 53, 56, 67, 69], "high": [1, 4, 44, 46], "level": [1, 3, 11, 27, 44, 49, 52, 53, 65, 66, 69], "deep": [1, 5, 13, 27], "learn": [1, 2, 3, 4, 5, 6, 11, 13, 23, 27], "model": [1, 4, 5, 24, 26, 29, 44, 45, 51, 53, 67, 68, 72], "latter": 1, "singl": [1, 5, 11, 36, 48, 53, 65, 66, 67, 68, 70], "add_exampl": 1, "randn": [1, 2, 3, 5, 6, 7, 11, 15, 16, 17, 18, 23, 27, 28, 53, 67], "27": [1, 6, 9, 11, 28, 72], "36": [1, 6, 11, 27, 28], "23": [1, 6, 11, 15, 28], "63": [1, 18, 28], "31": [1, 2, 6, 27, 28], "45": [1, 11, 28], "05": [1, 6, 11, 12, 27, 28, 65, 72], "68": [1, 15, 28], "42": [1, 6, 11, 28], "18": [1, 6, 11, 27, 28], "41": [1, 2, 6, 28], "73": [1, 2, 28], "op": [1, 2, 3, 4, 5, 6, 11, 23, 45, 55, 57, 69], "submodul": [1, 13], "And": [1, 53, 67], "exist": [1, 4, 6, 48, 53, 66, 67, 68], "feel": [1, 3, 18], "free": [1, 3, 18, 46], "check": [1, 5, 11, 13, 16, 17, 27, 45, 46, 52, 65, 66, 68, 69, 71], "about": [1, 5, 6, 7, 11, 18], "At": 1, "reduce_sum_exampl": 1, "4": [1, 3, 7, 14, 15, 17, 18, 20, 27, 28, 35, 36, 37, 41, 65, 66, 71, 72], "reduce_sum": [1, 69], "06": [1, 6, 11, 27], "32": [1, 3, 6, 7, 11, 14, 15, 18, 27, 28, 66, 72], "64": [1, 2, 3, 7, 16, 18, 23, 28, 66], "38": [1, 6, 11, 27, 28], "93": [1, 6, 28], "81": [1, 15, 27, 28], "53": [1, 2, 6, 28], "54": [1, 2, 27, 28], "12": [1, 2, 6, 7, 11, 23, 27, 28, 65, 71], "34": [1, 6, 11, 28], "arg_max_exampl": 1, "arg_max": 1, "04": [1, 2, 6, 11, 27], "43": [1, 11, 28], "71": [1, 2, 11, 28], "52": [1, 6, 28], "61": [1, 28], "39": [1, 11, 28], "22": [1, 7, 11, 28], "int64": [1, 4, 35, 47, 58], "matmul_exampl": 1, "33": [1, 2, 6, 11, 28], "69": [1, 28], "51": [1, 28], "95": [1, 11, 28], "13": [1, 2, 6, 7, 11, 28], "85": [1, 28], "97": [1, 2, 6, 11, 15, 27, 28], "37": [1, 2, 11, 28], "17": [1, 6, 11, 28, 72], "28": [1, 6, 11, 27, 28], "24": [1, 11, 28], "29": [1, 11, 15, 27, 28], "softmax_exampl": 1, "exp": [1, 23, 65], "max_val": [1, 65], "exp_a": 1, "exp_sum": 1, "48": [1, 18, 28], "46": [1, 11, 28], "introduc": [1, 3, 4, 11], "after": [1, 4, 5, 27, 28, 31, 46, 49, 52, 53, 56, 66, 71], "next": [1, 2, 31, 67, 68], "total": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 27, 28, 29, 46, 66, 68, 72], "time": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 35, 46, 48, 52, 53, 59, 66, 67, 68, 70], "minut": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 52, 66], "845": 1, "second": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 71], "jupyt": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28], "notebook": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28], "ipynb": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28], "python": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 32, 34, 36, 37, 38, 39, 44, 59, 66, 67, 68], "py": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 27, 28, 29, 72], "zip": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 27, 28, 65, 67, 68], "galleri": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 27, 28, 29, 72], "sphinx": [1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 23, 24, 27, 28], "previou": [2, 3, 46], "have": [2, 3, 4, 5, 6, 11, 23, 27, 31, 35, 40, 53, 65, 66, 67, 68, 71], "primit": [2, 16, 47, 53, 58], "": [2, 4, 5, 6, 11, 13, 27, 28, 34, 35, 43, 46, 53, 60, 66, 67, 69], "automat": [2, 4, 5, 7, 11, 16, 18, 38, 43, 45, 53, 58], "There": [2, 4, 5, 14, 27, 28, 35, 41, 43, 66, 68], "inherit": [2, 56], "illustr": 2, "batchmatmultask": 2, "constructor": [2, 5, 40, 46, 56], "argument": [2, 14, 27, 35, 40, 46, 52, 53, 56, 63, 66, 67, 68, 71], "__init__": [2, 3, 5, 6, 23], "self": [2, 3, 4, 5, 6, 23, 28, 33, 37, 53, 55, 66, 69], "get": [2, 3, 4, 6, 12, 18, 23, 27, 28, 34, 36, 39, 41, 45, 46, 53, 60, 66, 68, 69, 71, 72], "size": [2, 3, 11, 16, 17, 18, 27, 35, 40, 65, 66, 69], "batch_siz": [2, 3, 23, 27, 65], "m_size": [2, 3, 7, 16, 17, 18, 65], "k_size": [2, 3, 7, 16, 17, 18, 65], "n_size": [2, 3, 7, 16, 17, 18, 65], "p": [2, 3, 37, 41, 65], "parent": 2, "initi": [2, 7, 11, 18, 41, 53, 67, 71], "super": [2, 3, 5, 6, 23], "batch_matmul": [2, 4, 45, 65], "batchmatmulop": 2, "util": [2, 3, 5, 7, 16, 18, 23, 27, 57], "input_lik": [2, 3], "same": [2, 3, 4, 5, 6, 11, 28, 35, 36, 37, 40, 46, 48, 53, 55, 65, 66, 67, 68, 69, 71], "get_output": 2, "wai": [2, 3, 4, 5, 11, 23, 27, 43, 49], "For": [2, 4, 5, 11, 14, 15, 18, 35, 36, 38, 53, 63], "when": [2, 3, 4, 5, 11, 16, 27, 28, 45, 46, 48, 49, 53, 55, 56, 60, 63, 65, 66, 67, 68, 70], "flow": [2, 4, 21, 22, 24, 27, 28, 44, 53, 66, 67, 72], "fuse": [2, 4, 5, 6, 11, 41, 52], "surround": [2, 4], "demo_usag": [2, 3], "58": [2, 11, 15, 28], "66": [2, 6, 28], "11": [2, 7, 11, 27, 28], "35": [2, 11, 28], "7": [2, 9, 11, 14, 18, 28, 35, 66], "19": [2, 6, 11, 27, 28, 29, 72], "03": [2, 6, 11, 27, 28, 29], "07": [2, 6, 11, 27], "6": [2, 5, 11, 20, 27, 28, 35, 37, 71], "89": [2, 11, 28], "72": [2, 6, 28], "44": [2, 11, 28, 29, 72], "99": [2, 28], "62": [2, 28], "leav": 2, "method": [2, 6, 13, 23, 27, 28, 46, 53, 55, 56, 60, 63, 65, 66, 67, 68, 71], "most": [2, 4, 27, 35, 53], "experi": 2, "achiev": [2, 11, 28, 43, 52, 66], "good": [2, 6, 11], "perform": [2, 3, 5, 11, 17, 18, 27, 28, 35, 40, 43, 44, 48, 52, 53, 65, 66], "do": [2, 3, 5, 11, 23, 35, 49, 53, 56, 65, 66], "larg": [2, 3, 11, 28, 52, 53, 66], "amount": [2, 3, 66], "howev": [2, 28, 36, 49, 68], "like": [2, 18, 31, 35, 36, 37, 39, 40, 47, 49, 53, 66, 67, 68], "convolut": [2, 5, 11, 53], "etc": [2, 4, 6, 28, 66], "mai": [2, 11, 46], "abl": [2, 46], "best": [2, 11, 28, 52, 66, 67, 68], "share": [2, 3, 5, 11, 18, 40, 48, 49, 53, 60, 63, 67, 68, 69], "memori": [2, 3, 7, 11, 18, 35, 36, 41, 49, 52, 53, 60, 63, 64, 66, 67, 68, 69], "thu": [2, 4, 5, 6, 11, 28, 49, 53, 55, 66, 67], "anoth": [2, 3, 5, 11, 46, 48, 66, 69], "mechan": [2, 3, 4, 5], "templat": [2, 8, 9, 24, 43, 56, 72], "better": [2, 11, 23, 27, 28, 31, 43, 53, 66], "383": 2, "exampl": [3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 27, 28, 29, 34, 35, 44, 46, 53, 55, 63, 65, 67, 71, 72], "rule": [3, 6, 8, 9, 24, 43, 44, 53, 55, 56, 72], "conveni": 3, "effici": [3, 4, 5, 11, 19, 20, 24, 27, 33, 72], "enough": 3, "allow": [3, 4, 23, 28, 53, 66], "u": [3, 4, 6, 23, 28, 37], "instanti": [3, 56, 68], "tunabl": [3, 66], "hyper": 3, "task": [3, 45, 46, 48, 53, 58, 61, 65, 66, 68], "two": [3, 4, 5, 14, 15, 31, 35, 36, 68, 71], "implement_cpu": 3, "comput": [3, 4, 8, 11, 24, 27, 28, 31, 46, 53, 56, 61, 63, 68, 69], "batchmatmulfp16task": 3, "batch_matmul_fp16": 3, "allow_epilogu": 3, "bool": [3, 6, 35, 36, 46, 48, 53, 60, 63, 65, 66, 67, 68, 69, 70, 71], "fals": [3, 5, 6, 11, 17, 18, 23, 27, 28, 36, 46, 48, 52, 53, 56, 59, 60, 65, 66, 67, 68, 69, 70], "working_dir": 3, "batch_matmul_mma_fp16_schedul": 3, "abov": [3, 5, 6, 23, 66], "insid": [3, 6, 13], "complic": 3, "should": [3, 27, 46, 49, 53, 55, 56, 67, 68, 71], "know": [3, 5, 6, 11, 28], "cuda": [3, 4, 6, 7, 11, 17, 18, 27, 38, 42, 48, 52, 53, 57, 60, 65, 66, 67, 68, 69], "skip": [3, 18], "now": [3, 4, 28], "write": [3, 8, 9, 13, 14, 15, 17, 18, 24, 33, 34, 35, 53, 72], "syntax": [3, 34], "more": [3, 4, 5, 6, 7, 11, 19, 20, 24, 27, 28, 33, 35, 53, 57, 66, 72], "document": [3, 13, 23, 57, 65], "futur": [3, 28, 69], "stabl": [3, 6, 65], "lang": [3, 7, 13, 14, 15, 16, 17, 18, 35, 36, 37, 39, 40, 41], "f16": [3, 28, 35, 36], "spatial": [3, 7, 18, 37], "repeat": [3, 4, 7, 18, 37, 41, 53, 65, 66, 68, 70], "shared_tensor": [3, 7, 18], "register_tensor": [3, 7, 18], "attr": [3, 5, 7, 13, 14, 15, 16, 17, 18, 35, 37, 39, 40, 53, 60, 61, 63], "grid": [3, 16, 17, 18, 37, 40, 41, 58, 60], "printf": [3, 13, 17, 18, 35, 37], "cast": [3, 5, 53, 65, 69], "blockidx": [3, 7, 16, 17, 18, 40], "threadidx": [3, 7, 16, 17, 18, 40], "syncthread": [3, 7, 18, 40], "mmaconfig": 3, "mma_sync": [3, 40], "workload": [3, 5, 16, 27], "mma_config": 3, "m16n8k8_f16_f16": 3, "block_m": 3, "block_n": 3, "block_k": 3, "128": [3, 23, 28], "8": [3, 6, 7, 11, 18, 23, 28, 35, 66], "warp_m": [3, 7, 18], "warp_n": [3, 7, 18], "warp_k": 3, "warp_count_m": 3, "warp_count_n": 3, "warp_count_k": 3, "mma_m": 3, "mma_n": 3, "mma_k": 3, "m": [3, 4, 7, 11, 18, 27, 65, 66], "n": [3, 4, 7, 11, 13, 16, 17, 18, 25, 35, 37, 65, 66, 68, 69, 71], "16": [3, 6, 7, 11, 16, 17, 18, 28], "mma_count_m": 3, "mma_count_n": 3, "mma_count": 3, "thread": [3, 7, 16, 18, 37, 40, 46, 60, 65], "script_modul": [3, 7, 13, 14, 15, 16, 17, 18, 35, 39, 68], "load_regs_a": 3, "smem_a": [3, 7, 18], "regs_a": 3, "a_el": 3, "regist": [3, 4, 5, 6, 7, 18, 40, 55, 56, 66], "warp_id": 3, "lane_id": 3, "x": [3, 4, 5, 6, 7, 11, 16, 17, 18, 23, 28, 55, 65, 66], "wi": 3, "wj": 3, "wk": 3, "mi": 3, "a_load_map": 3, "load_regs_b": 3, "smem_b": [3, 7, 18], "regs_b": 3, "b_element": 3, "mj": 3, "b_load_map": 3, "warp_mma": 3, "regs_c": [3, 7, 18], "c_element": 3, "warp": [3, 7, 18, 40, 65], "store_c": 3, "global": [3, 6, 7, 18, 39, 42], "offset_m": 3, "offset_n": 3, "y": [3, 5, 6, 7, 11, 16, 17, 18, 65], "gmem_c": 3, "z": [3, 5, 16, 17, 18], "k_round": 3, "c_store_map": 3, "protect": [3, 49], "true": [3, 5, 6, 11, 13, 16, 23, 27, 28, 36, 37, 46, 48, 52, 53, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71], "batch_matmul_kernel": 3, "batch": [3, 27, 48, 65], "kernel": [3, 5, 8, 9, 11, 17, 18, 19, 20, 24, 27, 33, 35, 38, 40, 44, 45, 46, 49, 52, 60, 65, 66, 67, 68, 72], "grid_dim": [3, 7, 16, 17, 18, 40, 60], "block_dim": [3, 7, 16, 17, 18, 40, 60], "k0": 3, "offset_k": 3, "gmem_a": 3, "gmem_b": 3, "read": [3, 28], "ir_modul": [3, 48], "remain": [3, 11], "part": [3, 5, 11], "batchmatmulfp16op": 3, "assert": [3, 5, 7, 11, 17, 18, 61, 63], "traceback": [], "recent": [], "file": [9, 12, 20, 22, 23, 25, 27, 28, 29, 40, 48, 53, 66, 67, 68, 72], "home": [28, 45, 66], "yaoyao": 28, "repo": [45, 66], "guid": [6, 9, 11, 22, 72], "line": [5, 13], "230": [], "218": 18, "210": [], "70": 28, "175": [], "compiled_task": 68, "238": [], "candid": [48, 52, 53, 66, 68], "compiled_modul": 68, "__call__": [6, 53], "rais": [6, 60, 66, 69, 71], "backendexcept": [], "msg": [], "ffi": 57, "launch_0": 68, "fail": [46, 56], "error": [6, 16, 17, 18, 28, 31, 49, 52, 71], "src": [46, 65, 71], "callback": [], "cpp": [], "get_torch_stream": [], "been": [5, 6, 13, 31, 53, 71], "hidet_cach": [45, 66], "doc": [6, 65], "cuda_space_0": 45, "8390c0210fd78d20": [], "shown": [3, 5], "basic": [3, 11, 27], "need": [3, 4, 5, 6, 11, 23, 28, 31, 49, 56, 66, 68], "builder": 3, "825": [], "usual": [4, 5, 6, 11, 16, 28, 52, 66], "would": [4, 11, 13, 27, 49, 53, 66, 67], "reus": [4, 66], "highli": [4, 35], "implement": [4, 5, 6, 11, 13, 18, 43, 49, 53, 56, 67, 68], "while": [4, 56], "organ": [4, 45], "modular": 4, "core": [4, 11, 40, 44, 52, 53, 65], "idea": 4, "defin": [4, 5, 6, 8, 9, 13, 14, 15, 16, 17, 18, 24, 35, 36, 37, 38, 39, 40, 42, 48, 53, 55, 56, 58, 63, 64, 69, 72], "attach": 4, "origin": [4, 5, 6, 11, 28, 53, 55], "replac": [4, 5, 55, 56], "process": [4, 5, 11, 34, 48, 53, 66], "transpar": 4, "user": [4, 34, 43, 55, 66, 67, 68, 69], "done": [4, 5], "typic": 4, "scenario": 4, "special": [4, 5, 35, 68], "variant": 4, "lot": [4, 6, 66], "its": [4, 13, 42, 49, 53], "suitabl": 4, "matmul": [4, 5, 6, 7, 11, 16, 17, 18, 20, 23, 45, 53, 65, 72], "numpi": [4, 7, 11, 27, 53, 65, 67, 69], "equival": [4, 11, 14, 35, 66, 68], "auto": [4, 66], "veri": 4, "But": [4, 5, 11], "accept": [4, 27], "dure": [4, 6, 46, 52, 53, 65, 66], "reshap": [4, 5, 11, 23, 65, 69], "broadcast": [4, 11, 41, 65, 66], "align": 4, "final": [4, 28], "correct": [4, 11, 17, 52, 65, 66], "might": [4, 28, 46, 53, 69], "some": [4, 5, 6, 11, 18, 28, 34, 35, 40, 52, 53, 66], "extra": [4, 32], "adjust": 4, "transpos": [4, 6, 23, 65], "These": 4, "later": [4, 6, 28, 35], "overhead": [4, 27], "neglig": 4, "effort": 4, "conv2d": [4, 5, 11, 28, 53, 65], "img2col": 4, "algorithm": 4, "until": [4, 46, 48, 49, 66], "subclass": [4, 52, 55], "resolverul": [4, 53, 54, 55], "decor": [4, 13, 55, 67, 71], "register_resolve_rul": [4, 53, 54, 55], "pow": [4, 55, 65], "normal": [4, 53, 65, 67], "expon": [4, 65], "constant": [4, 5, 11, 23, 28, 35, 36, 53, 59, 65, 67], "integ": [4, 35, 36, 65, 69, 71], "start": [4, 5, 10, 12, 23, 24, 34, 46, 59, 65, 72], "let": [4, 5, 13, 28, 46], "look": 4, "behavior": [4, 11, 53], "symbol": [4, 5, 13, 16, 17, 18, 27, 52, 53, 61, 63, 66, 67, 69], "asarrai": [4, 11, 53, 67], "trace_from": [4, 5, 11, 27, 53, 67], "without": [4, 5, 28, 45, 52], "graph_opt": [4, 5, 23, 27, 53], "x_1": [4, 5, 11, 23, 28], "contain": [4, 5, 13, 23, 27, 33, 35, 37, 42, 46, 53, 66, 67, 68], "see": [4, 5, 6, 11, 13, 16, 18, 28, 49, 53, 65, 68, 69], "happen": [4, 28], "option": [4, 5, 6, 11, 13, 14, 15, 16, 17, 27, 40, 45, 46, 53, 55, 57, 58, 59, 60, 63, 65, 67, 68, 69], "arithmet": [4, 11], "powop": [4, 55], "transform": [4, 5, 53, 55, 56], "powresolverul": 4, "base": [4, 8, 9, 24, 43, 48, 59, 67, 68, 72], "is_symbol": [4, 55, 56, 69], "len": [4, 5, 55, 65, 68], "otherwis": [4, 5, 45, 46, 48, 55, 56, 60, 66, 68, 69], "none": [4, 5, 6, 11, 28, 46, 48, 52, 53, 55, 56, 58, 60, 63, 65, 67, 68, 69, 71], "indic": [4, 5, 11, 37, 53, 59, 65, 67, 69], "cannot": [4, 49], "kept": 4, "again": [4, 6, 66, 67, 68, 71], "one": [4, 5, 11, 16, 35, 37, 38, 46, 48, 49, 52, 53, 63, 66, 67, 69], "graph_opt_new": 4, "fusedmultipli": 4, "fused_graph": [4, 5, 11, 23, 65], "flowgraph": [4, 5, 6, 11, 23, 53, 65, 67, 68], "multipli": [4, 7, 18, 35, 41, 53, 65], "anchor": [4, 5, 11, 23, 65], "detail": [4, 7, 18, 42, 53, 68], "power": [4, 35, 36], "tool": [4, 6, 13, 23, 31], "356": 4, "pipelin": [5, 18], "techniqu": 5, "than": [5, 28, 36, 52, 66], "addit": [5, 11, 19, 20, 24, 33, 36, 49, 72], "concaten": 5, "taso": 5, "systemat": 5, "studi": 5, "becom": 5, "expos": [5, 16, 28, 38], "underli": [5, 48], "hardwar": 5, "pattern": [5, 44, 53, 56], "match": [5, 6, 56], "whether": [5, 11, 45, 46, 48, 52, 53, 63, 66, 67, 68, 69, 70, 71], "concret": [5, 11, 43, 52, 69], "construct": [5, 11, 35, 53, 67], "further": [5, 27], "determin": [5, 35], "applic": 5, "If": [5, 6, 11, 13, 14, 28, 31, 32, 35, 45, 46, 48, 49, 52, 53, 56, 58, 63, 66, 67, 68, 69, 71], "three": [5, 6, 17, 27, 28, 36], "x1": 5, "w1": 5, "w2": 5, "resolv": [5, 8, 9, 24, 44, 53, 54, 72], "although": 5, "conceptu": 5, "consid": 5, "case": [5, 7, 13, 16, 18, 28, 35, 55, 60], "them": [5, 6, 14, 16, 28, 42, 49, 52], "execut": [5, 9, 11, 12, 20, 22, 25, 27, 29, 34, 42, 46, 48, 65, 66, 68, 70, 72], "order": [5, 35, 46, 53, 67, 68, 71], "arbitrari": [5, 17, 66], "number": [5, 14, 15, 27, 35, 36, 37, 40, 46, 53, 55, 60, 65, 66, 68, 69, 70], "expens": 5, "worri": 5, "want": [5, 28, 31, 32, 35, 53, 66, 67, 68], "graph_pattern": 5, "matchdict": 5, "example_model": 5, "w0": 5, "y1": [5, 6, 11], "y2": [5, 6, 11], "relu": [5, 6, 18, 28, 65], "concat": [5, 65], "axi": [5, 23, 37, 65], "c_1": [5, 11, 23, 35], "c_2": [5, 23], "require_prologu": [5, 11, 23, 65], "transpose_b": [5, 11, 23], "x_2": [5, 11, 23, 28], "x_3": [5, 23, 28], "x_4": [5, 23, 28], "x_5": [5, 23, 28], "Then": [5, 23, 27, 34, 66], "matmulop": 5, "concatop": 5, "tensorpattern": [5, 53, 54, 56], "subgraphrewriterul": [5, 53, 54, 56], "op_pattern": 5, "register_rewrite_rul": [5, 53, 54, 56], "same_list": 5, "fusetwomatmulrewriterul": 5, "c1": [5, 17, 18], "c2": [5, 17, 18], "either": [5, 67, 68], "is_const": [5, 56], "dictionari": 5, "dict": [5, 52, 53, 56, 63, 66, 68], "t": [5, 36], "weight": [5, 6, 46, 52, 53, 65, 67, 68], "matric": 5, "except": [5, 6], "dimens": [5, 11, 16, 35, 40, 53, 60, 65, 66, 67, 69], "els": [5, 7, 18, 36, 59], "registered_rewrite_rul": 5, "clear_registered_rewrite_rul": 5, "isinst": [5, 7], "scale": [5, 65], "bia": [5, 6], "squeez": [5, 6, 65, 69], "y3": 5, "binaryop": 5, "unaryop_left": 5, "unaryop_right": 5, "compositeop": 5, "unaryop": 5, "softmax": [5, 23, 65], "q": [5, 65], "attn": 5, "mask": [5, 65], "w": [5, 23, 37, 65], "w3": 5, "besid": [5, 11, 16, 43], "predefin": [5, 11, 53, 66], "includ": [5, 13, 16, 17, 18, 40, 41], "prevent": [5, 11, 65, 71], "default": [5, 11, 15, 16, 27, 28, 35, 36, 45, 46, 48, 52, 53, 56, 60, 65, 66, 67, 68], "being": 5, "subgraph_rewrite_pass": 5, "rewrite_pass": 5, "rewritten_graph": 5, "rewritten": 5, "becaus": [5, 6, 11, 16, 28, 49], "fold": [5, 28, 59], "explicitli": [5, 13, 37, 53, 67], "togeth": [5, 70], "fusedmatmul": [5, 23], "compon": [5, 11, 23, 44], "framework": [5, 11, 27, 44, 67], "horizont": 5, "fusion": [5, 27, 28, 44, 63, 65], "015": 5, "subgraph": [5, 9, 53, 72], "workflow": 6, "torch": [6, 9, 11, 16, 17, 18, 27, 28, 46, 50, 53, 67, 69, 72], "convert": [6, 11, 28, 52, 53, 66, 67, 69], "fx": [6, 52], "kind": [6, 16, 28, 37, 39, 40, 48, 60, 66, 68], "nn": [6, 23, 28, 51, 52], "linear": [6, 23, 28, 35], "remov": 6, "convers": 6, "demonstr": [6, 33], "purpos": [6, 66], "interpret": [6, 52, 64, 66], "frontend": [6, 27, 53], "registri": [6, 56], "register_funct": 6, "register_modul": 6, "register_method": 6, "allow_in_graph_registered_funcs_onli": 6, "dynamo_backend": 6, "back": [6, 7, 18, 69], "del": [6, 49], "registered_funct": 6, "registered_modul": 6, "registered_method": 6, "flatten": [6, 28, 65], "forward": [6, 23, 28, 53], "complain": 6, "miss": 6, "run_model": 6, "model_opt": [6, 11, 28], "mode": [6, 11, 27, 28, 31, 65, 66], "autotun": [6, 11, 28], "assert_clos": [6, 11, 16, 17, 18], "actual": [6, 7, 11, 27, 28, 68], "expect": [6, 11, 28], "atol": [6, 7, 11, 16, 17, 18, 27], "3e": [6, 28], "rtol": [6, 7, 11, 16, 17, 18, 27], "success": 6, "try": [6, 11, 66], "notimplementederror": 6, "support": [6, 16, 17, 28, 35, 36, 37, 40, 41, 44, 47, 48, 49, 53, 63], "yet": 6, "http": [6, 31, 32, 65], "org": [6, 31, 32, 65, 66], "html": [6, 65], "welcom": 6, "pr": 6, "issu": 6, "reproduc": 6, "github": [6, 31], "com": [6, 31, 65], "thank": 6, "contribut": [6, 31, 44], "set": [6, 13, 14, 27, 28, 37, 46, 53, 66, 68], "torch_log": 6, "dynamo": [6, 11, 28], "torchdynamo_verbos": 6, "inform": [6, 17, 27, 53, 66], "suppress": 6, "fall": 6, "eager": [6, 11, 27], "_dynamo": 6, "config": [6, 11, 31, 53, 66], "suppress_error": 6, "hidetmodul": 6, "torch_relu": 6, "inplac": [6, 28], "signatur": [6, 68, 69], "must": [6, 17, 18, 35, 46, 53, 65, 66, 67, 69], "_": [6, 11, 23, 35], "ignor": [6, 35], "operator_add": 6, "hidetlinear": 6, "help": 6, "torch_modul": 6, "access": [6, 13, 14, 16, 35, 40, 48, 66], "via": [6, 11, 28, 31, 32, 46, 49, 56, 66], "param": [6, 60, 71], "transposed_weight": 6, "similarli": [6, 40], "well": [6, 14, 31, 35], "tensor_flatten": 6, "start_dim": [6, 65], "end_dim": [6, 65], "181": [], "101": 28, "miniconda3": [], "env": [], "python3": [], "site": [], "packag": [18, 32, 45], "1736": [], "_wrapped_call_impl": [], "_call_impl": [], "arg": [13, 27, 28, 53, 58, 59, 63, 68, 70, 71], "kwarg": [28, 46, 53, 59, 71], "1747": [], "forward_cal": [], "eval_fram": [], "465": [], "_fn": [], "fn": 28, "convert_fram": [], "1269": [], "_torchdynamo_orig_cal": [], "1064": [], "_inner_convert": [], "526": [], "_compil": [], "924": [], "guarded_cod": [], "compile_inn": [], "one_graph": [], "hook": [], "666": [], "_compile_inn": [], "_utils_intern": [], "87": [11, 28], "wrapper_funct": [], "699": [], "out_cod": [], "transform_code_object": [], "bytecode_transform": [], "1322": [], "instruct": [41, 53, 65], "code_opt": [], "219": [], "634": [], "tracer": [], "symbolic_convert": [], "2796": [], "983": [], "895": [], "dispatch_t": [], "inst": [], "opcod": 28, "2987": [], "return_valu": [], "_return": [], "2972": [], "compile_subgraph": [], "output_graph": [], "1117": [], "compile_and_call_fx_graph": [], "tx": [], "stack_valu": [], "root": [31, 45, 66], "1369": [], "compiled_fn": [], "call_user_compil": [], "gm": [], "1416": [], "_call_user_compil": [], "1465": [], "backendcompilerfail": [], "compiler_fn": [], "exc": [], "valueerror": [66, 71], "unpack": [], "got": [], "put": 6, "registr": 6, "alreadi": [6, 45, 48, 53, 69], "thei": [6, 14, 28, 41, 53, 63, 65, 68, 71], "effect": 6, "996": [], "come": 7, "soon": 7, "matmul_simt_kernel": 7, "int32": [7, 15, 18, 23, 35, 47], "as_tensor_point": [7, 18], "auto_map": [7, 18], "layout": [7, 18, 53, 58, 67, 69], "row_major": [7, 18, 35], "local_layout": [7, 18], "warps_m": [7, 18], "warps_n": [7, 18], "4x2": [7, 18], "2x2": [7, 18], "warp_map_m": [7, 18], "warp_map_n": [7, 18], "2x16": [7, 18], "thread_m": [7, 18], "thread_n": [7, 18], "4x4": [7, 18], "block_siz": [7, 18], "256": [7, 16, 17, 18, 28], "block_m_siz": [7, 18], "block_n_siz": [7, 18], "block_k_siz": [7, 18], "num_warp": [7, 18], "num_thread": [7, 18], "matmul_kernel": [7, 17, 18], "a_ptr": [7, 17, 18], "mean": [7, 15, 27, 28, 37, 53, 56, 63, 65, 66, 67, 69], "pointer": [7, 17, 36, 68], "b_ptr": [7, 17, 18], "c_ptr": [7, 17, 18], "func_nam": [7, 13, 18, 49], "infer": [7, 16, 18, 27, 44, 67], "mma_map": [7, 18], "iter": [7, 15, 18], "over": [7, 15, 18], "tile": [7, 18, 65], "num_k_til": [7, 18], "k_tile": [7, 18], "worker": [7, 18, 37], "global_i": [7, 18], "global_k": [7, 18], "global_j": [7, 18], "synchron": [7, 11, 18, 40, 46, 48, 66], "block": [7, 11, 16, 18, 40, 46, 60], "simt": [7, 18, 53, 65], "accumul": [7, 18, 53, 58, 65], "mma": [7, 18, 53, 65], "build": [7, 13, 14, 15, 16, 17, 18, 27, 32, 35, 39, 48, 53, 61, 63, 66, 68], "main": [7, 66], "benchmark": [7, 11, 18, 27, 66, 67, 68, 70], "benchmark_func": [7, 18, 27, 70], "1024": [7, 16, 18, 35], "333": 7, "444": 7, "555": 7, "zero": [7, 11, 41, 47, 53, 65, 67], "assert_allclos": [7, 27], "desir": [7, 27], "1e": [7, 16, 17, 18, 27, 28, 65], "hidet_lat": [7, 18], "50": [6, 7, 18, 28], "2f": 7, "147": 28, "135": 28, "214": [], "launch": [13, 14, 15, 16, 17, 18, 38, 40, 46, 60, 68], "15fae7fae8088499": [], "053": [], "pytorch": [8, 9, 17, 24, 26, 27, 29, 44, 52, 53, 67, 72], "rewrit": [8, 9, 24, 28, 44, 53, 54, 72], "00": [6, 9, 11, 12, 20, 22, 25, 27, 28, 29, 72], "472": [], "mem": [9, 12, 20, 22, 25, 29, 72], "mb": [9, 12, 20, 22, 25, 29, 72], "01": [6, 11, 27, 29, 72], "quick": [10, 12, 24, 44, 72], "walk": [11, 27, 53, 67], "kei": [11, 23, 68], "easiest": 11, "resnet18": [11, 28], "tf32": [11, 35], "enabl": [11, 28, 46, 53, 66], "cudnn": [11, 28], "slightli": 11, "low": 11, "could": [11, 31, 69], "disabl": [11, 28, 53, 66], "hub": [11, 27, 28], "vision": [11, 27, 28], "v0": [11, 27, 28], "pretrain": [11, 27, 28], "verbos": [11, 27, 28, 66], "eval": [11, 27, 28], "2e": [11, 28], "start_ev": [11, 46], "event": 11, "enable_tim": [11, 46], "end_ev": 11, "record": [11, 28, 46, 53, 63, 67, 68], "100": [6, 11, 27, 28, 53], "3f": [11, 18, 27], "elapsed_tim": [11, 46], "One": 11, "tune": [11, 27, 44, 49, 52, 53, 66], "small": [11, 28, 52, 53, 65], "search": [11, 27, 52, 66], "space": [11, 27, 35, 45, 52, 53, 66], "longer": [11, 27, 28, 52, 53, 66], "dynamo_config": [11, 28], "search_spac": [11, 27, 28, 50, 52, 53, 66], "nvidia": [11, 18, 27, 53, 65], "rtx": [11, 27], "4090": [11, 27], "176": 11, "286": 11, "configur": [11, 17, 18, 52, 53, 60], "control": [11, 28, 53, 66], "choos": 11, "larger": [11, 53], "report": [11, 28, 31, 52], "numer": [11, 28, 71], "ones": [11, 18, 23, 47, 53, 67], "empti": [11, 15, 16, 17, 18, 53, 67], "from_torch": [11, 27, 50, 52, 53, 67], "ndarrai": [11, 53, 67, 69, 71], "arrai": [11, 53, 69], "As": [11, 42], "machin": [11, 23, 66], "manipul": [11, 42], "randomli": [11, 53, 67], "tell": 11, "resid": [11, 40], "bunch": [11, 14], "imper": 11, "style": 11, "intuit": 11, "easi": [11, 43, 44], "debug": [11, 66], "opportun": 11, "suffer": 11, "higher": [11, 27], "latenc": [11, 27, 53, 66, 68, 70], "section": [11, 33, 40, 42], "storag": [11, 53, 67, 69], "content": [11, 53, 67, 68, 69], "symbol_lik": [11, 27, 53, 67], "ani": [11, 31, 35, 46, 48, 52, 53, 60, 65, 66, 67, 69, 70], "tupl": [11, 46, 53, 63, 65, 66, 67, 69, 71], "idx": 11, "linear_bia": 11, "passcontext": [11, 23, 27, 53], "potenti": 11, "unit": [11, 13, 27, 39, 42], "appli": [11, 27, 35, 36, 49, 53, 63], "wise": [11, 35], "opt_graph": 11, "gpu": [11, 17, 18, 27, 46, 52, 53, 66, 69], "cuda_graph": [11, 27, 53, 68], "sever": 11, "onnx": [11, 24, 26, 29, 44, 45, 50, 53, 72], "276": 72, "simpl": 13, "binari": [13, 34, 53], "directori": [13, 14, 23, 27, 31, 45, 48, 52, 53, 66, 67, 68], "local": [13, 28, 31], "cache_dir": [13, 14, 15, 16, 17, 45, 66], "variabl": [13, 16, 35, 37, 39, 42, 53, 58, 62, 66, 67], "messag": [13, 49, 63], "standard": [13, 53, 67], "public": [13, 14, 15, 16, 38, 39, 60], "func_kind": [13, 14, 15, 16, 17, 35, 39], "With": 13, "instanc": [13, 56, 65], "compiledmodul": [13, 39, 68], "invok": [13, 14, 16, 38, 39], "captur": [13, 46], "yourself": 13, "consol": 13, "prefix": 13, "hidet_": 13, "avoid": [13, 53, 65, 67], "conflict": 13, "color": [13, 68], "stdint": [13, 16, 17, 18], "h": [13, 16, 17, 18, 35], "math": [13, 16, 23], "memory_plann": [13, 16, 17, 18], "context": [13, 16, 17, 18, 23, 39, 53, 66], "log": [13, 16, 17, 18, 65], "int_fastdiv": [13, 16, 17, 18], "dll": [13, 16, 17, 18], "void": [13, 14, 16, 17, 18], "hidet_launch": [13, 16, 17, 18], "012": [3, 13], "short": [14, 35], "f32": [14, 15, 16, 17, 35, 39, 40, 41], "interchang": 14, "annot": [14, 15], "treat": [14, 53, 67], "datatyp": [14, 53, 58, 61, 64, 65, 67, 69], "bit": [14, 15], "float": [14, 15, 16, 17, 18, 35, 36, 46, 53, 63, 65, 66, 67, 68, 69, 70, 71], "point": [14, 15, 35, 36, 49], "002": 14, "3x4": 15, "3x4x5": 15, "loop": [15, 36, 37, 71], "26": [11, 15, 27, 28], "77": [11, 15, 28], "003": [15, 23], "current": [16, 27, 28, 46, 49, 53, 66, 69], "outsid": 16, "cpu_kernel": [16, 35, 38, 60], "cpu_intern": [16, 38, 60], "intern": [16, 46], "cuda_kernel": [16, 17, 38, 40, 60], "cuda_intern": [16, 38, 60], "__global__": [16, 17, 18], "__device__": [16, 18], "static": [16, 17, 18, 27, 53, 66, 71], "hidet_matmul": 16, "__restrict__": [16, 17, 18], "int32_t": [16, 17, 18], "0f": [16, 17, 18, 23], "blockdim": [16, 40], "15": [11, 16, 17, 28], "coordin": [16, 35], "respons": 16, "compar": [16, 58], "104": 28, "c528b4cd631788ac": [], "boundari": 16, "alwai": [16, 53], "simplifi": [16, 35], "statement": [16, 36, 42, 62, 66], "048": [], "i32": [17, 35, 36], "tensor_point": 17, "hold": [17, 49, 68], "init": 17, "234": [17, 28], "345": 17, "567": 17, "123": [11, 17, 28], "456": 17, "789": 17, "5918": [], "4134": [], "7785": [], "2896": [], "0128": [], "1556": [], "8559": [], "1971": [], "3774": [], "6724": 3, "7807": [], "1394": [], "9160": [], "9325": [], "2423": [], "3236": [], "2809": [], "2159": [], "4068": [], "0360": [], "1245": [], "2111": [], "3005": [], "3742": [], "6149": [], "8399": [], "2522": [], "9624": [], "9616": [], "4162": [], "0440": [], "5541": [], "5841": [], "0927": [], "4140": [], "3832": [], "4166": [], "8539": [], "2284": [], "5625": [], "0444": [], "1661": [], "3398": [], "0412": [], "0295": [], "3222": [], "5121": [], "3388": [], "1450": [], "6406": [], "9588": [], "2323": [], "5773": [], "3532": [], "0130": [], "4993": [], "0325": [], "8759": [], "7698": [], "5276": [], "1762": [], "4296": [], "6316": [], "2762": [], "5938": [], "9134": [], "5776": [], "3511": [], "1001": [], "7685": [], "6970": [], "3140": [], "0994": [], "0790": [], "0093": [], "6174": [], "5768": [], "1814": [], "5594": [], "60": [11, 28], "9809": [], "4446": [], "6668": [], "9426": [], "1036": [], "0607": [], "7725": [], "3419": [], "9061": [], "5068": [], "3336": [], "8129": [], "3474": [], "3538": [], "6651": [], "8500": [], "30": [11, 18, 28], "6342": [], "0980": [], "8081": [], "8952": [], "3014": [], "6416": [], "8817": [], "8455": [], "7211": [], "3475": [], "4767": [], "8470": [], "05444524e92f86ec": [], "076": [], "simplic": 18, "omit": 18, "softwar": 18, "paper": [18, 37], "familiar": 18, "hyperparamet": 18, "matmul_relu_kernel": 18, "hidet_matmul_relu": 18, "torch_matmul_relu": 18, "archiv": 18, "cubla": [18, 28], "refer": [18, 34, 36, 37, 40, 49, 53, 58, 65, 67], "153": 28, "7057": [], "4629": [], "6767": [], "0808": [], "0818": [], "2854": [], "5891": [], "2857": [], "6675": [], "5723": [], "0135": [], "5169": [], "0317": [], "6604": [], "1523": [], "0403": [], "6891": [], "0383": [], "1207": [], "6953": [], "3301": [], "8495": [], "1617": [], "8542": [], "2197": [], "3463": [], "6850": [], "3167": [], "8650": [], "5793": [], "4532": [], "5090": [], "9220": [], "5174": [], "4171": [], "0952": [], "0072": [], "2301": [], "0906": [], "7442": [], "7950": [], "2710": [], "4320": [], "1407": [], "6609": [], "3058": [], "0248": [], "3947": [], "6839": [], "0091": [], "2639": [], "8244": [], "5973": [], "1999": [], "7668": [], "0977": [], "1682": [], "4186": [], "0442": [], "1390": [], "2548": [], "5873": [], "2961": [], "7588": [], "3018": [], "5132": [], "6774": [], "0148": [], "5137": [], "1092": [], "5599": [], "21": 28, "0588": [], "7972": [], "8434": [], "1580": [], "1331": [], "7789": [], "6751": [], "5031": [], "0000": [], "6075": [], "5948": [], "0208": [], "75": [6, 28, 65], "2653": [], "8791": [], "7809": [], "9027": [], "4200": [], "8603": [], "7925": [], "25": [6, 11, 28, 53], "2901": [], "a51edf90bb4c2aad": [], "vector": [19, 20, 24, 33, 35, 41, 72], "hello": [19, 20, 24, 33, 72], "world": [19, 20, 24, 33, 72], "naiv": [19, 20, 24, 33, 72], "152": 28, "146": [22, 23, 28], "understand": 23, "custom": [23, 53, 66], "popular": 23, "viewer": 23, "found": [23, 60], "here": [23, 37, 58], "link": 23, "bottom": 23, "side": [23, 27], "bar": 23, "layer": [23, 52, 65], "selfattent": 23, "hidden_s": 23, "768": 23, "num_attention_head": 23, "attention_head_s": 23, "query_lay": 23, "key_lay": 23, "value_lay": 23, "transpose_for_scor": 23, "seq_length": 23, "rearrang": [23, 65, 69], "hidden_st": 23, "attention_mask": 23, "queri": [23, 46], "attention_scor": 23, "sqrt": [23, 65], "attention_prob": 23, "in_featur": 23, "out_featur": 23, "flow_graph_for": 23, "c_3": 23, "c_4": 23, "c_5": 23, "plan": [23, 49, 65, 68, 69], "x_6": [23, 28], "x_7": 23, "x_8": 23, "x_9": 23, "x_10": 23, "permutedim": 23, "ax": [23, 65], "x_11": 23, "x_12": 23, "dividescalar": 23, "x_13": 23, "x_14": 23, "reducemax": 23, "dim": [17, 18, 23, 65, 69], "keepdim": [23, 65], "x_15": 23, "subtract": [23, 36, 65], "x_16": 23, "x_17": 23, "reducesum": 23, "x_18": 23, "divid": [17, 18, 23, 65], "x_19": 23, "x_20": 23, "x_21": 23, "x_22": 23, "x_23": 23, "x_24": 23, "x_25": 23, "structur": 23, "json": 23, "open": [23, 44, 67], "instrument": [23, 53], "save_graph_instru": [23, 27, 53], "ctx": [23, 27, 53, 66], "cost": [23, 53], "profile_pass_instru": [23, 53], "print_stdout": [23, 53], "save": [23, 27, 48, 52, 53, 66, 67, 68], "out_dir": [23, 53], "convchannellastpass": 23, "004": 23, "subgraphrewritepass": 23, "024": 23, "automixprecisionpass": 23, "selectivequantizepass": 23, "028": 23, "resolvevariantpass": 23, "005": [23, 27], "fuseoperatorpass": 23, "034": 23, "eliminatebarrierpass": 23, "fusedexp": 23, "000": [9, 20, 25, 72], "resnet50": [27, 45], "export": 27, "zoo": 27, "torchvis": [27, 28], "under": [27, 28, 31, 45], "work": [27, 34, 57, 65], "o": [27, 48, 66], "path": [27, 45, 49, 51, 53, 67, 68], "onnx_path": 27, "random": [27, 53, 67], "torch_model": 27, "torch_data": 27, "input_nam": 27, "output_nam": 27, "dynamic_ax": 27, "1f": [27, 35], "mib": 27, "getsiz": 27, "20": [11, 27, 28, 37], "measur": [27, 53, 68, 70], "reset50": 27, "median": [27, 66, 70], "967": [], "from_onnx": [27, 50, 51, 53], "give": [27, 43], "np": [27, 53, 67, 69, 71], "hidet_onnx_modul": 27, "torch_output": 27, "detach": [27, 69], "78": [11, 28], "83": [6, 28], "1273": [], "1173": [], "run_func": 70, "233": 28, "run_v11": [], "run_v1": [], "213": [], "192": [], "conv2dop": [], "pad": 65, "stride": [35, 65], "dilat": 65, "group": [65, 68, 70], "158": 28, "112": [6, 28], "0b723aff3a2ecd11": [], "deriv": [27, 63, 69], "symbol_data": 27, "symbol_output": 27, "elimin": [27, 65], "cudagraph": [27, 46, 53, 68], "bench_hidet_graph": 27, "5e": [27, 28], "By": [27, 28, 46, 48, 53, 66, 67, 68], "choic": 27, "806": 27, "477": 27, "841": 27, "dnn": [27, 44, 67], "068": [], "model_hidet": 28, "hood": 28, "represent": [28, 53, 68, 71], "system": [28, 42, 49], "intens": 28, "critic": 28, "note": [28, 36, 40, 48, 55], "set_search_spac": 28, "correctness_report": [28, 50, 52, 53], "everi": 28, "receiv": 28, "dummi": [28, 53, 63], "no_grad": 28, "80": [11, 28], "pytorch_vision_v0": 28, "resnet": 28, "248": [], "632": [], "232": 28, "wrapper": [], "forward_with_check": [], "352": [], "_raise_except": [], "hidet_func": [], "hidet_arg": [], "hidet_kwarg": [], "203": [], "runtimeerror": 69, "bc2ce89cdd4dd8b3": [], "occur": [], "e_h": 28, "leq": 28, "harmon": 28, "absolut": 28, "rel": [28, 46], "frac": 28, "quad": 28, "e_a": 28, "e_r": 28, "respect": [28, 65, 68], "featur": [28, 44], "replai": [28, 46], "use_cuda_graph": [28, 50, 52, 53], "interest": 28, "print_input_graph": [28, 50, 52, 53], "neat": 28, "728": [], "02": [6, 7, 9, 11, 27, 28, 29, 72], "796": [], "encount": 31, "problem": [31, 49], "git": [31, 45, 66], "written": [31, 44], "cmake": 31, "command": [31, 32, 45], "cd": 31, "mkdir": 31, "cp": 31, "copi": [31, 46, 53, 67, 69], "j4": 31, "libhidet": [31, 49], "libhidet_runtim": 31, "successfulli": 31, "shell": 31, "verifi": 32, "nightli": 32, "version": [32, 53, 66, 67], "pre": [32, 48], "url": [32, 66], "whl": 32, "collect": [33, 39, 42, 53], "constrain": 34, "extens": [34, 43, 44], "transpil": 34, "abstract": 34, "tree": 34, "ast": 34, "writer": 34, "environ": [34, 48], "whole": [34, 65], "i8": 35, "i16": 35, "i64": 35, "int8": [35, 47, 53, 65], "int16": [35, 47], "f64": 35, "bf16": 35, "float64": [35, 47], "bfloat16": [35, 47, 53], "tfloat32": [35, 47], "boolean": [35, 36, 47], "complex": [16, 17, 18, 35, 43, 53, 67], "c64": 35, "c128": 35, "complex64": 35, "complex128": 35, "long": 35, "i8x4": 35, "int8x4": 35, "f16x2": 35, "f32x4": 35, "float16x2": 35, "float32x4": 35, "design": [35, 43], "therefor": 35, "snippet": 35, "major": [35, 46, 53, 66, 67, 69], "discuss": 35, "posit": [35, 65, 71], "speak": 35, "dimension": 35, "c_0": 35, "dot": 35, "c_": 35, "commonli": [35, 40], "calcul": 35, "s_1": 35, "s_2": 35, "s_": 35, "s_i": 35, "th": [35, 69], "s_0": 35, "column_major": 35, "strided_layout": 35, "rank": [35, 65, 69], "slowest": 35, "fastest": 35, "composit": 35, "outer": 35, "inner": 35, "textbf": 35, "n_g": 35, "mod": [35, 65], "divis": [35, 36, 65], "modulo": 35, "elementwis": [17, 18, 35], "product": 35, "associ": 35, "commut": 35, "neq": 35, "form": 36, "locat": [36, 45, 46], "declar": [36, 62], "operand": [36, 65, 71], "plu": 36, "minu": 36, "address": [36, 46, 66], "bitwise_not": 36, "bitwis": 36, "cond": [36, 59, 65], "logic": [36, 65, 68], "e1": 36, "e2": 36, "remaind": [36, 65], "left": 36, "shift": [36, 65], "right": 36, "xor": 36, "equal": [36, 65, 66, 68, 69], "less": [36, 52, 65, 66], "greater": [36, 53, 65], "even": 36, "floor": [36, 65], "true_expr": 36, "false_expr": 36, "p1": 36, "p2": 36, "pn": 36, "q2": 36, "p3": 36, "p4": 36, "p5": 36, "en": 36, "bind_tupl": 37, "unrol": 37, "mani": 37, "factor": [37, 66, 71], "p2u3": 37, "pu": 37, "brif": 37, "introduct": [37, 44], "num": [37, 65], "serv": 39, "manag": [39, 49], "define_global_var": 39, "global_var": 39, "var_typ": 39, "foo": [39, 68], "mandatori": [39, 53, 67], "dynamic_smem_byt": [40, 60], "min_block": [40, 60], "minimum": [40, 65, 66], "declarescop": [40, 61, 62], "string": [40, 45, 68], "enum": 40, "tabl": [40, 67, 68], "griddim": 40, "ldmatrix": 40, "atomic_add": 40, "atom": 40, "atomic_max": 40, "shfl_sync": 40, "shuffl": 40, "dynamic_shared_memori": 40, "alloc": [40, 53], "complet": [40, 46], "avx": 41, "modern": 41, "avx_f32x4_load": 41, "avx_f32x4_stor": 41, "avx_f32x4_fmadd": 41, "avx_f32x4_setzero": 41, "avx_f32x4_broadcast": 41, "f32x8": 41, "reli": 41, "openmp": 41, "seri": [42, 46], "eas": 44, "orient": 44, "api": 44, "maintain": 45, "get_cache_dir": [45, 66], "usernam": [45, 66], "cache_root": 45, "bert": 45, "cpu_space_0": 45, "_space_": 45, "41920731adb3acf4": 45, "hash": 45, "nvcc_log": 45, "92dfdc1734b3854d": 45, "cuda_space_2": 45, "2e4ce0f773c8d25c": 45, "summari": 45, "3b8442fa440916f7": 45, "recompil": 45, "avail": [46, 53, 66], "ctype": [46, 49, 68], "libcuda": 46, "cudart": 46, "ret": [46, 48, 51, 52, 53, 55, 58, 59, 65, 66, 67, 68, 69, 70, 71], "device_count": 46, "count": [46, 53], "current_devic": 46, "device_id": 46, "id": [46, 66], "set_devic": 46, "properti": [46, 53], "prop": 46, "cudadeviceprop": 46, "compute_cap": 46, "capabl": 46, "minor": [46, 66], "host": 46, "preced": 46, "profiler_start": 46, "mark": [46, 53, 67], "profil": [46, 53, 66, 68], "profiler_stop": 46, "malloc": 46, "num_byt": 46, "byte": [46, 69], "addr": [46, 66], "malloc_async": 46, "asynchron": [46, 68, 69], "union": [46, 48, 51, 53, 58, 59, 60, 63, 66, 67, 68, 69, 70, 71], "cudastream_t": [16, 17, 18, 46], "due": 46, "insuffici": 46, "malloc_host": 46, "pin": 46, "free_async": 46, "free_host": 46, "memset": 46, "region": 46, "memset_async": 46, "memcpi": 46, "dst": [46, 71], "destin": [46, 71], "memcpy_async": 46, "memory_info": 46, "prioriti": 46, "implicit": 46, "enqueu": 46, "wait": [46, 48], "begin": 46, "reorder": 46, "handl": 46, "wait_ev": 46, "subsequ": [46, 66], "externalstream": 46, "extern": 46, "cudaevent_t": 46, "elaps": [46, 53], "millisecond": [46, 53, 68], "current_stream": 46, "default_stream": 46, "streamcontext": 46, "f_create_input": 46, "f_run": 46, "ref_obj": 46, "rerun": 46, "keep": [46, 49, 65, 69], "aliv": 46, "lifetim": 46, "sequenc": [46, 48, 53, 58, 59, 63, 65, 67, 68, 69], "output_to_torch_tensor": [46, 68], "opposit": 46, "uint8": 47, "uint16": 47, "uint32": 47, "uint64": 47, "build_ir_modul": 48, "output_dir": [48, 52], "output_kind": 48, "forc": 48, "gcc": 48, "ensur": 48, "safe": 48, "multiprocess": 48, "lock": 48, "guarante": 48, "built": [28, 48], "arch": [48, 66], "sm_70": [48, 66], "re": 48, "tri": [48, 53, 65, 66], "concurr": 48, "releas": 48, "safeti": 48, "build_ir_module_batch": 48, "artifact": 48, "platform": 48, "sharedlibrari": [49, 68], "lib_path": [49, 68], "why": 49, "cdll": 49, "unload": 49, "never": 49, "exit": 49, "hundr": 49, "ten": [49, 66], "thousand": 49, "trigger": 49, "reloc": 49, "solv": 49, "whenev": [49, 66], "track": [49, 69], "linux": 49, "Will": 49, "window": 49, "usag": [49, 52, 53, 66], "still": [49, 53, 65], "dlclose": 49, "delet": 49, "dynamoconfig": [50, 52, 53], "reset": [50, 52, 53], "use_tensor_cor": [50, 52, 53], "use_fp16": [50, 52, 53], "use_fp16_reduct": [50, 52, 53], "use_attent": [50, 52, 53], "dump_graph_ir": [50, 52, 53], "steal_weight": [50, 52, 53], "modelproto": 51, "proto": 51, "onnxmodul": 51, "concrete_arg": 52, "graphmodul": [28, 52], "flag": [52, 66], "dump": [52, 66], "certain": 52, "operatorpattern": [53, 54, 56], "share_map": [53, 61, 63], "relationship": 53, "build_target": 53, "usage_count": 53, "intermedi": 53, "consist": [53, 66, 68], "model_fil": 53, "compiledmodel": 53, "compiledgraph": [53, 67, 68], "warmup": [53, 66, 68, 70], "dummy_input": 53, "vcuda_": 53, "vcuda": 53, "place": 53, "cuda_": 53, "text": [53, 66], "set_precis": 53, "set_reduce_precis": 53, "set_mma": 53, "tensorcor": 53, "acceler": 53, "member": 53, "graphpassinstru": 53, "classmethod": 53, "retain": 53, "accuraci": 53, "mix": 53, "select": 53, "quantiz": 53, "quantize_pattern": 53, "flexibl": 53, "add_quantize_pattern": 53, "add_quantize_rul": 53, "top": 53, "reduce_mean": [53, 69], "reduce_avg": 53, "along": [53, 65, 69], "valid": [53, 60], "set_verbos": 53, "relat": [53, 66, 68], "log_fil": 53, "reduce_cuda_compile_mem": 53, "incur": 53, "decid": [53, 66], "heurist": [53, 66], "interfac": 53, "modifi": 53, "myinstrument": 53, "before_all_pass": 53, "before_pass": 53, "pass_nam": 53, "after_pass": 53, "after_all_pass": 53, "foldconstantpass": 53, "patterntransformpass": 53, "obj": [53, 67], "stddev": [53, 67], "uniformli": [53, 67], "distribut": [53, 67], "uniform": [53, 67], "deviat": [53, 67], "10720467": [53, 67], "6906018": [53, 67], "06347568": [53, 67], "37061226": [53, 67], "562728": [53, 67], "857547": [53, 67], "uniniti": [53, 67], "datalayout": [53, 58, 67, 69], "randn_lik": [53, 67], "sampl": [53, 67], "empty_lik": [53, 67], "zeros_lik": [53, 67], "ones_lik": [53, 67], "fill_valu": [53, 67], "full_lik": [53, 67], "fill": [53, 67], "from_numpi": 53, "nparrai": 53, "possibl": [53, 66], "from_dlpack": [53, 67], "dltensor": [53, 67], "__dlpack__": [53, 67], "protocol": [53, 67], "dlpack": [53, 67], "pycapsul": [53, 67], "torch_tensor": [53, 67], "modif": [53, 67], "reflect": [53, 67], "weight_tensor": [53, 67], "ambigu": [53, 67], "stop": [53, 65, 67], "resolve_vari": 55, "overrid": 55, "op_cl": [55, 56], "squar": [55, 65], "addresolverul": 55, "subgraph_rewrit": 56, "num_output": 56, "activ": 57, "ad": [57, 65, 71], "reducetyp": [58, 61], "enumer": 58, "scalar_input": [58, 61], "scalarinput": 58, "tensorinput": [58, 63], "accumulate_dtyp": [58, 65], "reducecomput": 58, "index_dtyp": 58, "scalarnod": 58, "ifthenels": [59, 61], "evalu": [59, 63, 65, 66], "alia": 59, "pyscalar": 59, "tensor_slic": [59, 61], "tensorslic": 59, "bodi": 60, "ret_typ": 60, "pack": 60, "cluster_dim": 60, "cluster": [17, 18, 60], "minim": [60, 71], "bound": 60, "get_attr": [60, 61], "attr_nam": 60, "allow_miss": 60, "keyerror": 60, "attr_valu": 60, "data_typ": [61, 64], "stmt": 61, "inverse_map": [61, 63], "generate_argu": [61, 63], "dummy_argu": [61, 63], "scope": 62, "invers": 63, "epilogu": 63, "inversemap": 63, "abort": 63, "symbolvar": 63, "short_nam": 64, "nbyte": [64, 69], "ab": [65, 71], "aco": 65, "acosh": 65, "adaptive_avg_pool1d": 65, "output_s": 65, "adaptive_avg_pool2d": [28, 65], "adaptive_avg_pool3d": 65, "adaptive_max_pool1d": 65, "adaptive_max_pool2d": 65, "adaptive_max_pool3d": 65, "AND": 65, "whehter": 65, "all_gath": 65, "nrank": 65, "comm_id": 65, "all_reduc": 65, "OR": 65, "arang": 65, "argmax": 65, "keep_dim": [65, 69], "argmin": 65, "as_strid": 65, "storage_offset": 65, "asin": 65, "asinh": 65, "atan": 65, "atan2": 65, "atanh": 65, "is_caus": 65, "avg_pool2d": 65, "ceil_mod": [28, 65], "count_include_pad": 65, "divisor_overrid": 65, "avg_pool3d": 65, "barrier": 65, "ident": [28, 65], "consum": 65, "lh": [65, 71], "rh": [65, 71], "stand": 65, "batch_norm_inf": 65, "running_mean": 65, "running_var": 65, "epsilon": 65, "bitwise_and": 65, "bitwise_invert": 65, "bitwise_left_shift": 65, "bitwise_or": 65, "bitwise_right_shift": 65, "bitwise_xor": 65, "ceil": [65, 71], "celu": 65, "alpha": 65, "clamp": 65, "clip": 65, "min_val": 65, "conj": 65, "conv1d": 65, "conv1d_gemm": 65, "conv1d_transpos": 65, "output_pad": 65, "conv2d_channel_last": 65, "conv2d_gemm": 65, "conv2d_gemm_fp16": 65, "img": 65, "parallel_k_part": 65, "disable_cp_async": 65, "conv2d_gemm_fp16_channel_last": 65, "conv2d_gemm_image_transform": 65, "conv2d_transpos": 65, "conv2d_transpose_gemm": 65, "conv2d_winograd": 65, "conv3d": 65, "conv3d_gemm": 65, "conv3d_transpos": 65, "conv_pad": 65, "co": 65, "cosh": 65, "cumsum": 65, "exclus": 65, "einsum": 65, "equat": 65, "embedding_bag": 65, "offset": 65, "erf": 65, "expand_dim": 65, "expm1": 65, "flip": 65, "fused_oper": 65, "gather": 65, "gelu": 65, "approxim": 65, "greater_equ": 65, "group_norm": 65, "num_group": 65, "norm": 65, "varianc": 65, "hardshrink": 65, "lambda_v": 65, "hardsigmoid": 65, "hardswish": 65, "hardtanh": 65, "im2col": 65, "kernel_s": 65, "imag": 65, "index_select": 65, "instance_norm": 65, "channel": 65, "isfinit": 65, "isinf": 65, "isnan": 65, "layer_norm": 65, "num_last_dim": 65, "leaky_relu": 65, "less_equ": 65, "linspac": 65, "endpoint": 65, "log10": 65, "log1p": 65, "log2": 65, "logaddexp": 65, "logical_and": 65, "logical_not": 65, "logical_or": 65, "logical_xor": 65, "logsigmoid": 65, "logsoftmax": 65, "lp_norm": 65, "ep": 65, "lp": 65, "formul": 65, "make_complex": 65, "real": 65, "matmul_cubla": 65, "matmul_nt": 65, "matmul_x86": 65, "max_pool2d": [28, 65], "max_pool3d": 65, "maximum": [65, 66], "meshgrid": 65, "ij": 65, "neg": [65, 71], "not_equ": 65, "permute_dim": 65, "prelu": 65, "slope": 65, "prod": 65, "unsqueez": [65, 69], "perm": 65, "reciproc": 65, "reduce_scatt": 65, "relu6": 65, "repeat_interleav": 65, "resize2d": 65, "scale_factor": 65, "nearest": 65, "coordinate_transformation_mod": 65, "half_pixel": 65, "rounding_method": 65, "round_prefer_floor": 65, "roi": 65, "cubic_alpha": 65, "cubic_exclud": 65, "extrapolation_valu": 65, "recompute_scale_factor": 65, "roll": 65, "round": 65, "rsqrt": 65, "scatter_add_": 65, "set_strided_slic": 65, "setvalu": 65, "sigmoid": 65, "sign": 65, "silu": 65, "sin": 65, "sinh": 65, "softmin": 65, "softplu": 65, "beta": 65, "threshold_v": 65, "softshrink": 65, "softsign": 65, "split": [65, 66], "parts_or_sect": 65, "std": 65, "strided_slic": 65, "symmetric_dequant": 65, "wq": 65, "symmetric_quant": 65, "quant_typ": 65, "tan": 65, "tanh": 65, "tanhshrink": 65, "transfer": 65, "dst_devic": 65, "tril": 65, "triu": 65, "trunc": 65, "wait_tensor": 65, "optioncontext": 66, "get_opt": 66, "set_opt": 66, "compile_serv": 66, "server": 66, "ip": 66, "password": 66, "port": 66, "repo_url": 66, "remot": 66, "clone": 66, "checkout": 66, "offici": 66, "branch": 66, "commit": 66, "tag": 66, "architectur": 66, "x86": 66, "alderlak": 66, "get_arch": 66, "sm_35": 66, "sm_80": 66, "get_arch_pair": 66, "bench_config": 66, "t1": 66, "t2": 66, "new_dir": 66, "cache_oper": 66, "disk": [66, 67, 68], "new_cache_dir": 66, "other_opt": 66, "other_valu": 66, "current_context": 66, "debug_cache_tun": 66, "debug_enable_var_id": 66, "uniqu": 66, "debug_show_var_id": 66, "d_1": 66, "1732": 66, "debug_show_verbose_flow_graph": 66, "human": 66, "readabl": 66, "debug_strict_broadcast_check": 66, "enforc": 66, "checker": 66, "prove": 66, "proce": 66, "assum": 66, "dump_opt": 66, "stack": 66, "execution_mod": 66, "compilaion": 66, "get_bench_config": 66, "get_cache_oper": 66, "get_execution_mod": 66, "get_parallel_build": 66, "get_parallel_k": 66, "strategi": 66, "get_parallel_tun": 66, "job": 66, "minumum": 66, "reserv": 66, "get_runtime_check": 66, "get_save_lower_ir": 66, "get_search_spac": 66, "is_option_exist": 66, "parallel_build": 66, "parallel_k": 66, "parallel_tun": 66, "max_parallel_job": 66, "mem_gb_per_job": 66, "max_candidates_per_job": 66, "gib": 66, "preserv": 66, "vcpu": 66, "cpu_count": 66, "5gib": 66, "restore_opt": 66, "dumped_opt": 66, "restor": 66, "runtime_check": 66, "save_lower_ir": 66, "trade": 66, "off": 66, "convent": [66, 67, 68], "register_opt": 66, "save_compiled_graph": [67, 68], "save_dispatch_t": [67, 68], "save_weight": [67, 68], "altern": [67, 68], "pick": [67, 68], "separ": [67, 68], "load_compiled_graph": [67, 68], "functiontyp": 67, "module_dir": 68, "load_compiled_modul": 68, "Or": 68, "scratch": 68, "shared_librari": 68, "averag": [68, 69], "func_typ": 68, "ctypes_func": 68, "functyp": 68, "task_dir": 68, "launch_1": 68, "launch_n": 68, "get_input_shap": 68, "get_output_shap": 68, "finish": 68, "intend": 68, "load_compiled_task": 68, "length": 68, "compiled_task_dir": 68, "meta": 68, "graph_modul": 68, "graph_execut": 68, "graph_str": 68, "build_flow_graph": 68, "graphmetadata": 68, "graphexecut": 68, "connect": 68, "set_weight": 68, "manual": 68, "exclud": 68, "load_compiled_app": 68, "app": 68, "compiledapp": 68, "save_compiled_app": 68, "create_compiled_app": 68, "leaf": 69, "experiment": 69, "compact": 69, "tolist": 69, "nest": 69, "to_devic": 69, "stream": 69, "move": 69, "astyp": 69, "cpu_async": 69, "cuda_async": 69, "copy_async": 69, "unchang": 69, "item": 69, "contigu": 69, "continu": 69, "up": [69, 70], "warm": 70, "keyword": 71, "gcd": 71, "greatest": 71, "common": 71, "divisor": 71, "non": 71, "lcm": 71, "least": 71, "error_toler": 71, "toler": 71, "cdiv": 71, "denomin": 71, "directedgraph": 71, "from_edg": 71, "graphnod": 71, "has_nod": 71, "has_edg": 71, "add_nod": 71, "add_edg": 71, "topological_ord": 71, "topolog": 71, "cyclic": 71, "843": [], "6885": 3, "842": 3, "512": [3, 18, 28], "938": 3, "326": 3, "2118": 3, "2937": 3, "549": 3, "6157": 3, "952": 3, "820": 3, "gen": [6, 11], "36288": 6, "47": [6, 11, 27, 28], "62it": 6, "2836": 6, "6901": 6, "13it": [6, 11], "14": [6, 11, 27, 28], "5104": 6, "4984": 6, "61it": [6, 11], "12475": 6, "14564": 6, "11it": [6, 11], "15408": 6, "9454": 6, "07it": [6, 11, 27], "23815": 6, "11080": 6, "91it": 6, "14749": 6, "86it": 6, "appl": [6, 11], "701": 6, "60it": [6, 11], "177": [6, 11], "113": [6, 11, 28], "15it": [6, 11, 27], "193": 6, "65": [6, 11, 28], "93it": [6, 11], "353": 6, "161": [6, 11, 28], "85it": 6, "57": [6, 28], "401": [6, 11], "81it": [6, 11], "463": 6, "82it": [6, 11], "650": 6, "141": [6, 28], "51it": 6, "677": 6, "125": [6, 28], "84it": 6, "108": [6, 28], "43it": 6, "49": [6, 11, 28], "98": [6, 11, 28], "88": [6, 11, 28], "09": [6, 11, 27, 72], "685": [6, 9, 72], "1024x1024x1024": [7, 18], "333x555x444": 7, "1x13x12": 7, "939": 7, "5120": 11, "19it": 11, "848": 11, "02it": 11, "495": 11, "428": 11, "45it": 11, "4372": 11, "32it": [11, 27], "58it": 11, "54it": 11, "90": [11, 28], "10it": 11, "05it": 11, "867": 11, "71it": 11, "1761": 11, "3389": 11, "12it": 11, "6650": 11, "55it": 11, "91": [11, 27, 28], "14it": [11, 27], "26it": 11, "74it": 11, "25it": 11, "901": 11, "47it": 11, "3700": 11, "03it": 11, "7025": 11, "29it": 11, "22it": 11, "55": [11, 28], "42it": 11, "436": 11, "80it": 11, "4656": 11, "63it": 11, "21it": 11, "87it": 11, "879": 11, "40it": 11, "1681": 11, "1857": 11, "98it": 11, "4517": 11, "34it": 11, "69it": 11, "82": [11, 28], "136": [11, 28], "170": [11, 28], "78it": [11, 27], "92": [11, 28], "162": [11, 28], "77it": 11, "20it": 11, "90it": 11, "854": 11, "3320": 11, "49it": 11, "6490": 11, "48it": 11, "76": [11, 28], "30it": 11, "38it": 11, "08it": 11, "420": 11, "4442": 11, "97it": 11, "59": [11, 27, 28], "09it": 11, "39it": 11, "53it": 11, "779": 11, "501": 11, "66it": 11, "4127": 11, "89it": 11, "70it": 11, "821": 11, "95it": 11, "493": 11, "801": 11, "44it": 11, "1674": 11, "3763": 11, "831": 11, "3410": 11, "6530": 11, "99it": 11, "431": 11, "4549": 11, "37it": 11, "08": 11, "28it": [11, 27], "59it": 11, "04it": 11, "27it": 11, "10240": 11, "216": 11, "321": 11, "416": 11, "961": 11, "827": 11, "6169": 11, "241": 11, "145": [11, 28], "79": [11, 28], "209": 11, "116": [11, 28], "41it": 11, "94": [11, 28], "226": 11, "86": [11, 28], "65it": 11, "275": 11, "309": 11, "55223507": 11, "38891074": 11, "46868673": 11, "0056821": 11, "8648937": 11, "0117671": 11, "07206896": 11, "8569803": 11, "989338": 11, "3373796": 11, "addop": 11, "0x745838ec62c0": 11, "fusedbatchmatmul": 11, "batchmatmul": 11, "0722584": 11, "857559": 11, "9872227": 11, "338318": 11, "661": [11, 12, 72], "cudatypedef": [16, 17, 18], "__launch_bounds__": [16, 17, 18], "__builtin_assum": [16, 17, 18], "dim3": [16, 17, 18], "get_cuda_stream": [16, 17, 18], "cudaerror_t": [16, 17, 18], "err": [16, 17, 18], "cudagetlasterror": [16, 17, 18], "cudasuccess": [16, 17, 18], "cudageterrorstr": [16, 17, 18], "061": [16, 20], "hidet_matmul_kernel": [17, 18], "65535": [17, 18], "invalid": [17, 18], "evenli": [17, 18], "103": [17, 20, 28], "129": [18, 28], "256x256x256": 18, "018": 18, "056": 18, "32x32x32": 18, "020": 18, "__forceinline__": 18, "hidet_relu": 18, "255": 18, "__shared__": 18, "2048": 18, "i_1": 18, "i_2": 18, "i_3": 18, "i_4": 18, "i_5": 18, "i_6": 18, "i_7": 18, "global_k_1": 18, "global_k_2": 18, "__syncthread": 18, "i_8": 18, "i_9": 18, "i_10": 18, "i_11": 18, "k_1": 18, "i_12": 18, "i_13": 18, "k_2": 18, "i_14": 18, "i_15": 18, "k_3": 18, "i_16": 18, "i_17": 18, "global_i_1": 18, "global_j_1": 18, "i_18": 18, "i_19": 18, "global_i_2": 18, "i_20": 18, "i_21": 18, "global_j_2": 18, "i_22": 18, "i_23": 18, "114": [18, 20, 28], "277": 20, "56": [27, 28], "73it": 27, "96": [27, 28], "52it": 27, "617": 27, "810": 27, "593": [27, 29, 72], "placehold": 28, "0e": 28, "40": 28, "67": 28, "74": 28, "84": 28, "102": 28, "call_funct": 28, "4e": 28, "batch_norm": 28, "105": 28, "8e": 28, "106": 28, "107": 28, "109": 28, "110": 28, "111": 28, "iadd": 28, "7e": 28, "6e": 28, "115": 28, "117": 28, "118": 28, "119": 28, "120": 28, "121": 28, "122": 28, "124": 28, "9e": 28, "126": 28, "127": 28, "130": 28, "131": 28, "132": 28, "133": 28, "134": 28, "137": 28, "138": 28, "139": 28, "140": 28, "142": 28, "143": 28, "144": 28, "148": 28, "149": 28, "150": 28, "151": 28, "154": 28, "155": 28, "156": 28, "157": 28, "159": 28, "160": 28, "163": 28, "164": 28, "165": 28, "166": 28, "167": 28, "168": 28, "169": 28, "171": 28, "172": 28, "l_self_modules_conv1_parameters_weight_": 28, "l_x_": 28, "l_self_modules_bn1_buffers_running_mean_": 28, "l_self_modules_bn1_buffers_running_var_": 28, "l_self_modules_bn1_parameters_weight_": 28, "l_self_modules_bn1_parameters_bias_": 28, "l_self_modules_layer1_modules_0_modules_conv1_parameters_weight_": 28, "l_self_modules_layer1_modules_0_modules_bn1_buffers_running_mean_": 28, "l_self_modules_layer1_modules_0_modules_bn1_buffers_running_var_": 28, "l_self_modules_layer1_modules_0_modules_bn1_parameters_weight_": 28, "l_self_modules_layer1_modules_0_modules_bn1_parameters_bias_": 28, "l_self_modules_layer1_modules_0_modules_conv2_parameters_weight_": 28, "l_self_modules_layer1_modules_0_modules_bn2_buffers_running_mean_": 28, "l_self_modules_layer1_modules_0_modules_bn2_buffers_running_var_": 28, "l_self_modules_layer1_modules_0_modules_bn2_parameters_weight_": 28, "l_self_modules_layer1_modules_0_modules_bn2_parameters_bias_": 28, "l_self_modules_layer1_modules_1_modules_conv1_parameters_weight_": 28, "l_self_modules_layer1_modules_1_modules_bn1_buffers_running_mean_": 28, "l_self_modules_layer1_modules_1_modules_bn1_buffers_running_var_": 28, "l_self_modules_layer1_modules_1_modules_bn1_parameters_weight_": 28, "l_self_modules_layer1_modules_1_modules_bn1_parameters_bias_": 28, "l_self_modules_layer1_modules_1_modules_conv2_parameters_weight_": 28, "l_self_modules_layer1_modules_1_modules_bn2_buffers_running_mean_": 28, "l_self_modules_layer1_modules_1_modules_bn2_buffers_running_var_": 28, "l_self_modules_layer1_modules_1_modules_bn2_parameters_weight_": 28, "l_self_modules_layer1_modules_1_modules_bn2_parameters_bias_": 28, "l_self_modules_layer2_modules_0_modules_conv1_parameters_weight_": 28, "l_self_modules_layer2_modules_0_modules_bn1_buffers_running_mean_": 28, "l_self_modules_layer2_modules_0_modules_bn1_buffers_running_var_": 28, "l_self_modules_layer2_modules_0_modules_bn1_parameters_weight_": 28, "l_self_modules_layer2_modules_0_modules_bn1_parameters_bias_": 28, "l_self_modules_layer2_modules_0_modules_conv2_parameters_weight_": 28, "l_self_modules_layer2_modules_0_modules_bn2_buffers_running_mean_": 28, "l_self_modules_layer2_modules_0_modules_bn2_buffers_running_var_": 28, "l_self_modules_layer2_modules_0_modules_bn2_parameters_weight_": 28, "l_self_modules_layer2_modules_0_modules_bn2_parameters_bias_": 28, "l_self_modules_layer2_modules_0_modules_downsample_modules_0_parameters_weight_": 28, "l_self_modules_layer2_modules_0_modules_downsample_modules_1_buffers_running_mean_": 28, "l_self_modules_layer2_modules_0_modules_downsample_modules_1_buffers_running_var_": 28, "l_self_modules_layer2_modules_0_modules_downsample_modules_1_parameters_weight_": 28, "l_self_modules_layer2_modules_0_modules_downsample_modules_1_parameters_bias_": 28, "l_self_modules_layer2_modules_1_modules_conv1_parameters_weight_": 28, "l_self_modules_layer2_modules_1_modules_bn1_buffers_running_mean_": 28, "l_self_modules_layer2_modules_1_modules_bn1_buffers_running_var_": 28, "l_self_modules_layer2_modules_1_modules_bn1_parameters_weight_": 28, "l_self_modules_layer2_modules_1_modules_bn1_parameters_bias_": 28, "l_self_modules_layer2_modules_1_modules_conv2_parameters_weight_": 28, "l_self_modules_layer2_modules_1_modules_bn2_buffers_running_mean_": 28, "l_self_modules_layer2_modules_1_modules_bn2_buffers_running_var_": 28, "l_self_modules_layer2_modules_1_modules_bn2_parameters_weight_": 28, "l_self_modules_layer2_modules_1_modules_bn2_parameters_bias_": 28, "l_self_modules_layer3_modules_0_modules_conv1_parameters_weight_": 28, "l_self_modules_layer3_modules_0_modules_bn1_buffers_running_mean_": 28, "l_self_modules_layer3_modules_0_modules_bn1_buffers_running_var_": 28, "l_self_modules_layer3_modules_0_modules_bn1_parameters_weight_": 28, "l_self_modules_layer3_modules_0_modules_bn1_parameters_bias_": 28, "l_self_modules_layer3_modules_0_modules_conv2_parameters_weight_": 28, "l_self_modules_layer3_modules_0_modules_bn2_buffers_running_mean_": 28, "l_self_modules_layer3_modules_0_modules_bn2_buffers_running_var_": 28, "l_self_modules_layer3_modules_0_modules_bn2_parameters_weight_": 28, "l_self_modules_layer3_modules_0_modules_bn2_parameters_bias_": 28, "l_self_modules_layer3_modules_0_modules_downsample_modules_0_parameters_weight_": 28, "l_self_modules_layer3_modules_0_modules_downsample_modules_1_buffers_running_mean_": 28, "l_self_modules_layer3_modules_0_modules_downsample_modules_1_buffers_running_var_": 28, "l_self_modules_layer3_modules_0_modules_downsample_modules_1_parameters_weight_": 28, "l_self_modules_layer3_modules_0_modules_downsample_modules_1_parameters_bias_": 28, "l_self_modules_layer3_modules_1_modules_conv1_parameters_weight_": 28, "l_self_modules_layer3_modules_1_modules_bn1_buffers_running_mean_": 28, "l_self_modules_layer3_modules_1_modules_bn1_buffers_running_var_": 28, "l_self_modules_layer3_modules_1_modules_bn1_parameters_weight_": 28, "l_self_modules_layer3_modules_1_modules_bn1_parameters_bias_": 28, "l_self_modules_layer3_modules_1_modules_conv2_parameters_weight_": 28, "l_self_modules_layer3_modules_1_modules_bn2_buffers_running_mean_": 28, "l_self_modules_layer3_modules_1_modules_bn2_buffers_running_var_": 28, "l_self_modules_layer3_modules_1_modules_bn2_parameters_weight_": 28, "l_self_modules_layer3_modules_1_modules_bn2_parameters_bias_": 28, "l_self_modules_layer4_modules_0_modules_conv1_parameters_weight_": 28, "l_self_modules_layer4_modules_0_modules_bn1_buffers_running_mean_": 28, "l_self_modules_layer4_modules_0_modules_bn1_buffers_running_var_": 28, "l_self_modules_layer4_modules_0_modules_bn1_parameters_weight_": 28, "l_self_modules_layer4_modules_0_modules_bn1_parameters_bias_": 28, "l_self_modules_layer4_modules_0_modules_conv2_parameters_weight_": 28, "l_self_modules_layer4_modules_0_modules_bn2_buffers_running_mean_": 28, "l_self_modules_layer4_modules_0_modules_bn2_buffers_running_var_": 28, "l_self_modules_layer4_modules_0_modules_bn2_parameters_weight_": 28, "l_self_modules_layer4_modules_0_modules_bn2_parameters_bias_": 28, "l_self_modules_layer4_modules_0_modules_downsample_modules_0_parameters_weight_": 28, "l_self_modules_layer4_modules_0_modules_downsample_modules_1_buffers_running_mean_": 28, "l_self_modules_layer4_modules_0_modules_downsample_modules_1_buffers_running_var_": 28, "l_self_modules_layer4_modules_0_modules_downsample_modules_1_parameters_weight_": 28, "l_self_modules_layer4_modules_0_modules_downsample_modules_1_parameters_bias_": 28, "l_self_modules_layer4_modules_1_modules_conv1_parameters_weight_": 28, "l_self_modules_layer4_modules_1_modules_bn1_buffers_running_mean_": 28, "l_self_modules_layer4_modules_1_modules_bn1_buffers_running_var_": 28, "l_self_modules_layer4_modules_1_modules_bn1_parameters_weight_": 28, "l_self_modules_layer4_modules_1_modules_bn1_parameters_bias_": 28, "l_self_modules_layer4_modules_1_modules_conv2_parameters_weight_": 28, "l_self_modules_layer4_modules_1_modules_bn2_buffers_running_mean_": 28, "l_self_modules_layer4_modules_1_modules_bn2_buffers_running_var_": 28, "l_self_modules_layer4_modules_1_modules_bn2_parameters_weight_": 28, "l_self_modules_layer4_modules_1_modules_bn2_parameters_bias_": 28, "l_self_modules_fc_parameters_weight_": 28, "1000": 28, "l_self_modules_fc_parameters_bias_": 28, "_forward_impl": 28, "conv1": 28, "bn1": 28, "235": 28, "maxpool": 28, "return_indic": 28, "out_1": 28, "out_2": 28, "conv2": 28, "out_3": 28, "bn2": 28, "out_4": 28, "out_5": 28, "out_6": 28, "out_7": 28, "out_8": 28, "out_9": 28, "out_10": 28, "out_11": 28, "out_12": 28, "out_13": 28, "out_14": 28, "out_15": 28, "out_16": 28, "out_17": 28, "out_18": 28, "downsampl": 28, "input_1": 28, "input_2": 28, "out_19": 28, "out_20": 28, "out_21": 28, "out_22": 28, "out_23": 28, "out_24": 28, "out_25": 28, "out_26": 28, "out_27": 28, "out_28": 28, "out_29": 28, "out_30": 28, "out_31": 28, "out_32": 28, "input_3": 28, "input_4": 28, "out_33": 28, "out_34": 28, "out_35": 28, "out_36": 28, "out_37": 28, "out_38": 28, "out_39": 28, "out_40": 28, "out_41": 28, "out_42": 28, "out_43": 28, "out_44": 28, "out_45": 28, "out_46": 28, "input_5": 28, "input_6": 28, "out_47": 28, "out_48": 28, "out_49": 28, "out_50": 28, "out_51": 28, "out_52": 28, "out_53": 28, "out_54": 28, "out_55": 28, "242": 28, "avgpool": 28, "243": 28, "244": 28, "fc": 28, "_c": 28, "_nn": 28, "0x74581debf1c0": 28, "0x7457d2b5f0a0": 28, "0x7457d2b5e0e0": 28, "boolean_dispatch": 28, "0x7457d2b5cf70": 28, "0x7457d2b5dbd0": 28, "337": [28, 29, 72], "930": 29}, "objects": {"": [[67, 0, 0, "-", "hidet"]], "hidet": [[67, 1, 1, "", "Module"], [69, 1, 1, "", "Tensor"], [67, 4, 1, "", "asarray"], [47, 5, 1, "", "bfloat16"], [47, 5, 1, "", "boolean"], [48, 0, 0, "-", "drivers"], [67, 4, 1, "", "empty"], [67, 4, 1, "", "empty_like"], [49, 0, 0, "-", "ffi"], [47, 5, 1, "", "float16"], [47, 5, 1, "", "float32"], [47, 5, 1, "", "float64"], [67, 4, 1, "", "from_dlpack"], [67, 4, 1, "", "from_torch"], [67, 4, 1, "", "full"], [67, 4, 1, "", "full_like"], [53, 0, 0, "-", "graph"], [47, 5, 1, "", "int16"], [47, 5, 1, "", "int32"], [47, 5, 1, "", "int64"], [47, 5, 1, "", "int8"], [67, 4, 1, "", "load_compiled_graph"], [67, 4, 1, "", "ones"], [67, 4, 1, "", "ones_like"], [65, 0, 0, "-", "ops"], [66, 0, 0, "-", "option"], [67, 4, 1, "", "randn"], [67, 4, 1, "", "randn_like"], [68, 0, 0, "-", "runtime"], [67, 4, 1, "", "save_compiled_graph"], [67, 4, 1, "", "script"], [67, 4, 1, "", "symbol"], [67, 4, 1, "", "symbol_like"], [70, 0, 0, "-", "testing"], [47, 5, 1, "", "tfloat32"], [67, 4, 1, "", "trace_from"], [47, 5, 1, "", "uint16"], [47, 5, 1, "", "uint32"], [47, 5, 1, "", "uint64"], [47, 5, 1, "", "uint8"], [71, 0, 0, "-", "utils"], [67, 4, 1, "", "zeros"], [67, 4, 1, "", "zeros_like"]], "hidet.Tensor": [[69, 2, 1, "", "astype"], [69, 2, 1, "", "contiguous"], [69, 2, 1, "", "copy"], [69, 2, 1, "", "copy_async"], [69, 2, 1, "", "cpu"], [69, 2, 1, "", "cpu_async"], [69, 2, 1, "", "cuda"], [69, 2, 1, "", "cuda_async"], [69, 2, 1, "", "detach"], [69, 3, 1, "", "device"], [69, 3, 1, "", "dtype"], [69, 2, 1, "", "is_symbolic"], [69, 2, 1, "", "item"], [69, 3, 1, "", "layout"], [69, 2, 1, "", "mean"], [69, 3, 1, "", "nbytes"], [69, 2, 1, "", "numpy"], [69, 3, 1, "", "op"], [69, 2, 1, "", "rearrange"], [69, 2, 1, "", "reshape"], [69, 3, 1, "", "shape"], [69, 2, 1, "", "signature"], [69, 3, 1, "", "size"], [69, 2, 1, "", "squeeze"], [69, 3, 1, "", "storage"], [69, 2, 1, "", "sum"], [69, 2, 1, "", "to"], [69, 2, 1, "", "to_device"], [69, 2, 1, "", "tolist"], [69, 2, 1, "", "torch"], [69, 3, 1, "", "trace"], [69, 2, 1, "", "unsqueeze"]], "hidet.cuda": [[46, 1, 1, "", "Event"], [46, 1, 1, "", "ExternalStream"], [46, 1, 1, "", "Stream"], [46, 4, 1, "", "available"], [46, 4, 1, "", "compute_capability"], [46, 4, 1, "", "current_device"], [46, 4, 1, "", "current_stream"], [46, 4, 1, "", "default_stream"], [46, 4, 1, "", "device_count"], [46, 4, 1, "", "free"], [46, 4, 1, "", "free_async"], [46, 4, 1, "", "free_host"], [46, 4, 1, "", "malloc"], [46, 4, 1, "", "malloc_async"], [46, 4, 1, "", "malloc_host"], [46, 4, 1, "", "memcpy"], [46, 4, 1, "", "memcpy_async"], [46, 4, 1, "", "memory_info"], [46, 4, 1, "", "memset"], [46, 4, 1, "", "memset_async"], [46, 4, 1, "", "profiler_start"], [46, 4, 1, "", "profiler_stop"], [46, 4, 1, "", "properties"], [46, 4, 1, "", "set_device"], [46, 4, 1, "", "stream"], [46, 4, 1, "", "synchronize"]], "hidet.cuda.Event": [[46, 2, 1, "", "elapsed_time"], [46, 2, 1, "", "handle"], [46, 2, 1, "", "record"], [46, 2, 1, "", "synchronize"]], "hidet.cuda.Stream": [[46, 2, 1, "", "device_id"], [46, 2, 1, "", "handle"], [46, 2, 1, "", "synchronize"], [46, 2, 1, "", "wait_event"]], "hidet.cuda.graph": [[46, 1, 1, "", "CudaGraph"]], "hidet.cuda.graph.CudaGraph": [[46, 6, 1, "", "inputs"], [46, 6, 1, "", "outputs"], [46, 2, 1, "", "run"], [46, 2, 1, "", "run_async"]], "hidet.drivers": [[48, 4, 1, "", "build_ir_module"], [48, 4, 1, "", "build_ir_module_batch"], [48, 4, 1, "", "build_task"]], "hidet.ffi": [[49, 1, 1, "", "SharedLibrary"]], "hidet.graph": [[53, 1, 1, "", "FlowGraph"], [53, 1, 1, "", "GraphPassInstrument"], [53, 1, 1, "", "Module"], [53, 1, 1, "", "Operator"], [53, 1, 1, "", "PassContext"], [53, 4, 1, "", "asarray"], [53, 4, 1, "", "empty"], [53, 4, 1, "", "empty_like"], [53, 4, 1, "", "from_dlpack"], [53, 4, 1, "", "from_numpy"], [53, 4, 1, "", "from_torch"], [53, 4, 1, "", "full"], [53, 4, 1, "", "full_like"], [53, 4, 1, "", "ones"], [53, 4, 1, "", "ones_like"], [53, 4, 1, "", "optimize"], [53, 4, 1, "", "randn"], [53, 4, 1, "", "randn_like"], [53, 4, 1, "", "symbol"], [53, 4, 1, "", "symbol_like"], [53, 4, 1, "", "trace_from"], [53, 4, 1, "", "zeros"], [53, 4, 1, "", "zeros_like"]], "hidet.graph.FlowGraph": [[53, 2, 1, "", "__call__"], [53, 2, 1, "", "build"], [53, 2, 1, "", "cuda_"], [53, 2, 1, "", "cuda_graph"], [53, 2, 1, "", "forward"], [53, 3, 1, "", "inputs"], [53, 2, 1, "", "latency"], [53, 2, 1, "", "load"], [53, 6, 1, "", "nodes"], [53, 3, 1, "", "outputs"], [53, 2, 1, "", "save"], [53, 6, 1, "", "share_map"], [53, 6, 1, "", "usage_count"], [53, 2, 1, "", "vcuda_"]], "hidet.graph.GraphPassInstrument": [[53, 2, 1, "", "after_all_passes"], [53, 2, 1, "", "after_pass"], [53, 2, 1, "", "before_all_passes"], [53, 2, 1, "", "before_pass"]], "hidet.graph.Module": [[53, 2, 1, "", "__call__"]], "hidet.graph.Operator": [[53, 3, 1, "", "attrs"], [53, 6, 1, "", "build_target"], [53, 6, 1, "", "device"], [53, 3, 1, "", "inputs"], [53, 3, 1, "", "name"], [53, 3, 1, "", "outputs"], [53, 3, 1, "", "share_map"], [53, 3, 1, "", "task"]], "hidet.graph.PassContext": [[53, 2, 1, "", "add_quantize_rules"], [53, 3, 1, "", "configs"], [53, 2, 1, "", "current"], [53, 3, 1, "", "instruments"], [53, 2, 1, "", "profile_pass_instrument"], [53, 2, 1, "", "reduce_cuda_compile_mem"], [53, 2, 1, "", "save_graph_instrument"], [53, 2, 1, "", "set_mma"], [53, 2, 1, "", "set_precision"], [53, 2, 1, "", "set_reduce_precision"], [53, 2, 1, "", "set_verbose"]], "hidet.graph.frontend": [[51, 4, 1, "", "from_onnx"], [52, 4, 1, "", "from_torch"]], "hidet.graph.frontend.torch": [[52, 1, 1, "", "DynamoConfig"]], "hidet.graph.frontend.torch.DynamoConfig": [[52, 2, 1, "", "correctness_report"], [52, 2, 1, "", "dump_graph_ir"], [52, 2, 1, "", "print_input_graph"], [52, 2, 1, "", "reset"], [52, 2, 1, "", "search_space"], [52, 2, 1, "", "steal_weights"], [52, 2, 1, "", "use_attention"], [52, 2, 1, "", "use_cuda_graph"], [52, 2, 1, "", "use_fp16"], [52, 2, 1, "", "use_fp16_reduction"], [52, 2, 1, "", "use_tensor_core"]], "hidet.graph.transforms.resolve_variant": [[55, 1, 1, "", "ResolveRule"], [55, 4, 1, "", "register_resolve_rule"]], "hidet.graph.transforms.resolve_variant.ResolveRule": [[55, 2, 1, "", "resolve"]], "hidet.graph.transforms.subgraph_rewrite": [[56, 1, 1, "", "OperatorPattern"], [56, 1, 1, "", "SubgraphRewriteRule"], [56, 1, 1, "", "TensorPattern"], [56, 4, 1, "", "register_rewrite_rule"]], "hidet.graph.transforms.subgraph_rewrite.SubgraphRewriteRule": [[56, 2, 1, "", "source"], [56, 2, 1, "", "target"]], "hidet.ir": [[58, 0, 0, "-", "compute"], [59, 0, 0, "-", "expr"], [60, 0, 0, "-", "func"], [62, 0, 0, "-", "stmt"], [63, 0, 0, "-", "task"]], "hidet.ir.compute": [[58, 1, 1, "", "ReduceType"], [58, 4, 1, "", "arg_reduce"], [58, 4, 1, "", "compute"], [58, 4, 1, "", "reduce"], [58, 4, 1, "", "scalar_input"], [58, 4, 1, "", "tensor_input"]], "hidet.ir.expr": [[59, 1, 1, "", "IfThenElse"], [59, 5, 1, "", "Int"], [59, 4, 1, "", "if_then_else"], [59, 4, 1, "", "tensor_slice"]], "hidet.ir.func": [[60, 1, 1, "", "Function"]], "hidet.ir.func.Function": [[60, 2, 1, "", "get_attr"]], "hidet.ir.stmt": [[62, 1, 1, "", "DeclareScope"]], "hidet.ir.task": [[63, 1, 1, "", "Task"]], "hidet.ir.task.Task": [[63, 3, 1, "", "assertions"], [63, 3, 1, "", "attrs"], [63, 2, 1, "", "build"], [63, 2, 1, "", "dummy_arguments"], [63, 2, 1, "", "generate_arguments"], [63, 3, 1, "", "inputs"], [63, 3, 1, "", "inverse_map"], [63, 3, 1, "", "name"], [63, 3, 1, "", "outputs"], [63, 3, 1, "", "share_map"], [63, 3, 1, "", "symbols"]], "hidet.ir.type": [[64, 1, 1, "", "DataType"], [64, 4, 1, "", "data_type"]], "hidet.ops": [[65, 4, 1, "", "abs"], [65, 4, 1, "", "acos"], [65, 4, 1, "", "acosh"], [65, 4, 1, "", "adaptive_avg_pool1d"], [65, 4, 1, "", "adaptive_avg_pool2d"], [65, 4, 1, "", "adaptive_avg_pool3d"], [65, 4, 1, "", "adaptive_max_pool1d"], [65, 4, 1, "", "adaptive_max_pool2d"], [65, 4, 1, "", "adaptive_max_pool3d"], [65, 4, 1, "", "add"], [65, 4, 1, "", "all"], [65, 4, 1, "", "all_gather"], [65, 4, 1, "", "all_reduce"], [65, 4, 1, "", "any"], [65, 4, 1, "", "arange"], [65, 4, 1, "", "argmax"], [65, 4, 1, "", "argmin"], [65, 4, 1, "", "as_strided"], [65, 4, 1, "", "asin"], [65, 4, 1, "", "asinh"], [65, 4, 1, "", "atan"], [65, 4, 1, "", "atan2"], [65, 4, 1, "", "atanh"], [65, 4, 1, "", "attention"], [65, 4, 1, "", "avg_pool2d"], [65, 4, 1, "", "avg_pool3d"], [65, 4, 1, "", "barrier"], [65, 4, 1, "", "batch_matmul"], [65, 4, 1, "", "batch_norm_infer"], [65, 4, 1, "", "bitwise_and"], [65, 4, 1, "", "bitwise_invert"], [65, 4, 1, "", "bitwise_left_shift"], [65, 4, 1, "", "bitwise_or"], [65, 4, 1, "", "bitwise_right_shift"], [65, 4, 1, "", "bitwise_xor"], [65, 4, 1, "", "broadcast"], [65, 4, 1, "", "cast"], [65, 4, 1, "", "ceil"], [65, 4, 1, "", "celu"], [65, 4, 1, "", "clamp"], [65, 4, 1, "", "clip"], [65, 4, 1, "", "concat"], [65, 4, 1, "", "conj"], [65, 4, 1, "", "conv1d"], [65, 4, 1, "", "conv1d_gemm"], [65, 4, 1, "", "conv1d_transpose"], [65, 4, 1, "", "conv2d"], [65, 4, 1, "", "conv2d_channel_last"], [65, 4, 1, "", "conv2d_gemm"], [65, 4, 1, "", "conv2d_gemm_fp16"], [65, 4, 1, "", "conv2d_gemm_fp16_channel_last"], [65, 4, 1, "", "conv2d_gemm_image_transform"], [65, 4, 1, "", "conv2d_transpose"], [65, 4, 1, "", "conv2d_transpose_gemm"], [65, 4, 1, "", "conv2d_winograd"], [65, 4, 1, "", "conv3d"], [65, 4, 1, "", "conv3d_gemm"], [65, 4, 1, "", "conv3d_transpose"], [65, 4, 1, "", "conv_pad"], [65, 4, 1, "", "cos"], [65, 4, 1, "", "cosh"], [65, 4, 1, "", "cumsum"], [65, 4, 1, "", "divide"], [65, 4, 1, "", "einsum"], [65, 4, 1, "", "embedding_bag"], [65, 4, 1, "", "equal"], [65, 4, 1, "", "erf"], [65, 4, 1, "", "exp"], [65, 4, 1, "", "expand_dims"], [65, 4, 1, "", "expm1"], [65, 4, 1, "", "flatten"], [65, 4, 1, "", "flip"], [65, 4, 1, "", "floor"], [65, 4, 1, "", "full"], [65, 4, 1, "", "fused_operator"], [65, 4, 1, "", "gather"], [65, 4, 1, "", "gelu"], [65, 4, 1, "", "greater"], [65, 4, 1, "", "greater_equal"], [65, 4, 1, "", "group_norm"], [65, 4, 1, "", "hardshrink"], [65, 4, 1, "", "hardsigmoid"], [65, 4, 1, "", "hardswish"], [65, 4, 1, "", "hardtanh"], [65, 4, 1, "", "im2col"], [65, 4, 1, "", "imag"], [65, 4, 1, "", "index_select"], [65, 4, 1, "", "instance_norm"], [65, 4, 1, "", "isfinite"], [65, 4, 1, "", "isinf"], [65, 4, 1, "", "isnan"], [65, 4, 1, "", "layer_norm"], [65, 4, 1, "", "leaky_relu"], [65, 4, 1, "", "less"], [65, 4, 1, "", "less_equal"], [65, 4, 1, "", "linspace"], [65, 4, 1, "", "log"], [65, 4, 1, "", "log10"], [65, 4, 1, "", "log1p"], [65, 4, 1, "", "log2"], [65, 4, 1, "", "logaddexp"], [65, 4, 1, "", "logical_and"], [65, 4, 1, "", "logical_not"], [65, 4, 1, "", "logical_or"], [65, 4, 1, "", "logical_xor"], [65, 4, 1, "", "logsigmoid"], [65, 4, 1, "", "logsoftmax"], [65, 4, 1, "", "lp_norm"], [65, 4, 1, "", "make_complex"], [65, 4, 1, "", "matmul"], [65, 4, 1, "", "matmul_cublas"], [65, 4, 1, "", "matmul_nt"], [65, 4, 1, "", "matmul_x86"], [65, 4, 1, "", "max"], [65, 4, 1, "", "max_pool2d"], [65, 4, 1, "", "max_pool3d"], [65, 4, 1, "", "maximum"], [65, 4, 1, "", "mean"], [65, 4, 1, "", "meshgrid"], [65, 4, 1, "", "min"], [65, 4, 1, "", "minimum"], [65, 4, 1, "", "mod"], [65, 4, 1, "", "multiply"], [65, 4, 1, "", "negative"], [65, 4, 1, "", "not_equal"], [65, 4, 1, "", "pad"], [65, 4, 1, "", "permute_dims"], [65, 4, 1, "", "positive"], [65, 4, 1, "", "pow"], [65, 4, 1, "", "prelu"], [65, 4, 1, "", "prod"], [65, 4, 1, "", "real"], [65, 4, 1, "", "rearrange"], [65, 4, 1, "", "reciprocal"], [65, 4, 1, "", "reduce_scatter"], [65, 4, 1, "", "relu"], [65, 4, 1, "", "relu6"], [65, 4, 1, "", "remainder"], [65, 4, 1, "", "repeat_interleave"], [65, 4, 1, "", "reshape"], [65, 4, 1, "", "resize2d"], [65, 4, 1, "", "roll"], [65, 4, 1, "", "round"], [65, 4, 1, "", "rsqrt"], [65, 4, 1, "", "scatter_add_"], [65, 4, 1, "", "set_strided_slice"], [65, 4, 1, "", "sigmoid"], [65, 4, 1, "", "sign"], [65, 4, 1, "", "silu"], [65, 4, 1, "", "sin"], [65, 4, 1, "", "sinh"], [65, 4, 1, "", "softmax"], [65, 4, 1, "", "softmin"], [65, 4, 1, "", "softplus"], [65, 4, 1, "", "softshrink"], [65, 4, 1, "", "softsign"], [65, 4, 1, "", "split"], [65, 4, 1, "", "sqrt"], [65, 4, 1, "", "square"], [65, 4, 1, "", "squeeze"], [65, 4, 1, "", "std"], [65, 4, 1, "", "strided_slice"], [65, 4, 1, "", "subtract"], [65, 4, 1, "", "sum"], [65, 4, 1, "", "symmetric_dequantize"], [65, 4, 1, "", "symmetric_quantize"], [65, 4, 1, "", "take"], [65, 4, 1, "", "tan"], [65, 4, 1, "", "tanh"], [65, 4, 1, "", "tanhshrink"], [65, 4, 1, "", "tile"], [65, 4, 1, "", "transfer"], [65, 4, 1, "", "transpose"], [65, 4, 1, "", "tri"], [65, 4, 1, "", "tril"], [65, 4, 1, "", "triu"], [65, 4, 1, "", "trunc"], [65, 4, 1, "", "unsqueeze"], [65, 4, 1, "", "var"], [65, 4, 1, "", "wait_tensor"], [65, 4, 1, "", "where"]], "hidet.option": [[66, 1, 1, "", "OptionContext"], [66, 4, 1, "", "bench_config"], [66, 4, 1, "", "cache_dir"], [66, 4, 1, "", "cache_operator"], [66, 1, 1, "", "compile_server"], [66, 4, 1, "", "context"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 4, 1, "", "current_context"], [66, 4, 1, "", "debug_cache_tuning"], [66, 4, 1, "", "debug_enable_var_id"], [66, 4, 1, "", "debug_show_var_id"], [66, 4, 1, "", "debug_show_verbose_flow_graph"], [66, 4, 1, "", "debug_strict_broadcast_check"], [66, 4, 1, "", "dump_options"], [66, 4, 1, "", "execution_mode"], [66, 4, 1, "", "get_bench_config"], [66, 4, 1, "", "get_cache_dir"], [66, 4, 1, "", "get_cache_operator"], [66, 4, 1, "", "get_execution_mode"], [66, 4, 1, "", "get_option"], [66, 4, 1, "", "get_parallel_build"], [66, 4, 1, "", "get_parallel_k"], [66, 4, 1, "", "get_parallel_tune"], [66, 4, 1, "", "get_runtime_check"], [66, 4, 1, "", "get_save_lower_ir"], [66, 4, 1, "", "get_search_space"], [66, 4, 1, "", "is_option_exist"], [66, 4, 1, "", "parallel_build"], [66, 4, 1, "", "parallel_k"], [66, 4, 1, "", "parallel_tune"], [66, 4, 1, "", "restore_options"], [66, 4, 1, "", "runtime_check"], [66, 4, 1, "", "save_lower_ir"], [66, 4, 1, "", "search_space"], [66, 4, 1, "", "set_option"]], "hidet.option.OptionContext": [[66, 2, 1, "", "current"], [66, 2, 1, "", "get_option"], [66, 2, 1, "", "set_option"]], "hidet.option.compile_server": [[66, 2, 1, "", "addr"], [66, 2, 1, "", "enable"], [66, 2, 1, "", "enabled"], [66, 2, 1, "", "password"], [66, 2, 1, "", "port"], [66, 2, 1, "", "repo"], [66, 2, 1, "", "username"]], "hidet.option.cpu": [[66, 2, 1, "", "arch"], [66, 2, 1, "", "get_arch"]], "hidet.option.cuda": [[66, 2, 1, "", "arch"], [66, 2, 1, "", "get_arch"], [66, 2, 1, "", "get_arch_pair"]], "hidet.runtime": [[68, 1, 1, "", "CompiledFunction"], [68, 1, 1, "", "CompiledGraph"], [68, 1, 1, "", "CompiledModule"], [68, 1, 1, "", "CompiledTask"], [68, 4, 1, "", "create_compiled_app"], [68, 4, 1, "", "load_compiled_app"], [68, 4, 1, "", "load_compiled_graph"], [68, 4, 1, "", "load_compiled_module"], [68, 4, 1, "", "load_compiled_task"], [68, 4, 1, "", "save_compiled_app"], [68, 4, 1, "", "save_compiled_graph"]], "hidet.runtime.CompiledFunction": [[68, 2, 1, "", "profile"]], "hidet.runtime.CompiledGraph": [[68, 2, 1, "", "cuda_graph"], [68, 2, 1, "", "run_async"], [68, 2, 1, "", "save"], [68, 2, 1, "", "set_weights"]], "hidet.runtime.CompiledModule": [[68, 3, 1, "", "functions"], [68, 3, 1, "", "module_dir"], [68, 2, 1, "", "profile"], [68, 3, 1, "", "shared_library"], [68, 2, 1, "", "source"]], "hidet.runtime.CompiledTask": [[68, 2, 1, "", "profile"], [68, 2, 1, "", "run_async"]], "hidet.testing": [[70, 4, 1, "", "benchmark_func"]], "hidet.utils": [[71, 1, 1, "", "DirectedGraph"], [71, 4, 1, "", "cdiv"], [71, 4, 1, "", "error_tolerance"], [71, 4, 1, "", "factorize"], [71, 4, 1, "", "gcd"], [71, 4, 1, "", "initialize"], [71, 4, 1, "", "lcm"]], "hidet.utils.DirectedGraph": [[71, 2, 1, "", "add_edge"], [71, 2, 1, "", "add_node"], [71, 2, 1, "", "from_edges"], [71, 2, 1, "", "has_edge"], [71, 2, 1, "", "has_node"], [71, 2, 1, "", "topological_order"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:data", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"]}, "titleterms": {"contribut": 0, "defin": [1, 2, 3, 11, 23, 43], "oper": [1, 2, 3, 4, 6, 11, 28, 43, 45, 55], "comput": [1, 2, 9, 12, 20, 22, 25, 29, 43, 58, 72], "primit": [1, 40, 41], "task": [1, 2, 37, 63], "build": [1, 31], "run": [1, 6, 11, 27], "more": [1, 18], "exampl": [1, 2, 33, 42], "reducesum": 1, "argmax": 1, "matmul": 1, "softmax": 1, "summari": [1, 2, 3, 4, 5, 6, 11, 23, 27], "us": [2, 3, 28], "rule": [2, 4, 5], "base": [2, 3], "schedul": [2, 3, 43], "three": 2, "step": [2, 11], "new": [2, 43], "batch": 2, "matrix": [2, 17, 18], "multipl": [2, 17, 18], "1": [2, 6], "class": 2, "2": [2, 6], "3": [2, 6], "function": [2, 16, 38, 40, 41], "creat": 2, "instanc": 2, "two": [2, 43], "machan": 2, "templat": 3, "overrid": 3, "implement_cuda": 3, "method": [3, 43], "implement": 3, "tensor": [3, 11, 35, 69], "program": 3, "add": [4, 5, 6, 43], "resolv": [4, 55], "sub": [5, 56], "graph": [5, 11, 23, 28, 46, 50, 51, 52, 53, 54, 56], "rewrit": [5, 56], "hidet": [5, 11, 27, 31, 33, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "appli": 5, "pytorch": [6, 11, 28], "map": [6, 37], "prepar": [6, 27], "environ": 6, "compil": 6, "model": [6, 11, 23, 27, 28], "4": 6, "write": 7, "dynam": 7, "kernel": [7, 16, 28], "todo": [7, 37, 40, 65], "time": [9, 12, 20, 22, 25, 29, 72], "index": [10, 19, 21, 24, 30], "quick": 11, "start": [11, 44], "optim": [11, 23, 27, 28], "symbol": 11, "flow": [11, 23, 37], "next": 11, "hello": 13, "world": 13, "scalar": [14, 35], "addit": [14, 15], "vector": 15, "cpu": [16, 41], "cuda": [16, 28, 40, 46], "naiv": 17, "effici": 18, "visual": 23, "gener": 23, "dump": 23, "netron": 23, "intermedi": 23, "tutori": [24, 26, 44], "onnx": [27, 51], "load": 27, "imper": 27, "trace": 27, "flowgraph": 27, "search": 28, "larger": 28, "space": 28, "check": 28, "correct": 28, "configur": 28, "dispatch": 28, "print": 28, "input": 28, "from": 31, "sourc": 31, "clone": 31, "code": 31, "share": 31, "librari": 31, "instal": [31, 32], "python": [31, 57], "packag": 31, "valid": 31, "script": [33, 39, 42, 44], "introduct": 34, "type": [35, 64], "system": 35, "shape": 35, "layout": 35, "pointer": 35, "void": 35, "express": 36, "liter": 36, "variabl": 36, "unari": 36, "binari": 36, "ternari": 36, "subscript": 36, "slice": 36, "statement": 37, "control": 37, "If": 37, "For": 37, "iter": 37, "while": 37, "kind": 38, "modul": 39, "specif": [40, 41], "attribut": 40, "memori": [40, 46], "scope": 40, "multi": 41, "thread": 41, "refer": [42, 44], "welcom": 44, "": 44, "document": 44, "get": 44, "develop": 44, "guid": 44, "note": 44, "cach": 45, "content": 46, "devic": 46, "manag": 46, "alloc": 46, "stream": 46, "event": 46, "dtype": 47, "driver": 48, "ffi": 49, "frontend": [50, 51, 52], "submodul": [50, 53, 61], "torch": 52, "transform": 54, "pass": [55, 56], "api": 57, "ir": [58, 59, 60, 61, 62, 63, 64], "expr": 59, "func": 60, "stmt": 62, "op": 65, "option": 66, "runtim": 68, "test": 70, "util": 71}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Contributing": [[0, "contributing"]], "Define Operator Computation": [[1, "define-operator-computation"]], "Compute Primitives": [[1, "compute-primitives"]], "Define a Computation Task": [[1, "define-a-computation-task"]], "Build and Run a Task": [[1, "build-and-run-a-task"]], "More Examples": [[1, "more-examples"]], "ReduceSum": [[1, "reducesum"]], "ArgMax": [[1, "argmax"]], "MatMul": [[1, "matmul"]], "Softmax": [[1, "softmax"]], "Summary": [[1, "summary"], [2, "summary"], [3, "summary"], [4, "summary"], [5, "summary"], [11, "summary"], [23, "summary"], [27, "summary"]], "Using Rule-based Scheduling": [[2, "using-rule-based-scheduling"]], "Three steps to define a new operator": [[2, "three-steps-to-define-a-new-operator"]], "Batch Matrix Multiplication Example": [[2, "batch-matrix-multiplication-example"]], "1. Define the computation task class": [[2, "define-the-computation-task-class"]], "2. Define the operator class": [[2, "define-the-operator-class"]], "3. Define a function to create the operator instance": [[2, "define-a-function-to-create-the-operator-instance"]], "Use the defined operator": [[2, "use-the-defined-operator"]], "Two Scheduling Machanisms": [[2, "two-scheduling-machanisms"]], "Using Template-based Scheduling": [[3, "using-template-based-scheduling"]], "Override implement_cuda() method": [[3, "override-implement-cuda-method"]], "Implement the tensor-program": [[3, "implement-the-tensor-program"]], "Define the operator": [[3, "define-the-operator"]], "Add Operator Resolve Rule": [[4, "add-operator-resolve-rule"], [4, "id2"]], "Operator Resolving": [[4, "operator-resolving"]], "Add Sub-Graph Rewrite Rule": [[5, "add-sub-graph-rewrite-rule"]], "Sub-graph rewrite in Hidet": [[5, "sub-graph-rewrite-in-hidet"]], "Add a sub-graph rewrite rule": [[5, "add-a-sub-graph-rewrite-rule"]], "Apply the rewrite rule": [[5, "apply-the-rewrite-rule"]], "Add PyTorch Operator Mapping": [[6, "add-pytorch-operator-mapping"]], "1. Prepare Environment": [[6, "prepare-environment"]], "2. Compile and Run the Model": [[6, "compile-and-run-the-model"]], "3. Add Operator Mappings": [[6, "add-operator-mappings"]], "4. Summary": [[6, "summary"]], "Writing Dynamic kernel": [[7, "writing-dynamic-kernel"]], "Todo": [[7, "id1"], [37, "id1"], [40, "id1"], [65, "id1"]], "Computation times": [[9, "computation-times"], [12, "computation-times"], [20, "computation-times"], [22, "computation-times"], [25, "computation-times"], [29, "computation-times"], [72, "computation-times"]], "Index": [[10, "index"], [19, "index"], [21, "index"], [24, "index"], [24, "id1"], [24, "id2"], [24, "id3"], [30, "index"]], "Quick Start": [[11, "quick-start"]], "Optimize PyTorch model with Hidet": [[11, "optimize-pytorch-model-with-hidet"]], "Define tensors": [[11, "define-tensors"]], "Run operators": [[11, "run-operators"]], "Symbolic tensor and flow graph": [[11, "symbolic-tensor-and-flow-graph"]], "Optimize flow graph": [[11, "optimize-flow-graph"]], "Run flow graph": [[11, "run-flow-graph"]], "Next Step": [[11, "next-step"]], "Hello World!": [[13, "hello-world"]], "Scalar Addition": [[14, "scalar-addition"]], "Vector Addition": [[15, "vector-addition"]], "Kernel Functions": [[16, "kernel-functions"]], "CPU kernel function": [[16, "cpu-kernel-function"]], "CUDA kernel function": [[16, "cuda-kernel-function"]], "Naive Matrix Multiplication": [[17, "naive-matrix-multiplication"]], "More Efficient Matrix Multiplication": [[18, "more-efficient-matrix-multiplication"]], "Visualize Flow Graph": [[23, "visualize-flow-graph"]], "Define model": [[23, "define-model"]], "Generate flow graph": [[23, "generate-flow-graph"]], "Dump netron graph": [[23, "dump-netron-graph"]], "Visualize optimization intermediate graphs": [[23, "visualize-optimization-intermediate-graphs"]], "Tutorials": [[24, "tutorials"], [26, "tutorials"], [44, null]], "Optimize ONNX Model": [[27, "optimize-onnx-model"]], "Preparation of ONNX model": [[27, "preparation-of-onnx-model"]], "Load the onnx model with Hidet": [[27, "load-the-onnx-model-with-hidet"]], "Imperatively run the model": [[27, "imperatively-run-the-model"]], "Trace the model and run": [[27, "trace-the-model-and-run"]], "Optimize FlowGraph": [[27, "optimize-flowgraph"]], "Optimize PyTorch Model": [[28, "optimize-pytorch-model"]], "Search in a larger search space": [[28, "search-in-a-larger-search-space"]], "Check the correctness": [[28, "check-the-correctness"]], "Operator configurations": [[28, "operator-configurations"]], "Use CUDA Graph to dispatch kernels": [[28, "use-cuda-graph-to-dispatch-kernels"]], "Print the input graph": [[28, "print-the-input-graph"]], "Build from source": [[31, "build-from-source"]], "Clone the code": [[31, "clone-the-code"]], "Build shared libraries": [[31, "build-shared-libraries"]], "Install the Hidet Python package": [[31, "install-the-hidet-python-package"]], "Validation": [[31, "validation"]], "Installation": [[32, "installation"]], "Examples": [[33, "examples"]], "Hidet Script Examples": [[33, null], [42, null]], "Introduction": [[34, "introduction"]], "Type System": [[35, "type-system"]], "Scalar types": [[35, "scalar-types"]], "Tensor type": [[35, "tensor-type"]], "Tensor shape": [[35, "tensor-shape"]], "Tensor layout": [[35, "tensor-layout"]], "Pointer types": [[35, "pointer-types"]], "Void type": [[35, "void-type"]], "Expressions": [[36, "expressions"]], "Literals": [[36, "literals"]], "Variables": [[36, "variables"]], "Unary expressions": [[36, "unary-expressions"]], "Binary expressions": [[36, "binary-expressions"]], "Ternary expressions": [[36, "ternary-expressions"]], "Subscript and slice expressions": [[36, "subscript-and-slice-expressions"]], "Statements": [[37, "statements"]], "Control flow statements": [[37, "control-flow-statements"]], "If statement": [[37, "if-statement"]], "For statement": [[37, "for-statement"]], "For mapping statement": [[37, "for-mapping-statement"]], "Task mapping": [[37, "task-mapping"]], "Iterate the task mapping": [[37, "iterate-the-task-mapping"]], "While statement": [[37, "while-statement"]], "Function": [[38, "function"]], "Function kinds": [[38, "function-kinds"]], "Module": [[39, "module"]], "Script module": [[39, "script-module"]], "CUDA Specifics": [[40, "cuda-specifics"]], "Function attributes": [[40, "function-attributes"]], "Memory scope": [[40, "memory-scope"]], "Primitive functions": [[40, "primitive-functions"], [41, "primitive-functions"]], "CPU Specifics": [[41, "cpu-specifics"]], "Multi-threading": [[41, "multi-threading"]], "Reference": [[42, "reference"], [44, null]], "Add New Operator": [[43, "add-new-operator"]], "Define Computation": [[43, null]], "Two Scheduling Methods": [[43, null]], "Welcome to Hidet\u2019s Documentation": [[44, "welcome-to-hidet-s-documentation"]], "Getting Started": [[44, null]], "Hidet Script": [[44, null]], "Developer Guide": [[44, null]], "Notes": [[44, null]], "Operator Cache": [[45, "operator-cache"]], "hidet.cuda": [[46, "hidet-cuda"]], "Contents": [[46, "contents"]], "Device Management": [[46, "device-management"]], "Memory Allocation": [[46, "memory-allocation"]], "CUDA Stream and Event": [[46, "cuda-stream-and-event"]], "CUDA Graph": [[46, "cuda-graph"]], "hidet.dtypes": [[47, "hidet-dtypes"]], "hidet.drivers": [[48, "module-hidet.drivers"]], "hidet.ffi": [[49, "module-hidet.ffi"]], "hidet.graph.frontend": [[50, "hidet-graph-frontend"]], "Submodules": [[50, null], [53, null], [61, null]], "hidet.graph.frontend.onnx": [[51, "hidet-graph-frontend-onnx"]], "hidet.graph.frontend.torch": [[52, "hidet-graph-frontend-torch"]], "hidet.graph": [[53, "hidet-graph"]], "hidet.graph.transforms": [[54, "hidet-graph-transforms"]], "Transforms": [[54, null]], "Resolve Operator Pass": [[55, "resolve-operator-pass"]], "Sub-graph Rewrite Pass": [[56, "sub-graph-rewrite-pass"]], "Python API": [[57, "python-api"], [57, null]], "hidet.ir.compute": [[58, "hidet-ir-compute"]], "hidet.ir.expr": [[59, "module-hidet.ir.expr"]], "hidet.ir.func": [[60, "module-hidet.ir.func"]], "hidet.ir": [[61, "hidet-ir"]], "hidet.ir.stmt": [[62, "module-hidet.ir.stmt"]], "hidet.ir.task": [[63, "module-hidet.ir.task"]], "hidet.ir.type": [[64, "hidet-ir-type"]], "hidet.ops": [[65, "hidet-ops"]], "hidet.option": [[66, "module-hidet.option"]], "hidet": [[67, "module-hidet"]], "hidet.runtime": [[68, "module-hidet.runtime"]], "hidet.Tensor": [[69, "hidet-tensor"]], "hidet.testing": [[70, "module-hidet.testing"]], "hidet.utils": [[71, "module-hidet.utils"]]}, "indexentries": {"cudagraph (class in hidet.cuda.graph)": [[46, "hidet.cuda.graph.CudaGraph"]], "event (class in hidet.cuda)": [[46, "hidet.cuda.Event"]], "externalstream (class in hidet.cuda)": [[46, "hidet.cuda.ExternalStream"]], "stream (class in hidet.cuda)": [[46, "hidet.cuda.Stream"]], "available() (in module hidet.cuda)": [[46, "hidet.cuda.available"]], "compute_capability() (in module hidet.cuda)": [[46, "hidet.cuda.compute_capability"]], "current_device() (in module hidet.cuda)": [[46, "hidet.cuda.current_device"]], "current_stream() (in module hidet.cuda)": [[46, "hidet.cuda.current_stream"]], "default_stream() (in module hidet.cuda)": [[46, "hidet.cuda.default_stream"]], "device_count() (in module hidet.cuda)": [[46, "hidet.cuda.device_count"]], "device_id() (hidet.cuda.stream method)": [[46, "hidet.cuda.Stream.device_id"]], "elapsed_time() (hidet.cuda.event method)": [[46, "hidet.cuda.Event.elapsed_time"]], "free() (in module hidet.cuda)": [[46, "hidet.cuda.free"]], "free_async() (in module hidet.cuda)": [[46, "hidet.cuda.free_async"]], "free_host() (in module hidet.cuda)": [[46, "hidet.cuda.free_host"]], "handle() (hidet.cuda.event method)": [[46, "hidet.cuda.Event.handle"]], "handle() (hidet.cuda.stream method)": [[46, "hidet.cuda.Stream.handle"]], "inputs (hidet.cuda.graph.cudagraph property)": [[46, "hidet.cuda.graph.CudaGraph.inputs"]], "malloc() (in module hidet.cuda)": [[46, "hidet.cuda.malloc"]], "malloc_async() (in module hidet.cuda)": [[46, "hidet.cuda.malloc_async"]], "malloc_host() (in module hidet.cuda)": [[46, "hidet.cuda.malloc_host"]], "memcpy() (in module hidet.cuda)": [[46, "hidet.cuda.memcpy"]], "memcpy_async() (in module hidet.cuda)": [[46, "hidet.cuda.memcpy_async"]], "memory_info() (in module hidet.cuda)": [[46, "hidet.cuda.memory_info"]], "memset() (in module hidet.cuda)": [[46, "hidet.cuda.memset"]], "memset_async() (in module hidet.cuda)": [[46, "hidet.cuda.memset_async"]], "outputs (hidet.cuda.graph.cudagraph property)": [[46, "hidet.cuda.graph.CudaGraph.outputs"]], "profiler_start() (in module hidet.cuda)": [[46, "hidet.cuda.profiler_start"]], "profiler_stop() (in module hidet.cuda)": [[46, "hidet.cuda.profiler_stop"]], "properties() (in module hidet.cuda)": [[46, "hidet.cuda.properties"]], "record() (hidet.cuda.event method)": [[46, "hidet.cuda.Event.record"]], "run() (hidet.cuda.graph.cudagraph method)": [[46, "hidet.cuda.graph.CudaGraph.run"]], "run_async() (hidet.cuda.graph.cudagraph method)": [[46, "hidet.cuda.graph.CudaGraph.run_async"]], "set_device() (in module hidet.cuda)": [[46, "hidet.cuda.set_device"]], "stream() (in module hidet.cuda)": [[46, "hidet.cuda.stream"]], "synchronize() (hidet.cuda.event method)": [[46, "hidet.cuda.Event.synchronize"]], "synchronize() (hidet.cuda.stream method)": [[46, "hidet.cuda.Stream.synchronize"]], "synchronize() (in module hidet.cuda)": [[46, "hidet.cuda.synchronize"]], "wait_event() (hidet.cuda.stream method)": [[46, "hidet.cuda.Stream.wait_event"]], "hidet.bfloat16 (built-in variable)": [[47, "hidet.bfloat16"]], "hidet.boolean (built-in variable)": [[47, "hidet.boolean"]], "hidet.float16 (built-in variable)": [[47, "hidet.float16"]], "hidet.float32 (built-in variable)": [[47, "hidet.float32"]], "hidet.float64 (built-in variable)": [[47, "hidet.float64"]], "hidet.int16 (built-in variable)": [[47, "hidet.int16"]], "hidet.int32 (built-in variable)": [[47, "hidet.int32"]], "hidet.int64 (built-in variable)": [[47, "hidet.int64"]], "hidet.int8 (built-in variable)": [[47, "hidet.int8"]], "hidet.tfloat32 (built-in variable)": [[47, "hidet.tfloat32"]], "hidet.uint16 (built-in variable)": [[47, "hidet.uint16"]], "hidet.uint32 (built-in variable)": [[47, "hidet.uint32"]], "hidet.uint64 (built-in variable)": [[47, "hidet.uint64"]], "hidet.uint8 (built-in variable)": [[47, "hidet.uint8"]], "build_ir_module() (in module hidet.drivers)": [[48, "hidet.drivers.build_ir_module"]], "build_ir_module_batch() (in module hidet.drivers)": [[48, "hidet.drivers.build_ir_module_batch"]], "build_task() (in module hidet.drivers)": [[48, "hidet.drivers.build_task"]], "hidet.drivers": [[48, "module-hidet.drivers"]], "module": [[48, "module-hidet.drivers"], [49, "module-hidet.ffi"], [53, "module-hidet.graph"], [58, "module-hidet.ir.compute"], [59, "module-hidet.ir.expr"], [60, "module-hidet.ir.func"], [62, "module-hidet.ir.stmt"], [63, "module-hidet.ir.task"], [65, "module-hidet.ops"], [66, "module-hidet.option"], [67, "module-hidet"], [68, "module-hidet.runtime"], [70, "module-hidet.testing"], [71, "module-hidet.utils"]], "sharedlibrary (class in hidet.ffi)": [[49, "hidet.ffi.SharedLibrary"]], "hidet.ffi": [[49, "module-hidet.ffi"]], "from_onnx() (in module hidet.graph.frontend)": [[51, "hidet.graph.frontend.from_onnx"]], "dynamoconfig (class in hidet.graph.frontend.torch)": [[52, "hidet.graph.frontend.torch.DynamoConfig"]], "correctness_report() (hidet.graph.frontend.torch.dynamoconfig method)": [[52, "hidet.graph.frontend.torch.DynamoConfig.correctness_report"]], "dump_graph_ir() (hidet.graph.frontend.torch.dynamoconfig method)": [[52, "hidet.graph.frontend.torch.DynamoConfig.dump_graph_ir"]], "from_torch() (in module hidet.graph.frontend)": [[52, "hidet.graph.frontend.from_torch"]], "print_input_graph() (hidet.graph.frontend.torch.dynamoconfig method)": [[52, "hidet.graph.frontend.torch.DynamoConfig.print_input_graph"]], "reset() (hidet.graph.frontend.torch.dynamoconfig method)": [[52, "hidet.graph.frontend.torch.DynamoConfig.reset"]], "search_space() (hidet.graph.frontend.torch.dynamoconfig method)": [[52, "hidet.graph.frontend.torch.DynamoConfig.search_space"]], "steal_weights() (hidet.graph.frontend.torch.dynamoconfig method)": [[52, "hidet.graph.frontend.torch.DynamoConfig.steal_weights"]], "use_attention() (hidet.graph.frontend.torch.dynamoconfig method)": [[52, "hidet.graph.frontend.torch.DynamoConfig.use_attention"]], "use_cuda_graph() (hidet.graph.frontend.torch.dynamoconfig method)": [[52, "hidet.graph.frontend.torch.DynamoConfig.use_cuda_graph"]], "use_fp16() (hidet.graph.frontend.torch.dynamoconfig method)": [[52, "hidet.graph.frontend.torch.DynamoConfig.use_fp16"]], "use_fp16_reduction() (hidet.graph.frontend.torch.dynamoconfig method)": [[52, "hidet.graph.frontend.torch.DynamoConfig.use_fp16_reduction"]], "use_tensor_core() (hidet.graph.frontend.torch.dynamoconfig method)": [[52, "hidet.graph.frontend.torch.DynamoConfig.use_tensor_core"]], "flowgraph (class in hidet.graph)": [[53, "hidet.graph.FlowGraph"]], "graphpassinstrument (class in hidet.graph)": [[53, "hidet.graph.GraphPassInstrument"]], "module (class in hidet.graph)": [[53, "hidet.graph.Module"]], "operator (class in hidet.graph)": [[53, "hidet.graph.Operator"]], "passcontext (class in hidet.graph)": [[53, "hidet.graph.PassContext"]], "__call__() (hidet.graph.flowgraph method)": [[53, "hidet.graph.FlowGraph.__call__"]], "__call__() (hidet.graph.module method)": [[53, "hidet.graph.Module.__call__"]], "add_quantize_rules() (hidet.graph.passcontext method)": [[53, "hidet.graph.PassContext.add_quantize_rules"]], "after_all_passes() (hidet.graph.graphpassinstrument method)": [[53, "hidet.graph.GraphPassInstrument.after_all_passes"]], "after_pass() (hidet.graph.graphpassinstrument method)": [[53, "hidet.graph.GraphPassInstrument.after_pass"]], "asarray() (in module hidet.graph)": [[53, "hidet.graph.asarray"]], "attrs (hidet.graph.operator attribute)": [[53, "hidet.graph.Operator.attrs"]], "before_all_passes() (hidet.graph.graphpassinstrument method)": [[53, "hidet.graph.GraphPassInstrument.before_all_passes"]], "before_pass() (hidet.graph.graphpassinstrument method)": [[53, "hidet.graph.GraphPassInstrument.before_pass"]], "build() (hidet.graph.flowgraph method)": [[53, "hidet.graph.FlowGraph.build"]], "build_target (hidet.graph.operator property)": [[53, "hidet.graph.Operator.build_target"]], "configs (hidet.graph.passcontext attribute)": [[53, "hidet.graph.PassContext.configs"]], "cuda_() (hidet.graph.flowgraph method)": [[53, "hidet.graph.FlowGraph.cuda_"]], "cuda_graph() (hidet.graph.flowgraph method)": [[53, "hidet.graph.FlowGraph.cuda_graph"]], "current() (hidet.graph.passcontext class method)": [[53, "hidet.graph.PassContext.current"]], "device (hidet.graph.operator property)": [[53, "hidet.graph.Operator.device"]], "empty() (in module hidet.graph)": [[53, "hidet.graph.empty"]], "empty_like() (in module hidet.graph)": [[53, "hidet.graph.empty_like"]], "forward() (hidet.graph.flowgraph method)": [[53, "hidet.graph.FlowGraph.forward"]], "from_dlpack() (in module hidet.graph)": [[53, "hidet.graph.from_dlpack"]], "from_numpy() (in module hidet.graph)": [[53, "hidet.graph.from_numpy"]], "from_torch() (in module hidet.graph)": [[53, "hidet.graph.from_torch"]], "full() (in module hidet.graph)": [[53, "hidet.graph.full"]], "full_like() (in module hidet.graph)": [[53, "hidet.graph.full_like"]], "hidet.graph": [[53, "module-hidet.graph"]], "inputs (hidet.graph.flowgraph attribute)": [[53, "hidet.graph.FlowGraph.inputs"]], "inputs (hidet.graph.operator attribute)": [[53, "hidet.graph.Operator.inputs"]], "instruments (hidet.graph.passcontext attribute)": [[53, "hidet.graph.PassContext.instruments"]], "latency() (hidet.graph.flowgraph method)": [[53, "hidet.graph.FlowGraph.latency"]], "load() (hidet.graph.flowgraph static method)": [[53, "hidet.graph.FlowGraph.load"]], "name (hidet.graph.operator attribute)": [[53, "hidet.graph.Operator.name"]], "nodes (hidet.graph.flowgraph property)": [[53, "hidet.graph.FlowGraph.nodes"]], "ones() (in module hidet.graph)": [[53, "hidet.graph.ones"]], "ones_like() (in module hidet.graph)": [[53, "hidet.graph.ones_like"]], "optimize() (in module hidet.graph)": [[53, "hidet.graph.optimize"]], "outputs (hidet.graph.flowgraph attribute)": [[53, "hidet.graph.FlowGraph.outputs"]], "outputs (hidet.graph.operator attribute)": [[53, "hidet.graph.Operator.outputs"]], "profile_pass_instrument() (hidet.graph.passcontext method)": [[53, "hidet.graph.PassContext.profile_pass_instrument"]], "randn() (in module hidet.graph)": [[53, "hidet.graph.randn"]], "randn_like() (in module hidet.graph)": [[53, "hidet.graph.randn_like"]], "reduce_cuda_compile_mem() (hidet.graph.passcontext method)": [[53, "hidet.graph.PassContext.reduce_cuda_compile_mem"]], "save() (hidet.graph.flowgraph method)": [[53, "hidet.graph.FlowGraph.save"]], "save_graph_instrument() (hidet.graph.passcontext method)": [[53, "hidet.graph.PassContext.save_graph_instrument"]], "set_mma() (hidet.graph.passcontext method)": [[53, "hidet.graph.PassContext.set_mma"]], "set_precision() (hidet.graph.passcontext method)": [[53, "hidet.graph.PassContext.set_precision"]], "set_reduce_precision() (hidet.graph.passcontext method)": [[53, "hidet.graph.PassContext.set_reduce_precision"]], "set_verbose() (hidet.graph.passcontext method)": [[53, "hidet.graph.PassContext.set_verbose"]], "share_map (hidet.graph.flowgraph property)": [[53, "hidet.graph.FlowGraph.share_map"]], "share_map (hidet.graph.operator attribute)": [[53, "hidet.graph.Operator.share_map"]], "symbol() (in module hidet.graph)": [[53, "hidet.graph.symbol"]], "symbol_like() (in module hidet.graph)": [[53, "hidet.graph.symbol_like"]], "task (hidet.graph.operator attribute)": [[53, "hidet.graph.Operator.task"]], "trace_from() (in module hidet.graph)": [[53, "hidet.graph.trace_from"]], "usage_count (hidet.graph.flowgraph property)": [[53, "hidet.graph.FlowGraph.usage_count"]], "vcuda_() (hidet.graph.flowgraph method)": [[53, "hidet.graph.FlowGraph.vcuda_"]], "zeros() (in module hidet.graph)": [[53, "hidet.graph.zeros"]], "zeros_like() (in module hidet.graph)": [[53, "hidet.graph.zeros_like"]], "resolverule (class in hidet.graph.transforms.resolve_variant)": [[55, "hidet.graph.transforms.resolve_variant.ResolveRule"]], "register_resolve_rule() (in module hidet.graph.transforms.resolve_variant)": [[55, "hidet.graph.transforms.resolve_variant.register_resolve_rule"]], "resolve() (hidet.graph.transforms.resolve_variant.resolverule method)": [[55, "hidet.graph.transforms.resolve_variant.ResolveRule.resolve"]], "operatorpattern (class in hidet.graph.transforms.subgraph_rewrite)": [[56, "hidet.graph.transforms.subgraph_rewrite.OperatorPattern"]], "subgraphrewriterule (class in hidet.graph.transforms.subgraph_rewrite)": [[56, "hidet.graph.transforms.subgraph_rewrite.SubgraphRewriteRule"]], "tensorpattern (class in hidet.graph.transforms.subgraph_rewrite)": [[56, "hidet.graph.transforms.subgraph_rewrite.TensorPattern"]], "register_rewrite_rule() (in module hidet.graph.transforms.subgraph_rewrite)": [[56, "hidet.graph.transforms.subgraph_rewrite.register_rewrite_rule"]], "source() (hidet.graph.transforms.subgraph_rewrite.subgraphrewriterule method)": [[56, "hidet.graph.transforms.subgraph_rewrite.SubgraphRewriteRule.source"]], "target() (hidet.graph.transforms.subgraph_rewrite.subgraphrewriterule method)": [[56, "hidet.graph.transforms.subgraph_rewrite.SubgraphRewriteRule.target"]], "reducetype (class in hidet.ir.compute)": [[58, "hidet.ir.compute.ReduceType"]], "arg_reduce() (in module hidet.ir.compute)": [[58, "hidet.ir.compute.arg_reduce"]], "compute() (in module hidet.ir.compute)": [[58, "hidet.ir.compute.compute"]], "hidet.ir.compute": [[58, "module-hidet.ir.compute"]], "reduce() (in module hidet.ir.compute)": [[58, "hidet.ir.compute.reduce"]], "scalar_input() (in module hidet.ir.compute)": [[58, "hidet.ir.compute.scalar_input"]], "tensor_input() (in module hidet.ir.compute)": [[58, "hidet.ir.compute.tensor_input"]], "ifthenelse (class in hidet.ir.expr)": [[59, "hidet.ir.expr.IfThenElse"]], "int (in module hidet.ir.expr)": [[59, "hidet.ir.expr.Int"]], "hidet.ir.expr": [[59, "module-hidet.ir.expr"]], "if_then_else() (in module hidet.ir.expr)": [[59, "hidet.ir.expr.if_then_else"]], "tensor_slice() (in module hidet.ir.expr)": [[59, "hidet.ir.expr.tensor_slice"]], "function (class in hidet.ir.func)": [[60, "hidet.ir.func.Function"]], "get_attr() (hidet.ir.func.function method)": [[60, "hidet.ir.func.Function.get_attr"]], "hidet.ir.func": [[60, "module-hidet.ir.func"]], "declarescope (class in hidet.ir.stmt)": [[62, "hidet.ir.stmt.DeclareScope"]], "hidet.ir.stmt": [[62, "module-hidet.ir.stmt"]], "task (class in hidet.ir.task)": [[63, "hidet.ir.task.Task"]], "assertions (hidet.ir.task.task attribute)": [[63, "hidet.ir.task.Task.assertions"]], "attrs (hidet.ir.task.task attribute)": [[63, "hidet.ir.task.Task.attrs"]], "build() (hidet.ir.task.task method)": [[63, "hidet.ir.task.Task.build"]], "dummy_arguments() (hidet.ir.task.task method)": [[63, "hidet.ir.task.Task.dummy_arguments"]], "generate_arguments() (hidet.ir.task.task method)": [[63, "hidet.ir.task.Task.generate_arguments"]], "hidet.ir.task": [[63, "module-hidet.ir.task"]], "inputs (hidet.ir.task.task attribute)": [[63, "hidet.ir.task.Task.inputs"]], "inverse_map (hidet.ir.task.task attribute)": [[63, "hidet.ir.task.Task.inverse_map"]], "name (hidet.ir.task.task attribute)": [[63, "hidet.ir.task.Task.name"]], "outputs (hidet.ir.task.task attribute)": [[63, "hidet.ir.task.Task.outputs"]], "share_map (hidet.ir.task.task attribute)": [[63, "hidet.ir.task.Task.share_map"]], "symbols (hidet.ir.task.task attribute)": [[63, "hidet.ir.task.Task.symbols"]], "datatype (class in hidet.ir.type)": [[64, "hidet.ir.type.DataType"]], "data_type() (in module hidet.ir.type)": [[64, "hidet.ir.type.data_type"]], "abs() (in module hidet.ops)": [[65, "hidet.ops.abs"]], "acos() (in module hidet.ops)": [[65, "hidet.ops.acos"]], "acosh() (in module hidet.ops)": [[65, "hidet.ops.acosh"]], "adaptive_avg_pool1d() (in module hidet.ops)": [[65, "hidet.ops.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module hidet.ops)": [[65, "hidet.ops.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module hidet.ops)": [[65, "hidet.ops.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module hidet.ops)": [[65, "hidet.ops.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module hidet.ops)": [[65, "hidet.ops.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module hidet.ops)": [[65, "hidet.ops.adaptive_max_pool3d"]], "add() (in module hidet.ops)": [[65, "hidet.ops.add"]], "all() (in module hidet.ops)": [[65, "hidet.ops.all"]], "all_gather() (in module hidet.ops)": [[65, "hidet.ops.all_gather"]], "all_reduce() (in module hidet.ops)": [[65, "hidet.ops.all_reduce"]], "any() (in module hidet.ops)": [[65, "hidet.ops.any"]], "arange() (in module hidet.ops)": [[65, "hidet.ops.arange"]], "argmax() (in module hidet.ops)": [[65, "hidet.ops.argmax"]], "argmin() (in module hidet.ops)": [[65, "hidet.ops.argmin"]], "as_strided() (in module hidet.ops)": [[65, "hidet.ops.as_strided"]], "asin() (in module hidet.ops)": [[65, "hidet.ops.asin"]], "asinh() (in module hidet.ops)": [[65, "hidet.ops.asinh"]], "atan() (in module hidet.ops)": [[65, "hidet.ops.atan"]], "atan2() (in module hidet.ops)": [[65, "hidet.ops.atan2"]], "atanh() (in module hidet.ops)": [[65, "hidet.ops.atanh"]], "attention() (in module hidet.ops)": [[65, "hidet.ops.attention"]], "avg_pool2d() (in module hidet.ops)": [[65, "hidet.ops.avg_pool2d"]], "avg_pool3d() (in module hidet.ops)": [[65, "hidet.ops.avg_pool3d"]], "barrier() (in module hidet.ops)": [[65, "hidet.ops.barrier"]], "batch_matmul() (in module hidet.ops)": [[65, "hidet.ops.batch_matmul"]], "batch_norm_infer() (in module hidet.ops)": [[65, "hidet.ops.batch_norm_infer"]], "bitwise_and() (in module hidet.ops)": [[65, "hidet.ops.bitwise_and"]], "bitwise_invert() (in module hidet.ops)": [[65, "hidet.ops.bitwise_invert"]], "bitwise_left_shift() (in module hidet.ops)": [[65, "hidet.ops.bitwise_left_shift"]], "bitwise_or() (in module hidet.ops)": [[65, "hidet.ops.bitwise_or"]], "bitwise_right_shift() (in module hidet.ops)": [[65, "hidet.ops.bitwise_right_shift"]], "bitwise_xor() (in module hidet.ops)": [[65, "hidet.ops.bitwise_xor"]], "broadcast() (in module hidet.ops)": [[65, "hidet.ops.broadcast"]], "cast() (in module hidet.ops)": [[65, "hidet.ops.cast"]], "ceil() (in module hidet.ops)": [[65, "hidet.ops.ceil"]], "celu() (in module hidet.ops)": [[65, "hidet.ops.celu"]], "clamp() (in module hidet.ops)": [[65, "hidet.ops.clamp"]], "clip() (in module hidet.ops)": [[65, "hidet.ops.clip"]], "concat() (in module hidet.ops)": [[65, "hidet.ops.concat"]], "conj() (in module hidet.ops)": [[65, "hidet.ops.conj"]], "conv1d() (in module hidet.ops)": [[65, "hidet.ops.conv1d"]], "conv1d_gemm() (in module hidet.ops)": [[65, "hidet.ops.conv1d_gemm"]], "conv1d_transpose() (in module hidet.ops)": [[65, "hidet.ops.conv1d_transpose"]], "conv2d() (in module hidet.ops)": [[65, "hidet.ops.conv2d"]], "conv2d_channel_last() (in module hidet.ops)": [[65, "hidet.ops.conv2d_channel_last"]], "conv2d_gemm() (in module hidet.ops)": [[65, "hidet.ops.conv2d_gemm"]], "conv2d_gemm_fp16() (in module hidet.ops)": [[65, "hidet.ops.conv2d_gemm_fp16"]], "conv2d_gemm_fp16_channel_last() (in module hidet.ops)": [[65, "hidet.ops.conv2d_gemm_fp16_channel_last"]], "conv2d_gemm_image_transform() (in module hidet.ops)": [[65, "hidet.ops.conv2d_gemm_image_transform"]], "conv2d_transpose() (in module hidet.ops)": [[65, "hidet.ops.conv2d_transpose"]], "conv2d_transpose_gemm() (in module hidet.ops)": [[65, "hidet.ops.conv2d_transpose_gemm"]], "conv2d_winograd() (in module hidet.ops)": [[65, "hidet.ops.conv2d_winograd"]], "conv3d() (in module hidet.ops)": [[65, "hidet.ops.conv3d"]], "conv3d_gemm() (in module hidet.ops)": [[65, "hidet.ops.conv3d_gemm"]], "conv3d_transpose() (in module hidet.ops)": [[65, "hidet.ops.conv3d_transpose"]], "conv_pad() (in module hidet.ops)": [[65, "hidet.ops.conv_pad"]], "cos() (in module hidet.ops)": [[65, "hidet.ops.cos"]], "cosh() (in module hidet.ops)": [[65, "hidet.ops.cosh"]], "cumsum() (in module hidet.ops)": [[65, "hidet.ops.cumsum"]], "divide() (in module hidet.ops)": [[65, "hidet.ops.divide"]], "einsum() (in module hidet.ops)": [[65, "hidet.ops.einsum"]], "embedding_bag() (in module hidet.ops)": [[65, "hidet.ops.embedding_bag"]], "equal() (in module hidet.ops)": [[65, "hidet.ops.equal"]], "erf() (in module hidet.ops)": [[65, "hidet.ops.erf"]], "exp() (in module hidet.ops)": [[65, "hidet.ops.exp"]], "expand_dims() (in module hidet.ops)": [[65, "hidet.ops.expand_dims"]], "expm1() (in module hidet.ops)": [[65, "hidet.ops.expm1"]], "flatten() (in module hidet.ops)": [[65, "hidet.ops.flatten"]], "flip() (in module hidet.ops)": [[65, "hidet.ops.flip"]], "floor() (in module hidet.ops)": [[65, "hidet.ops.floor"]], "full() (in module hidet.ops)": [[65, "hidet.ops.full"]], "fused_operator() (in module hidet.ops)": [[65, "hidet.ops.fused_operator"]], "gather() (in module hidet.ops)": [[65, "hidet.ops.gather"]], "gelu() (in module hidet.ops)": [[65, "hidet.ops.gelu"]], "greater() (in module hidet.ops)": [[65, "hidet.ops.greater"]], "greater_equal() (in module hidet.ops)": [[65, "hidet.ops.greater_equal"]], "group_norm() (in module hidet.ops)": [[65, "hidet.ops.group_norm"]], "hardshrink() (in module hidet.ops)": [[65, "hidet.ops.hardshrink"]], "hardsigmoid() (in module hidet.ops)": [[65, "hidet.ops.hardsigmoid"]], "hardswish() (in module hidet.ops)": [[65, "hidet.ops.hardswish"]], "hardtanh() (in module hidet.ops)": [[65, "hidet.ops.hardtanh"]], "hidet.ops": [[65, "module-hidet.ops"]], "im2col() (in module hidet.ops)": [[65, "hidet.ops.im2col"]], "imag() (in module hidet.ops)": [[65, "hidet.ops.imag"]], "index_select() (in module hidet.ops)": [[65, "hidet.ops.index_select"]], "instance_norm() (in module hidet.ops)": [[65, "hidet.ops.instance_norm"]], "isfinite() (in module hidet.ops)": [[65, "hidet.ops.isfinite"]], "isinf() (in module hidet.ops)": [[65, "hidet.ops.isinf"]], "isnan() (in module hidet.ops)": [[65, "hidet.ops.isnan"]], "layer_norm() (in module hidet.ops)": [[65, "hidet.ops.layer_norm"]], "leaky_relu() (in module hidet.ops)": [[65, "hidet.ops.leaky_relu"]], "less() (in module hidet.ops)": [[65, "hidet.ops.less"]], "less_equal() (in module hidet.ops)": [[65, "hidet.ops.less_equal"]], "linspace() (in module hidet.ops)": [[65, "hidet.ops.linspace"]], "log() (in module hidet.ops)": [[65, "hidet.ops.log"]], "log10() (in module hidet.ops)": [[65, "hidet.ops.log10"]], "log1p() (in module hidet.ops)": [[65, "hidet.ops.log1p"]], "log2() (in module hidet.ops)": [[65, "hidet.ops.log2"]], "logaddexp() (in module hidet.ops)": [[65, "hidet.ops.logaddexp"]], "logical_and() (in module hidet.ops)": [[65, "hidet.ops.logical_and"]], "logical_not() (in module hidet.ops)": [[65, "hidet.ops.logical_not"]], "logical_or() (in module hidet.ops)": [[65, "hidet.ops.logical_or"]], "logical_xor() (in module hidet.ops)": [[65, "hidet.ops.logical_xor"]], "logsigmoid() (in module hidet.ops)": [[65, "hidet.ops.logsigmoid"]], "logsoftmax() (in module hidet.ops)": [[65, "hidet.ops.logsoftmax"]], "lp_norm() (in module hidet.ops)": [[65, "hidet.ops.lp_norm"]], "make_complex() (in module hidet.ops)": [[65, "hidet.ops.make_complex"]], "matmul() (in module hidet.ops)": [[65, "hidet.ops.matmul"]], "matmul_cublas() (in module hidet.ops)": [[65, "hidet.ops.matmul_cublas"]], "matmul_nt() (in module hidet.ops)": [[65, "hidet.ops.matmul_nt"]], "matmul_x86() (in module hidet.ops)": [[65, "hidet.ops.matmul_x86"]], "max() (in module hidet.ops)": [[65, "hidet.ops.max"]], "max_pool2d() (in module hidet.ops)": [[65, "hidet.ops.max_pool2d"]], "max_pool3d() (in module hidet.ops)": [[65, "hidet.ops.max_pool3d"]], "maximum() (in module hidet.ops)": [[65, "hidet.ops.maximum"]], "mean() (in module hidet.ops)": [[65, "hidet.ops.mean"]], "meshgrid() (in module hidet.ops)": [[65, "hidet.ops.meshgrid"]], "min() (in module hidet.ops)": [[65, "hidet.ops.min"]], "minimum() (in module hidet.ops)": [[65, "hidet.ops.minimum"]], "mod() (in module hidet.ops)": [[65, "hidet.ops.mod"]], "multiply() (in module hidet.ops)": [[65, "hidet.ops.multiply"]], "negative() (in module hidet.ops)": [[65, "hidet.ops.negative"]], "not_equal() (in module hidet.ops)": [[65, "hidet.ops.not_equal"]], "pad() (in module hidet.ops)": [[65, "hidet.ops.pad"]], "permute_dims() (in module hidet.ops)": [[65, "hidet.ops.permute_dims"]], "positive() (in module hidet.ops)": [[65, "hidet.ops.positive"]], "pow() (in module hidet.ops)": [[65, "hidet.ops.pow"]], "prelu() (in module hidet.ops)": [[65, "hidet.ops.prelu"]], "prod() (in module hidet.ops)": [[65, "hidet.ops.prod"]], "real() (in module hidet.ops)": [[65, "hidet.ops.real"]], "rearrange() (in module hidet.ops)": [[65, "hidet.ops.rearrange"]], "reciprocal() (in module hidet.ops)": [[65, "hidet.ops.reciprocal"]], "reduce_scatter() (in module hidet.ops)": [[65, "hidet.ops.reduce_scatter"]], "relu() (in module hidet.ops)": [[65, "hidet.ops.relu"]], "relu6() (in module hidet.ops)": [[65, "hidet.ops.relu6"]], "remainder() (in module hidet.ops)": [[65, "hidet.ops.remainder"]], "repeat_interleave() (in module hidet.ops)": [[65, "hidet.ops.repeat_interleave"]], "reshape() (in module hidet.ops)": [[65, "hidet.ops.reshape"]], "resize2d() (in module hidet.ops)": [[65, "hidet.ops.resize2d"]], "roll() (in module hidet.ops)": [[65, "hidet.ops.roll"]], "round() (in module hidet.ops)": [[65, "hidet.ops.round"]], "rsqrt() (in module hidet.ops)": [[65, "hidet.ops.rsqrt"]], "scatter_add_() (in module hidet.ops)": [[65, "hidet.ops.scatter_add_"]], "set_strided_slice() (in module hidet.ops)": [[65, "hidet.ops.set_strided_slice"]], "sigmoid() (in module hidet.ops)": [[65, "hidet.ops.sigmoid"]], "sign() (in module hidet.ops)": [[65, "hidet.ops.sign"]], "silu() (in module hidet.ops)": [[65, "hidet.ops.silu"]], "sin() (in module hidet.ops)": [[65, "hidet.ops.sin"]], "sinh() (in module hidet.ops)": [[65, "hidet.ops.sinh"]], "softmax() (in module hidet.ops)": [[65, "hidet.ops.softmax"]], "softmin() (in module hidet.ops)": [[65, "hidet.ops.softmin"]], "softplus() (in module hidet.ops)": [[65, "hidet.ops.softplus"]], "softshrink() (in module hidet.ops)": [[65, "hidet.ops.softshrink"]], "softsign() (in module hidet.ops)": [[65, "hidet.ops.softsign"]], "split() (in module hidet.ops)": [[65, "hidet.ops.split"]], "sqrt() (in module hidet.ops)": [[65, "hidet.ops.sqrt"]], "square() (in module hidet.ops)": [[65, "hidet.ops.square"]], "squeeze() (in module hidet.ops)": [[65, "hidet.ops.squeeze"]], "std() (in module hidet.ops)": [[65, "hidet.ops.std"]], "strided_slice() (in module hidet.ops)": [[65, "hidet.ops.strided_slice"]], "subtract() (in module hidet.ops)": [[65, "hidet.ops.subtract"]], "sum() (in module hidet.ops)": [[65, "hidet.ops.sum"]], "symmetric_dequantize() (in module hidet.ops)": [[65, "hidet.ops.symmetric_dequantize"]], "symmetric_quantize() (in module hidet.ops)": [[65, "hidet.ops.symmetric_quantize"]], "take() (in module hidet.ops)": [[65, "hidet.ops.take"]], "tan() (in module hidet.ops)": [[65, "hidet.ops.tan"]], "tanh() (in module hidet.ops)": [[65, "hidet.ops.tanh"]], "tanhshrink() (in module hidet.ops)": [[65, "hidet.ops.tanhshrink"]], "tile() (in module hidet.ops)": [[65, "hidet.ops.tile"]], "transfer() (in module hidet.ops)": [[65, "hidet.ops.transfer"]], "transpose() (in module hidet.ops)": [[65, "hidet.ops.transpose"]], "tri() (in module hidet.ops)": [[65, "hidet.ops.tri"]], "tril() (in module hidet.ops)": [[65, "hidet.ops.tril"]], "triu() (in module hidet.ops)": [[65, "hidet.ops.triu"]], "trunc() (in module hidet.ops)": [[65, "hidet.ops.trunc"]], "unsqueeze() (in module hidet.ops)": [[65, "hidet.ops.unsqueeze"]], "var() (in module hidet.ops)": [[65, "hidet.ops.var"]], "wait_tensor() (in module hidet.ops)": [[65, "hidet.ops.wait_tensor"]], "where() (in module hidet.ops)": [[65, "hidet.ops.where"]], "optioncontext (class in hidet.option)": [[66, "hidet.option.OptionContext"]], "addr() (hidet.option.compile_server static method)": [[66, "hidet.option.compile_server.addr"]], "arch() (hidet.option.cpu static method)": [[66, "hidet.option.cpu.arch"]], "arch() (hidet.option.cuda static method)": [[66, "hidet.option.cuda.arch"]], "bench_config() (in module hidet.option)": [[66, "hidet.option.bench_config"]], "cache_dir() (in module hidet.option)": [[66, "hidet.option.cache_dir"]], "cache_operator() (in module hidet.option)": [[66, "hidet.option.cache_operator"]], "compile_server (class in hidet.option)": [[66, "hidet.option.compile_server"]], "context() (in module hidet.option)": [[66, "hidet.option.context"]], "cpu (class in hidet.option)": [[66, "hidet.option.cpu"]], "cuda (class in hidet.option)": [[66, "hidet.option.cuda"]], "current() (hidet.option.optioncontext static method)": [[66, "hidet.option.OptionContext.current"]], "current_context() (in module hidet.option)": [[66, "hidet.option.current_context"]], "debug_cache_tuning() (in module hidet.option)": [[66, "hidet.option.debug_cache_tuning"]], "debug_enable_var_id() (in module hidet.option)": [[66, "hidet.option.debug_enable_var_id"]], "debug_show_var_id() (in module hidet.option)": [[66, "hidet.option.debug_show_var_id"]], "debug_show_verbose_flow_graph() (in module hidet.option)": [[66, "hidet.option.debug_show_verbose_flow_graph"]], "debug_strict_broadcast_check() (in module hidet.option)": [[66, "hidet.option.debug_strict_broadcast_check"]], "dump_options() (in module hidet.option)": [[66, "hidet.option.dump_options"]], "enable() (hidet.option.compile_server static method)": [[66, "hidet.option.compile_server.enable"]], "enabled() (hidet.option.compile_server static method)": [[66, "hidet.option.compile_server.enabled"]], "execution_mode() (in module hidet.option)": [[66, "hidet.option.execution_mode"]], "get_arch() (hidet.option.cpu static method)": [[66, "hidet.option.cpu.get_arch"]], "get_arch() (hidet.option.cuda static method)": [[66, "hidet.option.cuda.get_arch"]], "get_arch_pair() (hidet.option.cuda static method)": [[66, "hidet.option.cuda.get_arch_pair"]], "get_bench_config() (in module hidet.option)": [[66, "hidet.option.get_bench_config"]], "get_cache_dir() (in module hidet.option)": [[66, "hidet.option.get_cache_dir"]], "get_cache_operator() (in module hidet.option)": [[66, "hidet.option.get_cache_operator"]], "get_execution_mode() (in module hidet.option)": [[66, "hidet.option.get_execution_mode"]], "get_option() (hidet.option.optioncontext method)": [[66, "hidet.option.OptionContext.get_option"]], "get_option() (in module hidet.option)": [[66, "hidet.option.get_option"]], "get_parallel_build() (in module hidet.option)": [[66, "hidet.option.get_parallel_build"]], "get_parallel_k() (in module hidet.option)": [[66, "hidet.option.get_parallel_k"]], "get_parallel_tune() (in module hidet.option)": [[66, "hidet.option.get_parallel_tune"]], "get_runtime_check() (in module hidet.option)": [[66, "hidet.option.get_runtime_check"]], "get_save_lower_ir() (in module hidet.option)": [[66, "hidet.option.get_save_lower_ir"]], "get_search_space() (in module hidet.option)": [[66, "hidet.option.get_search_space"]], "hidet.option": [[66, "module-hidet.option"]], "is_option_exist() (in module hidet.option)": [[66, "hidet.option.is_option_exist"]], "parallel_build() (in module hidet.option)": [[66, "hidet.option.parallel_build"]], "parallel_k() (in module hidet.option)": [[66, "hidet.option.parallel_k"]], "parallel_tune() (in module hidet.option)": [[66, "hidet.option.parallel_tune"]], "password() (hidet.option.compile_server static method)": [[66, "hidet.option.compile_server.password"]], "port() (hidet.option.compile_server static method)": [[66, "hidet.option.compile_server.port"]], "repo() (hidet.option.compile_server static method)": [[66, "hidet.option.compile_server.repo"]], "restore_options() (in module hidet.option)": [[66, "hidet.option.restore_options"]], "runtime_check() (in module hidet.option)": [[66, "hidet.option.runtime_check"]], "save_lower_ir() (in module hidet.option)": [[66, "hidet.option.save_lower_ir"]], "search_space() (in module hidet.option)": [[66, "hidet.option.search_space"]], "set_option() (hidet.option.optioncontext method)": [[66, "hidet.option.OptionContext.set_option"]], "set_option() (in module hidet.option)": [[66, "hidet.option.set_option"]], "username() (hidet.option.compile_server static method)": [[66, "hidet.option.compile_server.username"]], "module (class in hidet)": [[67, "hidet.Module"]], "asarray() (in module hidet)": [[67, "hidet.asarray"]], "empty() (in module hidet)": [[67, "hidet.empty"]], "empty_like() (in module hidet)": [[67, "hidet.empty_like"]], "from_dlpack() (in module hidet)": [[67, "hidet.from_dlpack"]], "from_torch() (in module hidet)": [[67, "hidet.from_torch"]], "full() (in module hidet)": [[67, "hidet.full"]], "full_like() (in module hidet)": [[67, "hidet.full_like"]], "hidet": [[67, "module-hidet"]], "load_compiled_graph() (in module hidet)": [[67, "hidet.load_compiled_graph"]], "ones() (in module hidet)": [[67, "hidet.ones"]], "ones_like() (in module hidet)": [[67, "hidet.ones_like"]], "randn() (in module hidet)": [[67, "hidet.randn"]], "randn_like() (in module hidet)": [[67, "hidet.randn_like"]], "save_compiled_graph() (in module hidet)": [[67, "hidet.save_compiled_graph"]], "script() (in module hidet)": [[67, "hidet.script"]], "symbol() (in module hidet)": [[67, "hidet.symbol"]], "symbol_like() (in module hidet)": [[67, "hidet.symbol_like"]], "trace_from() (in module hidet)": [[67, "hidet.trace_from"]], "zeros() (in module hidet)": [[67, "hidet.zeros"]], "zeros_like() (in module hidet)": [[67, "hidet.zeros_like"]], "compiledfunction (class in hidet.runtime)": [[68, "hidet.runtime.CompiledFunction"]], "compiledgraph (class in hidet.runtime)": [[68, "hidet.runtime.CompiledGraph"]], "compiledmodule (class in hidet.runtime)": [[68, "hidet.runtime.CompiledModule"]], "compiledtask (class in hidet.runtime)": [[68, "hidet.runtime.CompiledTask"]], "create_compiled_app() (in module hidet.runtime)": [[68, "hidet.runtime.create_compiled_app"]], "cuda_graph() (hidet.runtime.compiledgraph method)": [[68, "hidet.runtime.CompiledGraph.cuda_graph"]], "functions (hidet.runtime.compiledmodule attribute)": [[68, "hidet.runtime.CompiledModule.functions"]], "hidet.runtime": [[68, "module-hidet.runtime"]], "load_compiled_app() (in module hidet.runtime)": [[68, "hidet.runtime.load_compiled_app"]], "load_compiled_graph() (in module hidet.runtime)": [[68, "hidet.runtime.load_compiled_graph"]], "load_compiled_module() (in module hidet.runtime)": [[68, "hidet.runtime.load_compiled_module"]], "load_compiled_task() (in module hidet.runtime)": [[68, "hidet.runtime.load_compiled_task"]], "module_dir (hidet.runtime.compiledmodule attribute)": [[68, "hidet.runtime.CompiledModule.module_dir"]], "profile() (hidet.runtime.compiledfunction method)": [[68, "hidet.runtime.CompiledFunction.profile"]], "profile() (hidet.runtime.compiledmodule method)": [[68, "hidet.runtime.CompiledModule.profile"]], "profile() (hidet.runtime.compiledtask method)": [[68, "hidet.runtime.CompiledTask.profile"]], "run_async() (hidet.runtime.compiledgraph method)": [[68, "hidet.runtime.CompiledGraph.run_async"]], "run_async() (hidet.runtime.compiledtask method)": [[68, "hidet.runtime.CompiledTask.run_async"]], "save() (hidet.runtime.compiledgraph method)": [[68, "hidet.runtime.CompiledGraph.save"]], "save_compiled_app() (in module hidet.runtime)": [[68, "hidet.runtime.save_compiled_app"]], "save_compiled_graph() (in module hidet.runtime)": [[68, "hidet.runtime.save_compiled_graph"]], "set_weights() (hidet.runtime.compiledgraph method)": [[68, "hidet.runtime.CompiledGraph.set_weights"]], "shared_library (hidet.runtime.compiledmodule attribute)": [[68, "hidet.runtime.CompiledModule.shared_library"]], "source() (hidet.runtime.compiledmodule method)": [[68, "hidet.runtime.CompiledModule.source"]], "tensor (class in hidet)": [[69, "hidet.Tensor"]], "astype() (hidet.tensor method)": [[69, "hidet.Tensor.astype"]], "contiguous() (hidet.tensor method)": [[69, "hidet.Tensor.contiguous"]], "copy() (hidet.tensor method)": [[69, "hidet.Tensor.copy"]], "copy_async() (hidet.tensor method)": [[69, "hidet.Tensor.copy_async"]], "cpu() (hidet.tensor method)": [[69, "hidet.Tensor.cpu"]], "cpu_async() (hidet.tensor method)": [[69, "hidet.Tensor.cpu_async"]], "cuda() (hidet.tensor method)": [[69, "hidet.Tensor.cuda"]], "cuda_async() (hidet.tensor method)": [[69, "hidet.Tensor.cuda_async"]], "detach() (hidet.tensor method)": [[69, "hidet.Tensor.detach"]], "device (hidet.tensor attribute)": [[69, "hidet.Tensor.device"]], "dtype (hidet.tensor attribute)": [[69, "hidet.Tensor.dtype"]], "is_symbolic() (hidet.tensor method)": [[69, "hidet.Tensor.is_symbolic"]], "item() (hidet.tensor method)": [[69, "hidet.Tensor.item"]], "layout (hidet.tensor attribute)": [[69, "hidet.Tensor.layout"]], "mean() (hidet.tensor method)": [[69, "hidet.Tensor.mean"]], "nbytes (hidet.tensor attribute)": [[69, "hidet.Tensor.nbytes"]], "numpy() (hidet.tensor method)": [[69, "hidet.Tensor.numpy"]], "op (hidet.tensor attribute)": [[69, "hidet.Tensor.op"]], "rearrange() (hidet.tensor method)": [[69, "hidet.Tensor.rearrange"]], "reshape() (hidet.tensor method)": [[69, "hidet.Tensor.reshape"]], "shape (hidet.tensor attribute)": [[69, "hidet.Tensor.shape"]], "signature() (hidet.tensor method)": [[69, "hidet.Tensor.signature"]], "size (hidet.tensor attribute)": [[69, "hidet.Tensor.size"]], "squeeze() (hidet.tensor method)": [[69, "hidet.Tensor.squeeze"]], "storage (hidet.tensor attribute)": [[69, "hidet.Tensor.storage"]], "sum() (hidet.tensor method)": [[69, "hidet.Tensor.sum"]], "to() (hidet.tensor method)": [[69, "hidet.Tensor.to"]], "to_device() (hidet.tensor method)": [[69, "hidet.Tensor.to_device"]], "tolist() (hidet.tensor method)": [[69, "hidet.Tensor.tolist"]], "torch() (hidet.tensor method)": [[69, "hidet.Tensor.torch"]], "trace (hidet.tensor attribute)": [[69, "hidet.Tensor.trace"]], "unsqueeze() (hidet.tensor method)": [[69, "hidet.Tensor.unsqueeze"]], "benchmark_func() (in module hidet.testing)": [[70, "hidet.testing.benchmark_func"]], "hidet.testing": [[70, "module-hidet.testing"]], "directedgraph (class in hidet.utils)": [[71, "hidet.utils.DirectedGraph"]], "add_edge() (hidet.utils.directedgraph method)": [[71, "hidet.utils.DirectedGraph.add_edge"]], "add_node() (hidet.utils.directedgraph method)": [[71, "hidet.utils.DirectedGraph.add_node"]], "cdiv() (in module hidet.utils)": [[71, "hidet.utils.cdiv"]], "error_tolerance() (in module hidet.utils)": [[71, "hidet.utils.error_tolerance"]], "factorize() (in module hidet.utils)": [[71, "hidet.utils.factorize"]], "from_edges() (hidet.utils.directedgraph static method)": [[71, "hidet.utils.DirectedGraph.from_edges"]], "gcd() (in module hidet.utils)": [[71, "hidet.utils.gcd"]], "has_edge() (hidet.utils.directedgraph method)": [[71, "hidet.utils.DirectedGraph.has_edge"]], "has_node() (hidet.utils.directedgraph method)": [[71, "hidet.utils.DirectedGraph.has_node"]], "hidet.utils": [[71, "module-hidet.utils"]], "initialize() (in module hidet.utils)": [[71, "hidet.utils.initialize"]], "lcm() (in module hidet.utils)": [[71, "hidet.utils.lcm"]], "topological_order() (hidet.utils.directedgraph method)": [[71, "hidet.utils.DirectedGraph.topological_order"]]}})